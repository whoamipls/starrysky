// Version 1.48.0 3d-force-graph - https://github.com/vasturiano/3d-force-graph
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e=e||self).ForceGraph3D=t()}(this,function(){"use strict";function e(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function t(t){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{},i=Object.keys(r);"function"==typeof Object.getOwnPropertySymbols&&(i=i.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),i.forEach(function(n){e(t,n,r[n])})}return t}function n(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}
// Polyfills
()}
/**
   * https://github.com/mrdoob/eventdispatcher.js/
   */
function r(){}!function(e,t){void 0===t&&(t={});var n=t.insertAt;if(e&&"undefined"!=typeof document){var r=document.head||document.getElementsByTagName("head")[0],i=document.createElement("style");i.type="text/css","top"===n&&r.firstChild?r.insertBefore(i,r.firstChild):r.appendChild(i),i.styleSheet?i.styleSheet.cssText=e:i.appendChild(document.createTextNode(e))}}(".graph-nav-info {\r\n  bottom: 5px;\r\n  width: 100%;\r\n  text-align: center;\r\n  color: slategrey;\r\n  opacity: 0.7;\r\n  font-size: 10px;\r\n}\r\n\r\n.graph-info-msg {\r\n  top: 50%;\r\n  width: 100%;\r\n  text-align: center;\r\n  color: lavender;\r\n  opacity: 0.7;\r\n  font-size: 22px;\r\n}\r\n\r\n.graph-tooltip {\r\n  color: lavender;\r\n  font-size: 18px;\r\n  transform: translate(-50%, 25px);\r\n}\r\n\r\n.graph-info-msg, .graph-nav-info, .graph-tooltip {\r\n  position: absolute;\r\n  font-family: Sans-serif;\r\n}\r\n\r\n.grabbable {\r\n  cursor: move;\r\n  cursor: grab;\r\n  cursor: -moz-grab;\r\n  cursor: -webkit-grab;\r\n}\r\n\r\n.grabbable:active {\r\n  cursor: grabbing;\r\n  cursor: -moz-grabbing;\r\n  cursor: -webkit-grabbing;\r\n}"),void 0===Number.EPSILON&&(Number.EPSILON=Math.pow(2,-52)),void 0===Number.isInteger&&(
// Missing in IE
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger
Number.isInteger=function(e){return"number"==typeof e&&isFinite(e)&&Math.floor(e)===e}),
//
void 0===Math.sign&&(
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign
Math.sign=function(e){return e<0?-1:e>0?1:+e}),"name"in Function.prototype==!1&&
// Missing in IE
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name
Object.defineProperty(Function.prototype,"name",{get:function(){return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1]}}),void 0===Object.assign&&(Object.assign=function(e){if(null==e)throw new TypeError("Cannot convert undefined or null to object");for(var t=Object(e),n=1;n<arguments.length;n++){var r=arguments[n];if(null!=r)for(var i in r)Object.prototype.hasOwnProperty.call(r,i)&&(t[i]=r[i])}return t}),Object.assign(r.prototype,{addEventListener:function(e,t){void 0===this._listeners&&(this._listeners={});var n=this._listeners;void 0===n[e]&&(n[e]=[]),-1===n[e].indexOf(t)&&n[e].push(t)},hasEventListener:function(e,t){if(void 0===this._listeners)return!1;var n=this._listeners;return void 0!==n[e]&&-1!==n[e].indexOf(t)},removeEventListener:function(e,t){if(void 0!==this._listeners){var n=this._listeners[e];if(void 0!==n){var r=n.indexOf(t);-1!==r&&n.splice(r,1)}}},dispatchEvent:function(e){if(void 0!==this._listeners){var t=this._listeners[e.type];if(void 0!==t){e.target=this;for(var n=t.slice(0),r=0,i=n.length;r<i;r++)n[r].call(this,e)}}}});var i,a,o,s="104",c={LEFT:0,MIDDLE:1,RIGHT:2},l=0,h=1,u=2,d=1,f=2,p=0,m=1,g=2,v=0,y=1,b=2,x=0,w=1,_=2,M=3,E=4,S=5,T=100,A=101,L=102,P=103,C=104,R=200,O=201,N=202,I=203,D=204,z=205,k=206,B=207,U=208,F=209,G=210,j=0,H=1,V=2,W=3,q=4,X=5,Y=6,Z=7,J=0,Q=1,K=2,$=0,ee=1,te=2,ne=3,re=4,ie=5,ae=301,oe=302,se=303,ce=304,le=305,he=306,ue=307,de=1e3,fe=1001,pe=1002,me=1003,ge=1004,ve=1005,ye=1006,be=1007,xe=1008,we=1009,_e=1010,Me=1011,Ee=1012,Se=1013,Te=1014,Ae=1015,Le=1016,Pe=1017,Ce=1018,Re=1019,Oe=1020,Ne=1021,Ie=1022,De=1023,ze=1024,ke=1025,Be=De,Ue=1026,Fe=1027,Ge=1028,je=33776,He=33777,Ve=33778,We=33779,qe=35840,Xe=35841,Ye=35842,Ze=35843,Je=36196,Qe=37808,Ke=37809,$e=37810,et=37811,tt=37812,nt=37813,rt=37814,it=37815,at=37816,ot=37817,st=37818,ct=37819,lt=37820,ht=37821,ut=2201,dt=2400,ft=0,pt=1,mt=2,gt=3e3,vt=3001,yt=3007,bt=3002,xt=3004,wt=3005,_t=3006,Mt=3200,Et=3201,St=0,Tt=1,At={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){for(
// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136
var e=[],t=0;t<256;t++)e[t]=(t<16?"0":"")+t.toString(16);return function(){var t=4294967295*Math.random()|0,n=4294967295*Math.random()|0,r=4294967295*Math.random()|0,i=4294967295*Math.random()|0;
// .toUpperCase() here flattens concatenated strings to save heap memory space.
return(e[255&t]+e[t>>8&255]+e[t>>16&255]+e[t>>24&255]+"-"+e[255&n]+e[n>>8&255]+"-"+e[n>>16&15|64]+e[n>>24&255]+"-"+e[63&r|128]+e[r>>8&255]+"-"+e[r>>16&255]+e[r>>24&255]+e[255&i]+e[i>>8&255]+e[i>>16&255]+e[i>>24&255]).toUpperCase()}}(),clamp:function(e,t,n){return Math.max(t,Math.min(n,e))},
// compute euclidian modulo of m % n
// https://en.wikipedia.org/wiki/Modulo_operation
euclideanModulo:function(e,t){return(e%t+t)%t},
// Linear mapping from range <a1, a2> to range <b1, b2>
mapLinear:function(e,t,n,r,i){return r+(e-t)*(i-r)/(n-t)},
// https://en.wikipedia.org/wiki/Linear_interpolation
lerp:function(e,t,n){return(1-n)*e+n*t},
// http://en.wikipedia.org/wiki/Smoothstep
smoothstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t))*e*(3-2*e)},smootherstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t))*e*e*(e*(6*e-15)+10)},
// Random integer from <low, high> interval
randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},
// Random float from <low, high> interval
randFloat:function(e,t){return e+Math.random()*(t-e)},
// Random float from <-range/2, range/2> interval
randFloatSpread:function(e){return e*(.5-Math.random())},degToRad:function(e){return e*At.DEG2RAD},radToDeg:function(e){return e*At.RAD2DEG},isPowerOfTwo:function(e){return 0==(e&e-1)&&0!==e},ceilPowerOfTwo:function(e){return Math.pow(2,Math.ceil(Math.log(e)/Math.LN2))},floorPowerOfTwo:function(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))}};
/**
   * @author mrdoob / http://mrdoob.com/
   * @author philogb / http://blog.thejit.org/
   * @author egraether / http://egraether.com/
   * @author zz85 / http://www.lab4games.net/zz85/blog
   */
function Lt(e,t){this.x=e||0,this.y=t||0}
/**
   * @author mikael emtinger / http://gomo.se/
   * @author alteredq / http://alteredqualia.com/
   * @author WestLangley / http://github.com/WestLangley
   * @author bhouston / http://clara.io
   */
function Pt(e,t,n,r){this._x=e||0,this._y=t||0,this._z=n||0,this._w=void 0!==r?r:1}
/**
   * @author mrdoob / http://mrdoob.com/
   * @author kile / http://kile.stravaganza.org/
   * @author philogb / http://blog.thejit.org/
   * @author mikael emtinger / http://gomo.se/
   * @author egraether / http://egraether.com/
   * @author WestLangley / http://github.com/WestLangley
   */
function Ct(e,t,n){this.x=e||0,this.y=t||0,this.z=n||0}
/**
   * @author alteredq / http://alteredqualia.com/
   * @author WestLangley / http://github.com/WestLangley
   * @author bhouston / http://clara.io
   * @author tschw
   */
function Rt(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}Object.defineProperties(Lt.prototype,{width:{get:function(){return this.x},set:function(e){this.x=e}},height:{get:function(){return this.y},set:function(e){this.y=e}}}),Object.assign(Lt.prototype,{isVector2:!0,set:function(e,t){return this.x=e,this.y=t,this},setScalar:function(e){return this.x=e,this.y=e,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(e){return this.x=e.x,this.y=e.y,this},add:function(e,t){return void 0!==t?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)},addScalar:function(e){return this.x+=e,this.y+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this},sub:function(e,t){return void 0!==t?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)},subScalar:function(e){return this.x-=e,this.y-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this},multiply:function(e){return this.x*=e.x,this.y*=e.y,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this},divide:function(e){return this.x/=e.x,this.y/=e.y,this},divideScalar:function(e){return this.multiplyScalar(1/e)},applyMatrix3:function(e){var t=this.x,n=this.y,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6],this.y=r[1]*t+r[4]*n+r[7],this},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this},clamp:function(e,t){
// assumes min < max, componentwise
return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this},clampScalar:function(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this},clampLength:function(e,t){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(e){return this.x*e.x+this.y*e.y},cross:function(e){return this.x*e.y-this.y*e.x},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)},normalize:function(){return this.divideScalar(this.length()||1)},angle:function(){
// computes the angle in radians with respect to the positive x-axis
var e=Math.atan2(this.y,this.x);return e<0&&(e+=2*Math.PI),e},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,n=this.y-e.y;return t*t+n*n},manhattanDistanceTo:function(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)},setLength:function(e){return this.normalize().multiplyScalar(e)},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this},lerpVectors:function(e,t,n){return this.subVectors(t,e).multiplyScalar(n).add(e)},equals:function(e){return e.x===this.x&&e.y===this.y},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e},fromBufferAttribute:function(e,t,n){return void 0!==n&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this},rotateAround:function(e,t){var n=Math.cos(t),r=Math.sin(t),i=this.x-e.x,a=this.y-e.y;return this.x=i*n-a*r+e.x,this.y=i*r+a*n+e.y,this}}),Object.assign(Pt,{slerp:function(e,t,n,r){return n.copy(e).slerp(t,r)},slerpFlat:function(e,t,n,r,i,a,o){
// fuzz-free, array-based Quaternion SLERP operation
var s=n[r+0],c=n[r+1],l=n[r+2],h=n[r+3],u=i[a+0],d=i[a+1],f=i[a+2],p=i[a+3];if(h!==p||s!==u||c!==d||l!==f){var m=1-o,g=s*u+c*d+l*f+h*p,v=g>=0?1:-1,y=1-g*g;
// Skip the Slerp for tiny steps to avoid numeric problems:
if(y>Number.EPSILON){var b=Math.sqrt(y),x=Math.atan2(b,g*v);m=Math.sin(m*x)/b,o=Math.sin(o*x)/b}var w=o*v;
// Normalize in case we just did a lerp:
if(s=s*m+u*w,c=c*m+d*w,l=l*m+f*w,h=h*m+p*w,m===1-o){var _=1/Math.sqrt(s*s+c*c+l*l+h*h);s*=_,c*=_,l*=_,h*=_}}e[t]=s,e[t+1]=c,e[t+2]=l,e[t+3]=h}}),Object.defineProperties(Pt.prototype,{x:{get:function(){return this._x},set:function(e){this._x=e,this.onChangeCallback()}},y:{get:function(){return this._y},set:function(e){this._y=e,this.onChangeCallback()}},z:{get:function(){return this._z},set:function(e){this._z=e,this.onChangeCallback()}},w:{get:function(){return this._w},set:function(e){this._w=e,this.onChangeCallback()}}}),Object.assign(Pt.prototype,{isQuaternion:!0,set:function(e,t,n,r){return this._x=e,this._y=t,this._z=n,this._w=r,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w)},copy:function(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this.onChangeCallback(),this},setFromEuler:function(e,t){if(!e||!e.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");var n=e._x,r=e._y,i=e._z,a=e.order,o=Math.cos,s=Math.sin,c=o(n/2),l=o(r/2),h=o(i/2),u=s(n/2),d=s(r/2),f=s(i/2);
// http://www.mathworks.com/matlabcentral/fileexchange/
// 	20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/
//	content/SpinCalc.m
return"XYZ"===a?(this._x=u*l*h+c*d*f,this._y=c*d*h-u*l*f,this._z=c*l*f+u*d*h,this._w=c*l*h-u*d*f):"YXZ"===a?(this._x=u*l*h+c*d*f,this._y=c*d*h-u*l*f,this._z=c*l*f-u*d*h,this._w=c*l*h+u*d*f):"ZXY"===a?(this._x=u*l*h-c*d*f,this._y=c*d*h+u*l*f,this._z=c*l*f+u*d*h,this._w=c*l*h-u*d*f):"ZYX"===a?(this._x=u*l*h-c*d*f,this._y=c*d*h+u*l*f,this._z=c*l*f-u*d*h,this._w=c*l*h+u*d*f):"YZX"===a?(this._x=u*l*h+c*d*f,this._y=c*d*h+u*l*f,this._z=c*l*f-u*d*h,this._w=c*l*h-u*d*f):"XZY"===a&&(this._x=u*l*h-c*d*f,this._y=c*d*h-u*l*f,this._z=c*l*f+u*d*h,this._w=c*l*h+u*d*f),!1!==t&&this.onChangeCallback(),this},setFromAxisAngle:function(e,t){
// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm
// assumes axis is normalized
var n=t/2,r=Math.sin(n);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(n),this.onChangeCallback(),this},setFromRotationMatrix:function(e){
// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm
// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)
var t,n=e.elements,r=n[0],i=n[4],a=n[8],o=n[1],s=n[5],c=n[9],l=n[2],h=n[6],u=n[10],d=r+s+u;return d>0?(t=.5/Math.sqrt(d+1),this._w=.25/t,this._x=(h-c)*t,this._y=(a-l)*t,this._z=(o-i)*t):r>s&&r>u?(t=2*Math.sqrt(1+r-s-u),this._w=(h-c)/t,this._x=.25*t,this._y=(i+o)/t,this._z=(a+l)/t):s>u?(t=2*Math.sqrt(1+s-r-u),this._w=(a-l)/t,this._x=(i+o)/t,this._y=.25*t,this._z=(c+h)/t):(t=2*Math.sqrt(1+u-r-s),this._w=(o-i)/t,this._x=(a+l)/t,this._y=(c+h)/t,this._z=.25*t),this.onChangeCallback(),this},setFromUnitVectors:function(e,t){
// assumes direction vectors vFrom and vTo are normalized
var n=e.dot(t)+1;return n<1e-6?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(
// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3
this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()},angleTo:function(e){return 2*Math.acos(Math.abs(At.clamp(this.dot(e),-1,1)))},rotateTowards:function(e,t){var n=this.angleTo(e);if(0===n)return this;var r=Math.min(1,t/n);return this.slerp(e,r),this},inverse:function(){
// quaternion is assumed to have unit length
return this.conjugate()},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this.onChangeCallback(),this},dot:function(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this.onChangeCallback(),this},multiply:function(e,t){return void 0!==t?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)},premultiply:function(e){return this.multiplyQuaternions(e,this)},multiplyQuaternions:function(e,t){
// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm
var n=e._x,r=e._y,i=e._z,a=e._w,o=t._x,s=t._y,c=t._z,l=t._w;return this._x=n*l+a*o+r*c-i*s,this._y=r*l+a*s+i*o-n*c,this._z=i*l+a*c+n*s-r*o,this._w=a*l-n*o-r*s-i*c,this.onChangeCallback(),this},slerp:function(e,t){if(0===t)return this;if(1===t)return this.copy(e);var n=this._x,r=this._y,i=this._z,a=this._w,o=a*e._w+n*e._x+r*e._y+i*e._z;
// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/
if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=a,this._x=n,this._y=r,this._z=i,this;var s=1-o*o;if(s<=Number.EPSILON){var c=1-t;return this._w=c*a+t*this._w,this._x=c*n+t*this._x,this._y=c*r+t*this._y,this._z=c*i+t*this._z,this.normalize()}var l=Math.sqrt(s),h=Math.atan2(l,o),u=Math.sin((1-t)*h)/l,d=Math.sin(t*h)/l;return this._w=a*u+this._w*d,this._x=n*u+this._x*d,this._y=r*u+this._y*d,this._z=i*u+this._z*d,this.onChangeCallback(),this},equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w},fromArray:function(e,t){return void 0===t&&(t=0),this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this.onChangeCallback(),this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e},onChange:function(e){return this.onChangeCallback=e,this},onChangeCallback:function(){}}),Object.assign(Ct.prototype,{isVector3:!0,set:function(e,t,n){return this.x=e,this.y=t,this.z=n,this},setScalar:function(e){return this.x=e,this.y=e,this.z=e,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},add:function(e,t){return void 0!==t?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this},sub:function(e,t){return void 0!==t?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)},subScalar:function(e){return this.x-=e,this.y-=e,this.z-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this},multiply:function(e,t){return void 0!==t?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this},multiplyVectors:function(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this},applyEuler:(a=new Pt,function(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(a.setFromEuler(e))}),applyAxisAngle:function(){var e=new Pt;return function(t,n){return this.applyQuaternion(e.setFromAxisAngle(t,n))}}(),applyMatrix3:function(e){var t=this.x,n=this.y,r=this.z,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6]*r,this.y=i[1]*t+i[4]*n+i[7]*r,this.z=i[2]*t+i[5]*n+i[8]*r,this},applyMatrix4:function(e){var t=this.x,n=this.y,r=this.z,i=e.elements,a=1/(i[3]*t+i[7]*n+i[11]*r+i[15]);return this.x=(i[0]*t+i[4]*n+i[8]*r+i[12])*a,this.y=(i[1]*t+i[5]*n+i[9]*r+i[13])*a,this.z=(i[2]*t+i[6]*n+i[10]*r+i[14])*a,this},applyQuaternion:function(e){var t=this.x,n=this.y,r=this.z,i=e.x,a=e.y,o=e.z,s=e.w,c=s*t+a*r-o*n,l=s*n+o*t-i*r,h=s*r+i*n-a*t,u=-i*t-a*n-o*r;
// calculate result * inverse quat
return this.x=c*s+u*-i+l*-o-h*-a,this.y=l*s+u*-a+h*-i-c*-o,this.z=h*s+u*-o+c*-a-l*-i,this},project:function(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)},unproject:function(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)},transformDirection:function(e){
// input: THREE.Matrix4 affine matrix
// vector interpreted as a direction
var t=this.x,n=this.y,r=this.z,i=e.elements;return this.x=i[0]*t+i[4]*n+i[8]*r,this.y=i[1]*t+i[5]*n+i[9]*r,this.z=i[2]*t+i[6]*n+i[10]*r,this.normalize()},divide:function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this},divideScalar:function(e){return this.multiplyScalar(1/e)},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this},clamp:function(e,t){
// assumes min < max, componentwise
return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this},clampScalar:function(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this},clampLength:function(e,t){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z},
// TODO lengthSquared?
lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(e){return this.normalize().multiplyScalar(e)},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this},lerpVectors:function(e,t,n){return this.subVectors(t,e).multiplyScalar(n).add(e)},cross:function(e,t){return void 0!==t?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t)):this.crossVectors(this,e)},crossVectors:function(e,t){var n=e.x,r=e.y,i=e.z,a=t.x,o=t.y,s=t.z;return this.x=r*s-i*o,this.y=i*a-n*s,this.z=n*o-r*a,this},projectOnVector:function(e){var t=e.dot(this)/e.lengthSq();return this.copy(e).multiplyScalar(t)},projectOnPlane:(i=new Ct,function(e){return i.copy(this).projectOnVector(e),this.sub(i)}),reflect:function(){
// reflect incident vector off plane orthogonal to normal
// normal is assumed to have unit length
var e=new Ct;return function(t){return this.sub(e.copy(t).multiplyScalar(2*this.dot(t)))}}(),angleTo:function(e){var t=this.dot(e)/Math.sqrt(this.lengthSq()*e.lengthSq());
// clamp, to handle numerical problems
return Math.acos(At.clamp(t,-1,1))},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,n=this.y-e.y,r=this.z-e.z;return t*t+n*n+r*r},manhattanDistanceTo:function(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)},setFromSpherical:function(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)},setFromSphericalCoords:function(e,t,n){var r=Math.sin(t)*e;return this.x=r*Math.sin(n),this.y=Math.cos(t)*e,this.z=r*Math.cos(n),this},setFromCylindrical:function(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)},setFromCylindricalCoords:function(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this},setFromMatrixPosition:function(e){var t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this},setFromMatrixScale:function(e){var t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=r,this},setFromMatrixColumn:function(e,t){return this.fromArray(e.elements,4*t)},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e},fromBufferAttribute:function(e,t,n){return void 0!==n&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}}),Object.assign(Rt.prototype,{isMatrix3:!0,set:function(e,t,n,r,i,a,o,s,c){var l=this.elements;return l[0]=e,l[1]=r,l[2]=o,l[3]=t,l[4]=i,l[5]=s,l[6]=n,l[7]=a,l[8]=c,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},clone:function(){return(new this.constructor).fromArray(this.elements)},copy:function(e){var t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this},setFromMatrix4:function(e){var t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this},applyToBufferAttribute:function(){var e=new Ct;return function(t){for(var n=0,r=t.count;n<r;n++)e.x=t.getX(n),e.y=t.getY(n),e.z=t.getZ(n),e.applyMatrix3(this),t.setXYZ(n,e.x,e.y,e.z);return t}}(),multiply:function(e){return this.multiplyMatrices(this,e)},premultiply:function(e){return this.multiplyMatrices(e,this)},multiplyMatrices:function(e,t){var n=e.elements,r=t.elements,i=this.elements,a=n[0],o=n[3],s=n[6],c=n[1],l=n[4],h=n[7],u=n[2],d=n[5],f=n[8],p=r[0],m=r[3],g=r[6],v=r[1],y=r[4],b=r[7],x=r[2],w=r[5],_=r[8];return i[0]=a*p+o*v+s*x,i[3]=a*m+o*y+s*w,i[6]=a*g+o*b+s*_,i[1]=c*p+l*v+h*x,i[4]=c*m+l*y+h*w,i[7]=c*g+l*b+h*_,i[2]=u*p+d*v+f*x,i[5]=u*m+d*y+f*w,i[8]=u*g+d*b+f*_,this},multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this},determinant:function(){var e=this.elements,t=e[0],n=e[1],r=e[2],i=e[3],a=e[4],o=e[5],s=e[6],c=e[7],l=e[8];return t*a*l-t*o*c-n*i*l+n*o*s+r*i*c-r*a*s},getInverse:function(e,t){e&&e.isMatrix4&&console.error("THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.");var n=e.elements,r=this.elements,i=n[0],a=n[1],o=n[2],s=n[3],c=n[4],l=n[5],h=n[6],u=n[7],d=n[8],f=d*c-l*u,p=l*h-d*s,m=u*s-c*h,g=i*f+a*p+o*m;if(0===g){var v="THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0";if(!0===t)throw new Error(v);return console.warn(v),this.identity()}var y=1/g;return r[0]=f*y,r[1]=(o*u-d*a)*y,r[2]=(l*a-o*c)*y,r[3]=p*y,r[4]=(d*i-o*h)*y,r[5]=(o*s-l*i)*y,r[6]=m*y,r[7]=(a*h-u*i)*y,r[8]=(c*i-a*s)*y,this},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this},getNormalMatrix:function(e){return this.setFromMatrix4(e).getInverse(this).transpose()},transposeIntoArray:function(e){var t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this},setUvTransform:function(e,t,n,r,i,a,o){var s=Math.cos(i),c=Math.sin(i);this.set(n*s,n*c,-n*(s*a+c*o)+a+e,-r*c,r*s,-r*(-c*a+s*o)+o+t,0,0,1)},scale:function(e,t){var n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=t,n[4]*=t,n[7]*=t,this},rotate:function(e){var t=Math.cos(e),n=Math.sin(e),r=this.elements,i=r[0],a=r[3],o=r[6],s=r[1],c=r[4],l=r[7];return r[0]=t*i+n*s,r[3]=t*a+n*c,r[6]=t*o+n*l,r[1]=-n*i+t*s,r[4]=-n*a+t*c,r[7]=-n*o+t*l,this},translate:function(e,t){var n=this.elements;return n[0]+=e*n[2],n[3]+=e*n[5],n[6]+=e*n[8],n[1]+=t*n[2],n[4]+=t*n[5],n[7]+=t*n[8],this},equals:function(e){for(var t=this.elements,n=e.elements,r=0;r<9;r++)if(t[r]!==n[r])return!1;return!0},fromArray:function(e,t){void 0===t&&(t=0);for(var n=0;n<9;n++)this.elements[n]=e[n+t];return this},toArray:function(e,t){void 0===e&&(e=[]),void 0===t&&(t=0);var n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}});var Ot,Nt,It,Dt,zt,kt,Bt,Ut,Ft,Gt,jt,Ht={getDataURL:function(e){var t;if("undefined"==typeof HTMLCanvasElement)return e.src;if(e instanceof HTMLCanvasElement)t=e;else{void 0===o&&(o=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),o.width=e.width,o.height=e.height;var n=o.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=o}return t.width>2048||t.height>2048?t.toDataURL("image/jpeg",.6):t.toDataURL("image/png")}},Vt=0;
/**
   * @author mrdoob / http://mrdoob.com/
   * @author alteredq / http://alteredqualia.com/
   * @author szimek / https://github.com/szimek/
   */function Wt(e,t,n,r,i,a,o,s,c,l){Object.defineProperty(this,"id",{value:Vt++}),this.uuid=At.generateUUID(),this.name="",this.image=void 0!==e?e:Wt.DEFAULT_IMAGE,this.mipmaps=[],this.mapping=void 0!==t?t:Wt.DEFAULT_MAPPING,this.wrapS=void 0!==n?n:fe,this.wrapT=void 0!==r?r:fe,this.magFilter=void 0!==i?i:ye,this.minFilter=void 0!==a?a:xe,this.anisotropy=void 0!==c?c:1,this.format=void 0!==o?o:De,this.type=void 0!==s?s:we,this.offset=new Lt(0,0),this.repeat=new Lt(1,1),this.center=new Lt(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Rt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)
// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.
//
// Also changing the encoding after already used by a Material will not automatically make the Material
// update. You need to explicitly call Material.needsUpdate to trigger it to recompile.
this.encoding=void 0!==l?l:gt,this.version=0,this.onUpdate=null}
/**
   * @author supereggbert / http://www.paulbrunt.co.uk/
   * @author philogb / http://blog.thejit.org/
   * @author mikael emtinger / http://gomo.se/
   * @author egraether / http://egraether.com/
   * @author WestLangley / http://github.com/WestLangley
   */
function qt(e,t,n,r){this.x=e||0,this.y=t||0,this.z=n||0,this.w=void 0!==r?r:1}
/**
   * @author szimek / https://github.com/szimek/
   * @author alteredq / http://alteredqualia.com/
   * @author Marius Kintel / https://github.com/kintel
   */
/*
   In options, we can specify:
   * Texture parameters for an auto-generated target texture
   * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers
  */
function Xt(e,t,n){this.width=e,this.height=t,this.scissor=new qt(0,0,e,t),this.scissorTest=!1,this.viewport=new qt(0,0,e,t),n=n||{},this.texture=new Wt(void 0,void 0,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.generateMipmaps=void 0!==n.generateMipmaps&&n.generateMipmaps,this.texture.minFilter=void 0!==n.minFilter?n.minFilter:ye,this.depthBuffer=void 0===n.depthBuffer||n.depthBuffer,this.stencilBuffer=void 0===n.stencilBuffer||n.stencilBuffer,this.depthTexture=void 0!==n.depthTexture?n.depthTexture:null}
/**
   * @author Mugen87 / https://github.com/Mugen87
   * @author Matt DesLauriers / @mattdesl
   */
function Yt(e,t,n){Xt.call(this,e,t,n),this.samples=4}
/**
   * @author alteredq / http://alteredqualia.com
   */
function Zt(e,t,n){Xt.call(this,e,t,n)}
/**
   * @author alteredq / http://alteredqualia.com/
   */
function Jt(e,t,n,r,i,a,o,s,c,l,h,u){Wt.call(this,null,a,o,s,c,l,r,i,h,u),this.image={data:e,width:t,height:n},this.magFilter=void 0!==c?c:me,this.minFilter=void 0!==l?l:me,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}
/**
   * @author bhouston / http://clara.io
   * @author WestLangley / http://github.com/WestLangley
   */
function Qt(e,t){this.min=void 0!==e?e:new Ct(1/0,1/0,1/0),this.max=void 0!==t?t:new Ct(-1/0,-1/0,-1/0)}
/**
   * @author bhouston / http://clara.io
   * @author mrdoob / http://mrdoob.com/
   */
function Kt(e,t){this.center=void 0!==e?e:new Ct,this.radius=void 0!==t?t:0}
/**
   * @author bhouston / http://clara.io
   */
function $t(e,t){
// normal is assumed to be normalized
this.normal=void 0!==e?e:new Ct(1,0,0),this.constant=void 0!==t?t:0}
/**
   * @author mrdoob / http://mrdoob.com/
   * @author alteredq / http://alteredqualia.com/
   * @author bhouston / http://clara.io
   */
function en(e,t,n,r,i,a){this.planes=[void 0!==e?e:new $t,void 0!==t?t:new $t,void 0!==n?n:new $t,void 0!==r?r:new $t,void 0!==i?i:new $t,void 0!==a?a:new $t]}
/**
   * @author mrdoob / http://mrdoob.com/
   * @author supereggbert / http://www.paulbrunt.co.uk/
   * @author philogb / http://blog.thejit.org/
   * @author jordi_ros / http://plattsoft.com
   * @author D1plo1d / http://github.com/D1plo1d
   * @author alteredq / http://alteredqualia.com/
   * @author mikael emtinger / http://gomo.se/
   * @author timknip / http://www.floorplanner.com/
   * @author bhouston / http://clara.io
   * @author WestLangley / http://github.com/WestLangley
   */
function tn(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}Wt.DEFAULT_IMAGE=void 0,Wt.DEFAULT_MAPPING=300,Wt.prototype=Object.assign(Object.create(r.prototype),{constructor:Wt,isTexture:!0,updateMatrix:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.name=e.name,this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this},toJSON:function(e){var t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];var n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){
// TODO: Move to THREE.Image
var r=this.image;if(void 0===r.uuid&&(r.uuid=At.generateUUID()),!t&&void 0===e.images[r.uuid]){var i;if(Array.isArray(r)){
// process array of images e.g. CubeTexture
i=[];for(var a=0,o=r.length;a<o;a++)i.push(Ht.getDataURL(r[a]))}else
// process single image
i=Ht.getDataURL(r);e.images[r.uuid]={uuid:r.uuid,url:i}}n.image=r.uuid}return t||(e.textures[this.uuid]=n),n},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(e){if(300!==this.mapping)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case de:e.x=e.x-Math.floor(e.x);break;case fe:e.x=e.x<0?0:1;break;case pe:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||e.y>1)switch(this.wrapT){case de:e.y=e.y-Math.floor(e.y);break;case fe:e.y=e.y<0?0:1;break;case pe:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}return this.flipY&&(e.y=1-e.y),e}}),Object.defineProperty(Wt.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}}),Object.assign(qt.prototype,{isVector4:!0,set:function(e,t,n,r){return this.x=e,this.y=t,this.z=n,this.w=r,this},setScalar:function(e){return this.x=e,this.y=e,this.z=e,this.w=e,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setW:function(e){return this.w=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this},add:function(e,t){return void 0!==t?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this},sub:function(e,t){return void 0!==t?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)},subScalar:function(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this},applyMatrix4:function(e){var t=this.x,n=this.y,r=this.z,i=this.w,a=e.elements;return this.x=a[0]*t+a[4]*n+a[8]*r+a[12]*i,this.y=a[1]*t+a[5]*n+a[9]*r+a[13]*i,this.z=a[2]*t+a[6]*n+a[10]*r+a[14]*i,this.w=a[3]*t+a[7]*n+a[11]*r+a[15]*i,this},divideScalar:function(e){return this.multiplyScalar(1/e)},setAxisAngleFromQuaternion:function(e){
// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm
// q is assumed to be normalized
this.w=2*Math.acos(e.w);var t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this},setAxisAngleFromRotationMatrix:function(e){
// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm
// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)
var t,n,r,i,// margin to distinguish between 0 and 180 degrees
a=e.elements,o=a[0],s=a[4],c=a[8],l=a[1],h=a[5],u=a[9],d=a[2],f=a[6],p=a[10];if(Math.abs(s-l)<.01&&Math.abs(c-d)<.01&&Math.abs(u-f)<.01){
// singularity found
// first check for identity matrix which must have +1 for all terms
// in leading diagonal and zero in other terms
if(Math.abs(s+l)<.1&&Math.abs(c+d)<.1&&Math.abs(u+f)<.1&&Math.abs(o+h+p-3)<.1)
// this singularity is identity matrix so angle = 0
return this.set(1,0,0,0),this;// zero angle, arbitrary axis
// otherwise this singularity is angle = 180
t=Math.PI;var m=(o+1)/2,g=(h+1)/2,v=(p+1)/2,y=(s+l)/4,b=(c+d)/4,x=(u+f)/4;return m>g&&m>v?
// m11 is the largest diagonal term
m<.01?(n=0,r=.707106781,i=.707106781):(r=y/(n=Math.sqrt(m)),i=b/n):g>v?
// m22 is the largest diagonal term
g<.01?(n=.707106781,r=0,i=.707106781):(n=y/(r=Math.sqrt(g)),i=x/r):
// m33 is the largest diagonal term so base result on this
v<.01?(n=.707106781,r=.707106781,i=0):(n=b/(i=Math.sqrt(v)),r=x/i),this.set(n,r,i,t),this;// return 180 deg rotation
}
// as we have reached here there are no singularities so we can handle normally
var w=Math.sqrt((f-u)*(f-u)+(c-d)*(c-d)+(l-s)*(l-s));// used to normalize
return Math.abs(w)<.001&&(w=1),
// prevent divide by zero, should not happen if matrix is orthogonal and should be
// caught by singularity test above, but I've left it in just in case
this.x=(f-u)/w,this.y=(c-d)/w,this.z=(l-s)/w,this.w=Math.acos((o+h+p-1)/2),this},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this},clamp:function(e,t){
// assumes min < max, componentwise
return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this},clampScalar:function(e,t){return void 0===Ot&&(Ot=new qt,Nt=new qt),Ot.set(e,e,e,e),Nt.set(t,t,t,t),this.clamp(Ot,Nt)},clampLength:function(e,t){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(e){return this.normalize().multiplyScalar(e)},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this},lerpVectors:function(e,t,n){return this.subVectors(t,e).multiplyScalar(n).add(e)},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e},fromBufferAttribute:function(e,t,n){return void 0!==n&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}}),Xt.prototype=Object.assign(Object.create(r.prototype),{constructor:Xt,isWebGLRenderTarget:!0,setSize:function(e,t){this.width===e&&this.height===t||(this.width=e,this.height=t,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.width=e.width,this.height=e.height,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Yt.prototype=Object.assign(Object.create(Xt.prototype),{constructor:Yt,isWebGLMultisampleRenderTarget:!0,copy:function(e){return Xt.prototype.copy.call(this,e),this.samples=e.samples,this}}),Zt.prototype=Object.create(Xt.prototype),Zt.prototype.constructor=Zt,Zt.prototype.isWebGLRenderTargetCube=!0,Jt.prototype=Object.create(Wt.prototype),Jt.prototype.constructor=Jt,Jt.prototype.isDataTexture=!0,Object.assign(Qt.prototype,{isBox3:!0,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromArray:function(e){for(var t=1/0,n=1/0,r=1/0,i=-1/0,a=-1/0,o=-1/0,s=0,c=e.length;s<c;s+=3){var l=e[s],h=e[s+1],u=e[s+2];l<t&&(t=l),h<n&&(n=h),u<r&&(r=u),l>i&&(i=l),h>a&&(a=h),u>o&&(o=u)}return this.min.set(t,n,r),this.max.set(i,a,o),this},setFromBufferAttribute:function(e){for(var t=1/0,n=1/0,r=1/0,i=-1/0,a=-1/0,o=-1/0,s=0,c=e.count;s<c;s++){var l=e.getX(s),h=e.getY(s),u=e.getZ(s);l<t&&(t=l),h<n&&(n=h),u<r&&(r=u),l>i&&(i=l),h>a&&(a=h),u>o&&(o=u)}return this.min.set(t,n,r),this.max.set(i,a,o),this},setFromPoints:function(e){this.makeEmpty();for(var t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this},setFromCenterAndSize:function(){var e=new Ct;return function(t,n){var r=e.copy(n).multiplyScalar(.5);return this.min.copy(t).sub(r),this.max.copy(t).add(r),this}}(),setFromObject:function(e){return this.makeEmpty(),this.expandByObject(e)},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},isEmpty:function(){
// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes
return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},getCenter:function(e){return void 0===e&&(console.warn("THREE.Box3: .getCenter() target is now required"),e=new Ct),this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(e){return void 0===e&&(console.warn("THREE.Box3: .getSize() target is now required"),e=new Ct),this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},expandByObject:function(){
// Computes the world-axis-aligned bounding box of an object (including its children),
// accounting for both the object's, and children's, world transforms
var e,t,n,r=new Ct;function i(i){var a=i.geometry;if(void 0!==a)if(a.isGeometry){var o=a.vertices;for(t=0,n=o.length;t<n;t++)r.copy(o[t]),r.applyMatrix4(i.matrixWorld),e.expandByPoint(r)}else if(a.isBufferGeometry){var s=a.attributes.position;if(void 0!==s)for(t=0,n=s.count;t<n;t++)r.fromBufferAttribute(s,t).applyMatrix4(i.matrixWorld),e.expandByPoint(r)}}return function(t){return e=this,t.updateMatrixWorld(!0),t.traverse(i),this}}(),containsPoint:function(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z},getParameter:function(e,t){
// This can potentially have a divide by zero if the box
// has a size dimension of 0.
return void 0===t&&(console.warn("THREE.Box3: .getParameter() target is now required"),t=new Ct),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))},intersectsBox:function(e){
// using 6 splitting planes to rule out intersections.
return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)},intersectsSphere:(Dt=new Ct,function(e){
// If that point is inside the sphere, the AABB and sphere intersect.
// Find the point on the AABB closest to the sphere center.
return this.clampPoint(e.center,Dt),Dt.distanceToSquared(e.center)<=e.radius*e.radius}),intersectsPlane:function(e){
// We compute the minimum and maximum dot product values. If those values
// are on the same side (back or front) of the plane, then there is no intersection.
var t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant},intersectsTriangle:function(){
// triangle centered vertices
var e=new Ct,t=new Ct,n=new Ct,r=new Ct,i=new Ct,a=new Ct,o=new Ct,s=new Ct,c=new Ct,l=new Ct;function h(r){var i,a;for(i=0,a=r.length-3;i<=a;i+=3){o.fromArray(r,i);
// project the aabb onto the seperating axis
var s=c.x*Math.abs(o.x)+c.y*Math.abs(o.y)+c.z*Math.abs(o.z),l=e.dot(o),h=t.dot(o),u=n.dot(o);
// project all 3 vertices of the triangle onto the seperating axis
// actual test, basically see if either of the most extreme of the triangle points intersects r
if(Math.max(-Math.max(l,h,u),Math.min(l,h,u))>s)
// points of the projected triangle are outside the projected half-length of the aabb
// the axis is seperating and we can exit
return!1}return!0}return function(o){if(this.isEmpty())return!1;
// compute box center and extents
this.getCenter(s),c.subVectors(this.max,s),
// translate triangle to aabb origin
e.subVectors(o.a,s),t.subVectors(o.b,s),n.subVectors(o.c,s),
// compute edge vectors for triangle
r.subVectors(t,e),i.subVectors(n,t),a.subVectors(e,n);
// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb
// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation
// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)
var u=[0,-r.z,r.y,0,-i.z,i.y,0,-a.z,a.y,r.z,0,-r.x,i.z,0,-i.x,a.z,0,-a.x,-r.y,r.x,0,-i.y,i.x,0,-a.y,a.x,0];return!!h(u)&&(!!h(
// test 3 face normals from the aabb
u=[1,0,0,0,1,0,0,0,1])&&(
// finally testing the face normal of the triangle
// use already existing triangle edge vectors here
l.crossVectors(r,i),h(u=[l.x,l.y,l.z])))}}(),clampPoint:function(e,t){return void 0===t&&(console.warn("THREE.Box3: .clampPoint() target is now required"),t=new Ct),t.copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new Ct;return function(t){return e.copy(t).clamp(this.min,this.max).sub(t).length()}}(),getBoundingSphere:function(){var e=new Ct;return function(t){return void 0===t&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(t.center),t.radius=.5*this.getSize(e).length(),t}}(),intersect:function(e){return this.min.max(e.min),this.max.min(e.max),
// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.
this.isEmpty()&&this.makeEmpty(),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},applyMatrix4:(It=[new Ct,new Ct,new Ct,new Ct,new Ct,new Ct,new Ct,new Ct],function(e){
// transform of empty box is an empty box.
return this.isEmpty()?this:(
// NOTE: I am using a binary pattern to specify all 2^3 combinations below
It[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),// 000
It[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),// 001
It[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),// 010
It[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),// 011
It[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),// 100
It[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),// 101
It[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),// 110
It[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),// 111
this.setFromPoints(It),this)}),translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}),Object.assign(Kt.prototype,{set:function(e,t){return this.center.copy(e),this.radius=t,this},setFromPoints:(zt=new Qt,function(e,t){var n=this.center;void 0!==t?n.copy(t):zt.setFromPoints(e).getCenter(n);for(var r=0,i=0,a=e.length;i<a;i++)r=Math.max(r,n.distanceToSquared(e[i]));return this.radius=Math.sqrt(r),this}),clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.center.copy(e.center),this.radius=e.radius,this},empty:function(){return this.radius<=0},containsPoint:function(e){return e.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(e){return e.distanceTo(this.center)-this.radius},intersectsSphere:function(e){var t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t},intersectsBox:function(e){return e.intersectsSphere(this)},intersectsPlane:function(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius},clampPoint:function(e,t){var n=this.center.distanceToSquared(e);return void 0===t&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),t=new Ct),t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t},getBoundingBox:function(e){return void 0===e&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),e=new Qt),e.set(this.center,this.center),e.expandByScalar(this.radius),e},applyMatrix4:function(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this},translate:function(e){return this.center.add(e),this},equals:function(e){return e.center.equals(this.center)&&e.radius===this.radius}}),Object.assign($t.prototype,{set:function(e,t){return this.normal.copy(e),this.constant=t,this},setComponents:function(e,t,n,r){return this.normal.set(e,t,n),this.constant=r,this},setFromNormalAndCoplanarPoint:function(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this},setFromCoplanarPoints:function(){var e=new Ct,t=new Ct;return function(n,r,i){var a=e.subVectors(i,r).cross(t.subVectors(n,r)).normalize();
// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?
return this.setFromNormalAndCoplanarPoint(a,n),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.normal.copy(e.normal),this.constant=e.constant,this},normalize:function(){
// Note: will lead to a divide by zero if the plane is invalid.
var e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(e){return this.normal.dot(e)+this.constant},distanceToSphere:function(e){return this.distanceToPoint(e.center)-e.radius},projectPoint:function(e,t){return void 0===t&&(console.warn("THREE.Plane: .projectPoint() target is now required"),t=new Ct),t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)},intersectLine:function(){var e=new Ct;return function(t,n){void 0===n&&(console.warn("THREE.Plane: .intersectLine() target is now required"),n=new Ct);var r=t.delta(e),i=this.normal.dot(r);if(0===i)
// line is coplanar, return origin
return 0===this.distanceToPoint(t.start)?n.copy(t.start):
// Unsure if this is the correct method to handle this case.
void 0;var a=-(t.start.dot(this.normal)+this.constant)/i;return a<0||a>1?void 0:n.copy(r).multiplyScalar(a).add(t.start)}}(),intersectsLine:function(e){
// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.
var t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0},intersectsBox:function(e){return e.intersectsPlane(this)},intersectsSphere:function(e){return e.intersectsPlane(this)},coplanarPoint:function(e){return void 0===e&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),e=new Ct),e.copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var e=new Ct,t=new Rt;return function(n,r){var i=r||t.getNormalMatrix(n),a=this.coplanarPoint(e).applyMatrix4(n),o=this.normal.applyMatrix3(i).normalize();return this.constant=-a.dot(o),this}}(),translate:function(e){return this.constant-=e.dot(this.normal),this},equals:function(e){return e.normal.equals(this.normal)&&e.constant===this.constant}}),Object.assign(en.prototype,{set:function(e,t,n,r,i,a){var o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(n),o[3].copy(r),o[4].copy(i),o[5].copy(a),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){for(var t=this.planes,n=0;n<6;n++)t[n].copy(e.planes[n]);return this},setFromMatrix:function(e){var t=this.planes,n=e.elements,r=n[0],i=n[1],a=n[2],o=n[3],s=n[4],c=n[5],l=n[6],h=n[7],u=n[8],d=n[9],f=n[10],p=n[11],m=n[12],g=n[13],v=n[14],y=n[15];return t[0].setComponents(o-r,h-s,p-u,y-m).normalize(),t[1].setComponents(o+r,h+s,p+u,y+m).normalize(),t[2].setComponents(o+i,h+c,p+d,y+g).normalize(),t[3].setComponents(o-i,h-c,p-d,y-g).normalize(),t[4].setComponents(o-a,h-l,p-f,y-v).normalize(),t[5].setComponents(o+a,h+l,p+f,y+v).normalize(),this},intersectsObject:(Bt=new Kt,function(e){var t=e.geometry;return null===t.boundingSphere&&t.computeBoundingSphere(),Bt.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(Bt)}),intersectsSprite:function(){var e=new Kt;return function(t){return e.center.set(0,0,0),e.radius=.7071067811865476,e.applyMatrix4(t.matrixWorld),this.intersectsSphere(e)}}(),intersectsSphere:function(e){for(var t=this.planes,n=e.center,r=-e.radius,i=0;i<6;i++){if(t[i].distanceToPoint(n)<r)return!1}return!0},intersectsBox:(kt=new Ct,function(e){for(var t=this.planes,n=0;n<6;n++){var r=t[n];
// corner at max distance
if(kt.x=r.normal.x>0?e.max.x:e.min.x,kt.y=r.normal.y>0?e.max.y:e.min.y,kt.z=r.normal.z>0?e.max.z:e.min.z,r.distanceToPoint(kt)<0)return!1}return!0}),containsPoint:function(e){for(var t=this.planes,n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}}),Object.assign(tn.prototype,{isMatrix4:!0,set:function(e,t,n,r,i,a,o,s,c,l,h,u,d,f,p,m){var g=this.elements;return g[0]=e,g[4]=t,g[8]=n,g[12]=r,g[1]=i,g[5]=a,g[9]=o,g[13]=s,g[2]=c,g[6]=l,g[10]=h,g[14]=u,g[3]=d,g[7]=f,g[11]=p,g[15]=m,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},clone:function(){return(new tn).fromArray(this.elements)},copy:function(e){var t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this},copyPosition:function(e){var t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this},extractBasis:function(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this},makeBasis:function(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this},extractRotation:function(){var e=new Ct;return function(t){
// this method does not support reflection matrices
var n=this.elements,r=t.elements,i=1/e.setFromMatrixColumn(t,0).length(),a=1/e.setFromMatrixColumn(t,1).length(),o=1/e.setFromMatrixColumn(t,2).length();return n[0]=r[0]*i,n[1]=r[1]*i,n[2]=r[2]*i,n[3]=0,n[4]=r[4]*a,n[5]=r[5]*a,n[6]=r[6]*a,n[7]=0,n[8]=r[8]*o,n[9]=r[9]*o,n[10]=r[10]*o,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,this}}(),makeRotationFromEuler:function(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var t=this.elements,n=e.x,r=e.y,i=e.z,a=Math.cos(n),o=Math.sin(n),s=Math.cos(r),c=Math.sin(r),l=Math.cos(i),h=Math.sin(i);if("XYZ"===e.order){var u=a*l,d=a*h,f=o*l,p=o*h;t[0]=s*l,t[4]=-s*h,t[8]=c,t[1]=d+f*c,t[5]=u-p*c,t[9]=-o*s,t[2]=p-u*c,t[6]=f+d*c,t[10]=a*s}else if("YXZ"===e.order){var m=s*l,g=s*h,v=c*l,y=c*h;t[0]=m+y*o,t[4]=v*o-g,t[8]=a*c,t[1]=a*h,t[5]=a*l,t[9]=-o,t[2]=g*o-v,t[6]=y+m*o,t[10]=a*s}else if("ZXY"===e.order){m=s*l,g=s*h,v=c*l,y=c*h;t[0]=m-y*o,t[4]=-a*h,t[8]=v+g*o,t[1]=g+v*o,t[5]=a*l,t[9]=y-m*o,t[2]=-a*c,t[6]=o,t[10]=a*s}else if("ZYX"===e.order){u=a*l,d=a*h,f=o*l,p=o*h;t[0]=s*l,t[4]=f*c-d,t[8]=u*c+p,t[1]=s*h,t[5]=p*c+u,t[9]=d*c-f,t[2]=-c,t[6]=o*s,t[10]=a*s}else if("YZX"===e.order){var b=a*s,x=a*c,w=o*s,_=o*c;t[0]=s*l,t[4]=_-b*h,t[8]=w*h+x,t[1]=h,t[5]=a*l,t[9]=-o*l,t[2]=-c*l,t[6]=x*h+w,t[10]=b-_*h}else if("XZY"===e.order){b=a*s,x=a*c,w=o*s,_=o*c;t[0]=s*l,t[4]=-h,t[8]=c*l,t[1]=b*h+_,t[5]=a*l,t[9]=x*h-w,t[2]=w*h-x,t[6]=o*l,t[10]=_*h+b}
// bottom row
return t[3]=0,t[7]=0,t[11]=0,
// last column
t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},makeRotationFromQuaternion:(Gt=new Ct(0,0,0),jt=new Ct(1,1,1),function(e){return this.compose(Gt,e,jt)}),lookAt:function(){var e=new Ct,t=new Ct,n=new Ct;return function(r,i,a){var o=this.elements;return n.subVectors(r,i),0===n.lengthSq()&&(
// eye and target are in the same position
n.z=1),n.normalize(),e.crossVectors(a,n),0===e.lengthSq()&&(
// up and z are parallel
1===Math.abs(a.z)?n.x+=1e-4:n.z+=1e-4,n.normalize(),e.crossVectors(a,n)),e.normalize(),t.crossVectors(n,e),o[0]=e.x,o[4]=t.x,o[8]=n.x,o[1]=e.y,o[5]=t.y,o[9]=n.y,o[2]=e.z,o[6]=t.z,o[10]=n.z,this}}(),multiply:function(e,t){return void 0!==t?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)},premultiply:function(e){return this.multiplyMatrices(e,this)},multiplyMatrices:function(e,t){var n=e.elements,r=t.elements,i=this.elements,a=n[0],o=n[4],s=n[8],c=n[12],l=n[1],h=n[5],u=n[9],d=n[13],f=n[2],p=n[6],m=n[10],g=n[14],v=n[3],y=n[7],b=n[11],x=n[15],w=r[0],_=r[4],M=r[8],E=r[12],S=r[1],T=r[5],A=r[9],L=r[13],P=r[2],C=r[6],R=r[10],O=r[14],N=r[3],I=r[7],D=r[11],z=r[15];return i[0]=a*w+o*S+s*P+c*N,i[4]=a*_+o*T+s*C+c*I,i[8]=a*M+o*A+s*R+c*D,i[12]=a*E+o*L+s*O+c*z,i[1]=l*w+h*S+u*P+d*N,i[5]=l*_+h*T+u*C+d*I,i[9]=l*M+h*A+u*R+d*D,i[13]=l*E+h*L+u*O+d*z,i[2]=f*w+p*S+m*P+g*N,i[6]=f*_+p*T+m*C+g*I,i[10]=f*M+p*A+m*R+g*D,i[14]=f*E+p*L+m*O+g*z,i[3]=v*w+y*S+b*P+x*N,i[7]=v*_+y*T+b*C+x*I,i[11]=v*M+y*A+b*R+x*D,i[15]=v*E+y*L+b*O+x*z,this},multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this},applyToBufferAttribute:function(){var e=new Ct;return function(t){for(var n=0,r=t.count;n<r;n++)e.x=t.getX(n),e.y=t.getY(n),e.z=t.getZ(n),e.applyMatrix4(this),t.setXYZ(n,e.x,e.y,e.z);return t}}(),determinant:function(){var e=this.elements,t=e[0],n=e[4],r=e[8],i=e[12],a=e[1],o=e[5],s=e[9],c=e[13],l=e[2],h=e[6],u=e[10],d=e[14];
//TODO: make this more efficient
//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )
return e[3]*(+i*s*h-r*c*h-i*o*u+n*c*u+r*o*d-n*s*d)+e[7]*(+t*s*d-t*c*u+i*a*u-r*a*d+r*c*l-i*s*l)+e[11]*(+t*c*h-t*o*d-i*a*h+n*a*d+i*o*l-n*c*l)+e[15]*(-r*o*l-t*s*h+t*o*u+r*a*h-n*a*u+n*s*l)},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this},setPosition:function(e){var t=this.elements;return t[12]=e.x,t[13]=e.y,t[14]=e.z,this},getInverse:function(e,t){
// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm
var n=this.elements,r=e.elements,i=r[0],a=r[1],o=r[2],s=r[3],c=r[4],l=r[5],h=r[6],u=r[7],d=r[8],f=r[9],p=r[10],m=r[11],g=r[12],v=r[13],y=r[14],b=r[15],x=f*y*u-v*p*u+v*h*m-l*y*m-f*h*b+l*p*b,w=g*p*u-d*y*u-g*h*m+c*y*m+d*h*b-c*p*b,_=d*v*u-g*f*u+g*l*m-c*v*m-d*l*b+c*f*b,M=g*f*h-d*v*h-g*l*p+c*v*p+d*l*y-c*f*y,E=i*x+a*w+o*_+s*M;if(0===E){var S="THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0";if(!0===t)throw new Error(S);return console.warn(S),this.identity()}var T=1/E;return n[0]=x*T,n[1]=(v*p*s-f*y*s-v*o*m+a*y*m+f*o*b-a*p*b)*T,n[2]=(l*y*s-v*h*s+v*o*u-a*y*u-l*o*b+a*h*b)*T,n[3]=(f*h*s-l*p*s-f*o*u+a*p*u+l*o*m-a*h*m)*T,n[4]=w*T,n[5]=(d*y*s-g*p*s+g*o*m-i*y*m-d*o*b+i*p*b)*T,n[6]=(g*h*s-c*y*s-g*o*u+i*y*u+c*o*b-i*h*b)*T,n[7]=(c*p*s-d*h*s+d*o*u-i*p*u-c*o*m+i*h*m)*T,n[8]=_*T,n[9]=(g*f*s-d*v*s-g*a*m+i*v*m+d*a*b-i*f*b)*T,n[10]=(c*v*s-g*l*s+g*a*u-i*v*u-c*a*b+i*l*b)*T,n[11]=(d*l*s-c*f*s-d*a*u+i*f*u+c*a*m-i*l*m)*T,n[12]=M*T,n[13]=(d*v*o-g*f*o+g*a*p-i*v*p-d*a*y+i*f*y)*T,n[14]=(g*l*o-c*v*o-g*a*h+i*v*h+c*a*y-i*l*y)*T,n[15]=(c*f*o-d*l*o+d*a*h-i*f*h-c*a*p+i*l*p)*T,this},scale:function(e){var t=this.elements,n=e.x,r=e.y,i=e.z;return t[0]*=n,t[4]*=r,t[8]*=i,t[1]*=n,t[5]*=r,t[9]*=i,t[2]*=n,t[6]*=r,t[10]*=i,t[3]*=n,t[7]*=r,t[11]*=i,this},getMaxScaleOnAxis:function(){var e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,r))},makeTranslation:function(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this},makeRotationX:function(e){var t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this},makeRotationY:function(e){var t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this},makeRotationZ:function(e){var t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(e,t){
// Based on http://www.gamedev.net/reference/articles/article1199.asp
var n=Math.cos(t),r=Math.sin(t),i=1-n,a=e.x,o=e.y,s=e.z,c=i*a,l=i*o;return this.set(c*a+n,c*o-r*s,c*s+r*o,0,c*o+r*s,l*o+n,l*s-r*a,0,c*s-r*o,l*s+r*a,i*s*s+n,0,0,0,0,1),this},makeScale:function(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this},makeShear:function(e,t,n){return this.set(1,t,n,0,e,1,n,0,e,t,1,0,0,0,0,1),this},compose:function(e,t,n){var r=this.elements,i=t._x,a=t._y,o=t._z,s=t._w,c=i+i,l=a+a,h=o+o,u=i*c,d=i*l,f=i*h,p=a*l,m=a*h,g=o*h,v=s*c,y=s*l,b=s*h,x=n.x,w=n.y,_=n.z;return r[0]=(1-(p+g))*x,r[1]=(d+b)*x,r[2]=(f-y)*x,r[3]=0,r[4]=(d-b)*w,r[5]=(1-(u+g))*w,r[6]=(m+v)*w,r[7]=0,r[8]=(f+y)*_,r[9]=(m-v)*_,r[10]=(1-(u+p))*_,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this},decompose:(Ut=new Ct,Ft=new tn,function(e,t,n){var r=this.elements,i=Ut.set(r[0],r[1],r[2]).length(),a=Ut.set(r[4],r[5],r[6]).length(),o=Ut.set(r[8],r[9],r[10]).length();this.determinant()<0&&(i=-i),e.x=r[12],e.y=r[13],e.z=r[14],
// scale the rotation part
Ft.copy(this);var s=1/i,c=1/a,l=1/o;return Ft.elements[0]*=s,Ft.elements[1]*=s,Ft.elements[2]*=s,Ft.elements[4]*=c,Ft.elements[5]*=c,Ft.elements[6]*=c,Ft.elements[8]*=l,Ft.elements[9]*=l,Ft.elements[10]*=l,t.setFromRotationMatrix(Ft),n.x=i,n.y=a,n.z=o,this}),makePerspective:function(e,t,n,r,i,a){void 0===a&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");var o=this.elements,s=2*i/(t-e),c=2*i/(n-r),l=(t+e)/(t-e),h=(n+r)/(n-r),u=-(a+i)/(a-i),d=-2*a*i/(a-i);return o[0]=s,o[4]=0,o[8]=l,o[12]=0,o[1]=0,o[5]=c,o[9]=h,o[13]=0,o[2]=0,o[6]=0,o[10]=u,o[14]=d,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this},makeOrthographic:function(e,t,n,r,i,a){var o=this.elements,s=1/(t-e),c=1/(n-r),l=1/(a-i),h=(t+e)*s,u=(n+r)*c,d=(a+i)*l;return o[0]=2*s,o[4]=0,o[8]=0,o[12]=-h,o[1]=0,o[5]=2*c,o[9]=0,o[13]=-u,o[2]=0,o[6]=0,o[10]=-2*l,o[14]=-d,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this},equals:function(e){for(var t=this.elements,n=e.elements,r=0;r<16;r++)if(t[r]!==n[r])return!1;return!0},fromArray:function(e,t){void 0===t&&(t=0);for(var n=0;n<16;n++)this.elements[n]=e[n+t];return this},toArray:function(e,t){void 0===e&&(e=[]),void 0===t&&(t=0);var n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}});var nn={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE  = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F = F_Schlick( specularColor, dotNV );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\t#if ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\n\t\tvarying vec3 vViewPosition;\n\t#endif\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\n\tvarying vec3 vViewPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif",color_fragment:"#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n\tvColor.xyz = color.xyz;\n#endif",common:"#define PI 3.14159265359\n#define PI2 6.28318530718\n#define PI_HALF 1.5707963267949\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_textureSize (1024.0)\nint getFaceFromDirection(vec3 direction) {\n\tvec3 absDirection = abs(direction);\n\tint face = -1;\n\tif( absDirection.x > absDirection.z ) {\n\t\tif(absDirection.x > absDirection.y )\n\t\t\tface = direction.x > 0.0 ? 0 : 3;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\telse {\n\t\tif(absDirection.z > absDirection.y )\n\t\t\tface = direction.z > 0.0 ? 2 : 5;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\treturn face;\n}\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\n\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\n\tfloat dxRoughness = dFdx(roughness);\n\tfloat dyRoughness = dFdy(roughness);\n\tvec3 dx = dFdx( vec * scale * dxRoughness );\n\tvec3 dy = dFdy( vec * scale * dyRoughness );\n\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\n\td = clamp(d, 1.0, cubeUV_rangeClamp);\n\tfloat mipLevel = 0.5 * log2(d);\n\treturn vec2(floor(mipLevel), fract(mipLevel));\n}\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\n\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\n\tfloat a = 16.0 * cubeUV_rcpTextureSize;\n\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\n\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\n\tfloat powScale = exp2_packed.x * exp2_packed.y;\n\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\n\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\n\tbool bRes = mipLevel == 0.0;\n\tscale =  bRes && (scale < a) ? a : scale;\n\tvec3 r;\n\tvec2 offset;\n\tint face = getFaceFromDirection(direction);\n\tfloat rcpPowScale = 1.0 / powScale;\n\tif( face == 0) {\n\t\tr = vec3(direction.x, -direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 1) {\n\t\tr = vec3(direction.y, direction.x, direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 2) {\n\t\tr = vec3(direction.z, direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 3) {\n\t\tr = vec3(direction.x, direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse if( face == 4) {\n\t\tr = vec3(direction.y, direction.x, -direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse {\n\t\tr = vec3(direction.z, -direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\tr = normalize(r);\n\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\n\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\n\tvec2 base = offset + vec2( texelOffset );\n\treturn base + s * ( scale - 2.0 * texelOffset );\n}\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\nvec4 textureCubeUV( sampler2D envMap, vec3 reflectedDirection, float roughness ) {\n\tfloat roughnessVal = roughness* cubeUV_maxLods3;\n\tfloat r1 = floor(roughnessVal);\n\tfloat r2 = r1 + 1.0;\n\tfloat t = fract(roughnessVal);\n\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\n\tfloat s = mipInfo.y;\n\tfloat level0 = mipInfo.x;\n\tfloat level1 = level0 + 1.0;\n\tlevel1 = level1 > 5.0 ? 5.0 : level1;\n\tlevel0 += min( floor( s + 0.5 ), 5.0 );\n\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\n\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\n\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\n\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\n\tvec4 result = mix(color10, color20, t);\n\treturn vec4(result.rgb, 1.0);\n}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = normalMatrix * objectNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = normalMatrix * objectTangent;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = min( floor( D ) / 255.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\tvec2 sampleUV;\n\t\treflectVec = normalize( reflectVec );\n\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\treflectVec = normalize( reflectVec );\n\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\tenvColor = envMapTexelToLinear( envColor );\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_pars_fragment:"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\n\tuniform float reflectivity;\n\tuniform float envMapIntensity;\n#endif\n#ifdef USE_ENVMAP\n\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\n\t\tvarying vec3 vWorldPosition;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, queryVec, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent ));\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\t\tvec2 sampleUV;\n\t\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tfogDepth = -mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef TOON\n\tuniform sampler2D gradientMap;\n\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\t\tfloat dotNL = dot( normal, lightDirection );\n\t\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t\t#ifdef USE_GRADIENTMAP\n\t\t\treturn texture2D( gradientMap, coord ).rgb;\n\t\t#else\n\t\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t\t#endif\n\t}\n#endif",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n#endif",lights_pars_begin:"uniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t\tfloat shadowCameraNear;\n\t\tfloat shadowCameraFar;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifdef TOON\n\t\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#else\n\t\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\t\tvec3 irradiance = dotNL * directLight.color;\n\t#endif\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\n#ifdef STANDARD\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.clearCoat = saturate( clearCoat );\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n\t#ifndef STANDARD\n\t\tfloat clearCoat;\n\t\tfloat clearCoatRoughness;\n\t#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifndef STANDARD\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\n\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\t#ifndef STANDARD\n\t\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\t\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\t#endif\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifndef STANDARD\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\tfloat dotNL = dotNV;\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\tfloat clearCoatInv = 1.0 - clearCoatDHR;\n\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec3 singleScattering = vec3( 0.0 );\n\t\tvec3 multiScattering = vec3( 0.0 );\n\t\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\t\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\t\tvec3 diffuse = material.diffuseColor;\n\t\treflectedLight.indirectSpecular += clearCoatInv * radiance * singleScattering;\n\t\treflectedLight.indirectDiffuse += multiScattering * cosineWeightedIrradiance;\n\t\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n\t#else\n\t\treflectedLight.indirectSpecular += clearCoatInv * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\n\t#endif\n\t#ifndef STANDARD\n\t\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = normalize( vViewPosition );\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearCoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tirradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), maxMipLevel );\n\t#ifndef STANDARD\n\t\tclearCoatRadiance += getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), maxMipLevel );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, irradiance, clearCoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t#else\n\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\tgl_Position.z *= gl_Position.w;\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#ifdef USE_MAP\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif",map_particle_pars_fragment:"#ifdef USE_MAP\n\tuniform mat3 uvTransform;\n\tuniform sampler2D map;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\t#ifndef USE_MORPHNORMALS\n\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\t#endif\n#endif",normal_fragment_begin:"#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t#endif\n\t#endif\n#endif",normal_fragment_maps:"#ifdef USE_NORMALMAP\n\t#ifdef OBJECTSPACE_NORMALMAP\n\t\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\t#ifdef FLIP_SIDED\n\t\t\tnormal = - normal;\n\t\t#endif\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t#endif\n\t\tnormal = normalize( normalMatrix * normal );\n\t#else\n\t\t#ifdef USE_TANGENT\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\t\tmapN.xy = normalScale * mapN.xy;\n\t\t\tnormal = normalize( vTBN * mapN );\n\t\t#else\n\t\t\tnormal = perturbNormal2Arb( -vViewPosition, normal );\n\t\t#endif\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\t#ifdef OBJECTSPACE_NORMALMAP\n\t\tuniform mat3 normalMatrix;\n\t#else\n\t\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\t\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\t\tvec2 st0 = dFdx( vUv.st );\n\t\t\tvec2 st1 = dFdy( vUv.st );\n\t\t\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\n\t\t\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\n\t\t\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\n\t\t\tvec3 N = normalize( surf_norm );\n\t\t\tmat3 tsn = mat3( S, T, N );\n\t\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\t\tmapN.xy *= normalScale;\n\t\t\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t\treturn normalize( tsn * mapN );\n\t\t}\n\t#endif\n#endif",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#if defined( DITHERING )\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#if defined( DITHERING )\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\n\t\tconst vec2 offset = vec2( 0.0, 1.0 );\n\t\tvec2 texelSize = vec2( 1.0 ) / size;\n\t\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\n\t\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\n\t\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\n\t\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\n\t\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\n\t\tvec2 f = fract( uv * size + 0.5 );\n\t\tfloat a = mix( lb, lt, f.y );\n\t\tfloat b = mix( rb, rt, f.y );\n\t\tfloat c = mix( a, b, f.x );\n\t\treturn c;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tshadow = (\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\tDirectionalLight directionalLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\tSpotLight spotLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\tPointLight pointLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n\t#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( ( color * ( 2.51 * color + 0.03 ) ) / ( color * ( 2.43 * color + 0.59 ) + 0.14 ) );\n}",uv_pars_fragment:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = uv2;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n#endif",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",cube_frag:"uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldDirection;\nvoid main() {\n\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\n\t#endif\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV;\n\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\tvLineDistance = scale * lineDistance;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphysical_frag:"#define PHYSICAL\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifndef STANDARD\n\tuniform float clearCoat;\n\tuniform float clearCoatRoughness;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define PHYSICAL\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",normal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\nvoid main() {\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",normal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <fog_fragment>\n}",shadow_vert:"#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}"};
/**
   * Uniform Utilities
   */
function rn(e){var t={};for(var n in e)for(var r in t[n]={},e[n]){var i=e[n][r];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture)?t[n][r]=i.clone():Array.isArray(i)?t[n][r]=i.slice():t[n][r]=i}return t}function an(e){for(var t={},n=0;n<e.length;n++){var r=rn(e[n]);for(var i in r)t[i]=r[i]}return t}
// Legacy
var on,sn,cn={clone:rn,merge:an},ln={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};
/**
   * @author mrdoob / http://mrdoob.com/
   */function hn(e,t,n){return void 0===t&&void 0===n?this.set(e):this.setRGB(e,t,n)}Object.assign(hn.prototype,{isColor:!0,r:1,g:1,b:1,set:function(e){return e&&e.isColor?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e),this},setScalar:function(e){return this.r=e,this.g=e,this.b=e,this},setHex:function(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,this},setRGB:function(e,t,n){return this.r=e,this.g=t,this.b=n,this},setHSL:function(){function e(e,t,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+6*(t-e)*n:n<.5?t:n<2/3?e+6*(t-e)*(2/3-n):e}return function(t,n,r){if(
// h,s,l ranges are in 0.0 - 1.0
t=At.euclideanModulo(t,1),n=At.clamp(n,0,1),r=At.clamp(r,0,1),0===n)this.r=this.g=this.b=r;else{var i=r<=.5?r*(1+n):r+n-r*n,a=2*r-i;this.r=e(a,i,t+1/3),this.g=e(a,i,t),this.b=e(a,i,t-1/3)}return this}}(),setStyle:function(e){function t(t){void 0!==t&&parseFloat(t)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}var n;if(n=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(e)){
// rgb / hsl
var r,i=n[1],a=n[2];switch(i){case"rgb":case"rgba":if(r=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a))
// rgb(255,0,0) rgba(255,0,0,0.5)
return this.r=Math.min(255,parseInt(r[1],10))/255,this.g=Math.min(255,parseInt(r[2],10))/255,this.b=Math.min(255,parseInt(r[3],10))/255,t(r[5]),this;if(r=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a))
// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)
return this.r=Math.min(100,parseInt(r[1],10))/100,this.g=Math.min(100,parseInt(r[2],10))/100,this.b=Math.min(100,parseInt(r[3],10))/100,t(r[5]),this;break;case"hsl":case"hsla":if(r=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a)){
// hsl(120,50%,50%) hsla(120,50%,50%,0.5)
var o=parseFloat(r[1])/360,s=parseInt(r[2],10)/100,c=parseInt(r[3],10)/100;return t(r[5]),this.setHSL(o,s,c)}}}else if(n=/^\#([A-Fa-f0-9]+)$/.exec(e)){
// hex color
var l,h=(l=n[1]).length;if(3===h)
// #ff0
return this.r=parseInt(l.charAt(0)+l.charAt(0),16)/255,this.g=parseInt(l.charAt(1)+l.charAt(1),16)/255,this.b=parseInt(l.charAt(2)+l.charAt(2),16)/255,this;if(6===h)
// #ff0000
return this.r=parseInt(l.charAt(0)+l.charAt(1),16)/255,this.g=parseInt(l.charAt(2)+l.charAt(3),16)/255,this.b=parseInt(l.charAt(4)+l.charAt(5),16)/255,this}e&&e.length>0&&(void 0!==(l=ln[e])?
// red
this.setHex(l):
// unknown color
console.warn("THREE.Color: Unknown color "+e));return this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(e){return this.r=e.r,this.g=e.g,this.b=e.b,this},copyGammaToLinear:function(e,t){return void 0===t&&(t=2),this.r=Math.pow(e.r,t),this.g=Math.pow(e.g,t),this.b=Math.pow(e.b,t),this},copyLinearToGamma:function(e,t){void 0===t&&(t=2);var n=t>0?1/t:1;return this.r=Math.pow(e.r,n),this.g=Math.pow(e.g,n),this.b=Math.pow(e.b,n),this},convertGammaToLinear:function(e){return this.copyGammaToLinear(this,e),this},convertLinearToGamma:function(e){return this.copyLinearToGamma(this,e),this},copySRGBToLinear:function(){function e(e){return e<.04045?.0773993808*e:Math.pow(.9478672986*e+.0521327014,2.4)}return function(t){return this.r=e(t.r),this.g=e(t.g),this.b=e(t.b),this}}(),copyLinearToSRGB:function(){function e(e){return e<.0031308?12.92*e:1.055*Math.pow(e,.41666)-.055}return function(t){return this.r=e(t.r),this.g=e(t.g),this.b=e(t.b),this}}(),convertSRGBToLinear:function(){return this.copySRGBToLinear(this),this},convertLinearToSRGB:function(){return this.copyLinearToSRGB(this),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(e){
// h,s,l ranges are in 0.0 - 1.0
void 0===e&&(console.warn("THREE.Color: .getHSL() target is now required"),e={h:0,s:0,l:0});var t,n,r=this.r,i=this.g,a=this.b,o=Math.max(r,i,a),s=Math.min(r,i,a),c=(s+o)/2;if(s===o)t=0,n=0;else{var l=o-s;switch(n=c<=.5?l/(o+s):l/(2-o-s),o){case r:t=(i-a)/l+(i<a?6:0);break;case i:t=(a-r)/l+2;break;case a:t=(r-i)/l+4}t/=6}return e.h=t,e.s=n,e.l=c,e},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(){var e={};return function(t,n,r){return this.getHSL(e),e.h+=t,e.s+=n,e.l+=r,this.setHSL(e.h,e.s,e.l),this}}(),add:function(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this},addColors:function(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this},addScalar:function(e){return this.r+=e,this.g+=e,this.b+=e,this},sub:function(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this},multiply:function(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this},multiplyScalar:function(e){return this.r*=e,this.g*=e,this.b*=e,this},lerp:function(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this},lerpHSL:(on={h:0,s:0,l:0},sn={h:0,s:0,l:0},function(e,t){this.getHSL(on),e.getHSL(sn);var n=At.lerp(on.h,sn.h,t),r=At.lerp(on.s,sn.s,t),i=At.lerp(on.l,sn.l,t);return this.setHSL(n,r,i),this}),equals:function(e){return e.r===this.r&&e.g===this.g&&e.b===this.b},fromArray:function(e,t){return void 0===t&&(t=0),this.r=e[t],this.g=e[t+1],this.b=e[t+2],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e},toJSON:function(){return this.getHex()}});
/**
   * Uniforms library for shared webgl shaders
   */
var un,dn={common:{diffuse:{value:new hn(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new Rt},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Lt(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new hn(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},
// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src
rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}}},points:{diffuse:{value:new hn(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},uvTransform:{value:new Rt}},sprite:{diffuse:{value:new hn(15658734)},opacity:{value:1},center:{value:new Lt(.5,.5)},rotation:{value:0},map:{value:null},uvTransform:{value:new Rt}}},fn={basic:{uniforms:an([dn.common,dn.specularmap,dn.envmap,dn.aomap,dn.lightmap,dn.fog]),vertexShader:nn.meshbasic_vert,fragmentShader:nn.meshbasic_frag},lambert:{uniforms:an([dn.common,dn.specularmap,dn.envmap,dn.aomap,dn.lightmap,dn.emissivemap,dn.fog,dn.lights,{emissive:{value:new hn(0)}}]),vertexShader:nn.meshlambert_vert,fragmentShader:nn.meshlambert_frag},phong:{uniforms:an([dn.common,dn.specularmap,dn.envmap,dn.aomap,dn.lightmap,dn.emissivemap,dn.bumpmap,dn.normalmap,dn.displacementmap,dn.gradientmap,dn.fog,dn.lights,{emissive:{value:new hn(0)},specular:{value:new hn(1118481)},shininess:{value:30}}]),vertexShader:nn.meshphong_vert,fragmentShader:nn.meshphong_frag},standard:{uniforms:an([dn.common,dn.envmap,dn.aomap,dn.lightmap,dn.emissivemap,dn.bumpmap,dn.normalmap,dn.displacementmap,dn.roughnessmap,dn.metalnessmap,dn.fog,dn.lights,{emissive:{value:new hn(0)},roughness:{value:.5},metalness:{value:.5},envMapIntensity:{value:1}}]),vertexShader:nn.meshphysical_vert,fragmentShader:nn.meshphysical_frag},matcap:{uniforms:an([dn.common,dn.bumpmap,dn.normalmap,dn.displacementmap,dn.fog,{matcap:{value:null}}]),vertexShader:nn.meshmatcap_vert,fragmentShader:nn.meshmatcap_frag},points:{uniforms:an([dn.points,dn.fog]),vertexShader:nn.points_vert,fragmentShader:nn.points_frag},dashed:{uniforms:an([dn.common,dn.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:nn.linedashed_vert,fragmentShader:nn.linedashed_frag},depth:{uniforms:an([dn.common,dn.displacementmap]),vertexShader:nn.depth_vert,fragmentShader:nn.depth_frag},normal:{uniforms:an([dn.common,dn.bumpmap,dn.normalmap,dn.displacementmap,{opacity:{value:1}}]),vertexShader:nn.normal_vert,fragmentShader:nn.normal_frag},sprite:{uniforms:an([dn.sprite,dn.fog]),vertexShader:nn.sprite_vert,fragmentShader:nn.sprite_frag},background:{uniforms:{uvTransform:{value:new Rt},t2D:{value:null}},vertexShader:nn.background_vert,fragmentShader:nn.background_frag},
/* -------------------------------------------------------------------------
  	//	Cube map shader
  	 ------------------------------------------------------------------------- */
cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:nn.cube_vert,fragmentShader:nn.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:nn.equirect_vert,fragmentShader:nn.equirect_frag},distanceRGBA:{uniforms:an([dn.common,dn.displacementmap,{referencePosition:{value:new Ct},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:nn.distanceRGBA_vert,fragmentShader:nn.distanceRGBA_frag},shadow:{uniforms:an([dn.lights,dn.fog,{color:{value:new hn(0)},opacity:{value:1}}]),vertexShader:nn.shadow_vert,fragmentShader:nn.shadow_frag}};
/**
   * @author alteredq / http://alteredqualia.com/
   * @author mrdoob / http://mrdoob.com/
   * @author mikael emtinger / http://gomo.se/
   */
/**
   * @author mrdoob / http://mrdoob.com/
   */
function pn(){var e=null,t=!1,n=null;function r(i,a){!1!==t&&(n(i,a),e.requestAnimationFrame(r))}return{start:function(){!0!==t&&null!==n&&(e.requestAnimationFrame(r),t=!0)},stop:function(){t=!1},setAnimationLoop:function(e){n=e},setContext:function(t){e=t}}}
/**
   * @author mrdoob / http://mrdoob.com/
   */function mn(e){var t=new WeakMap;return{get:
//
function(e){return e.isInterleavedBufferAttribute&&(e=e.data),t.get(e)},remove:function(n){n.isInterleavedBufferAttribute&&(n=n.data);var r=t.get(n);r&&(e.deleteBuffer(r.buffer),t.delete(n))},update:function(n,r){n.isInterleavedBufferAttribute&&(n=n.data);var i=t.get(n);void 0===i?t.set(n,function(t,n){var r=t.array,i=t.dynamic?35048:35044,a=e.createBuffer();e.bindBuffer(n,a),e.bufferData(n,r,i),t.onUploadCallback();var o=5126;return r instanceof Float32Array?o=5126:r instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):r instanceof Uint16Array?o=5123:r instanceof Int16Array?o=5122:r instanceof Uint32Array?o=5125:r instanceof Int32Array?o=5124:r instanceof Int8Array?o=5120:r instanceof Uint8Array&&(o=5121),{buffer:a,type:o,bytesPerElement:r.BYTES_PER_ELEMENT,version:t.version}}(n,r)):i.version<n.version&&(function(t,n,r){var i=n.array,a=n.updateRange;e.bindBuffer(r,t),!1===n.dynamic?e.bufferData(r,i,35044):-1===a.count?
// Not using update ranges
e.bufferSubData(r,0,i):0===a.count?console.error("THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually."):(e.bufferSubData(r,a.offset*i.BYTES_PER_ELEMENT,i.subarray(a.offset,a.offset+a.count)),a.count=-1)}(i.buffer,n,r),i.version=n.version)}}}
/**
   * @author mrdoob / http://mrdoob.com/
   * @author alteredq / http://alteredqualia.com/
   */function gn(e,t,n,r,i,a){this.a=e,this.b=t,this.c=n,this.normal=r&&r.isVector3?r:new Ct,this.vertexNormals=Array.isArray(r)?r:[],this.color=i&&i.isColor?i:new hn,this.vertexColors=Array.isArray(i)?i:[],this.materialIndex=void 0!==a?a:0}
/**
   * @author mrdoob / http://mrdoob.com/
   * @author WestLangley / http://github.com/WestLangley
   * @author bhouston / http://clara.io
   */
function vn(e,t,n,r){this._x=e||0,this._y=t||0,this._z=n||0,this._order=r||vn.DefaultOrder}
/**
   * @author mrdoob / http://mrdoob.com/
   */
function yn(){this.mask=1}fn.physical={uniforms:an([fn.standard.uniforms,{clearCoat:{value:0},clearCoatRoughness:{value:0}}]),vertexShader:nn.meshphysical_vert,fragmentShader:nn.meshphysical_frag},Object.assign(gn.prototype,{clone:function(){return(new this.constructor).copy(this)},copy:function(e){this.a=e.a,this.b=e.b,this.c=e.c,this.normal.copy(e.normal),this.color.copy(e.color),this.materialIndex=e.materialIndex;for(var t=0,n=e.vertexNormals.length;t<n;t++)this.vertexNormals[t]=e.vertexNormals[t].clone();for(t=0,n=e.vertexColors.length;t<n;t++)this.vertexColors[t]=e.vertexColors[t].clone();return this}}),vn.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],vn.DefaultOrder="XYZ",Object.defineProperties(vn.prototype,{x:{get:function(){return this._x},set:function(e){this._x=e,this.onChangeCallback()}},y:{get:function(){return this._y},set:function(e){this._y=e,this.onChangeCallback()}},z:{get:function(){return this._z},set:function(e){this._z=e,this.onChangeCallback()}},order:{get:function(){return this._order},set:function(e){this._order=e,this.onChangeCallback()}}}),Object.assign(vn.prototype,{isEuler:!0,set:function(e,t,n,r){return this._x=e,this._y=t,this._z=n,this._order=r||this._order,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._order)},copy:function(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this.onChangeCallback(),this},setFromRotationMatrix:function(e,t,n){var r=At.clamp,i=e.elements,a=i[0],o=i[4],s=i[8],c=i[1],l=i[5],h=i[9],u=i[2],d=i[6],f=i[10];
// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)
return"XYZ"===(t=t||this._order)?(this._y=Math.asin(r(s,-1,1)),Math.abs(s)<.99999?(this._x=Math.atan2(-h,f),this._z=Math.atan2(-o,a)):(this._x=Math.atan2(d,l),this._z=0)):"YXZ"===t?(this._x=Math.asin(-r(h,-1,1)),Math.abs(h)<.99999?(this._y=Math.atan2(s,f),this._z=Math.atan2(c,l)):(this._y=Math.atan2(-u,a),this._z=0)):"ZXY"===t?(this._x=Math.asin(r(d,-1,1)),Math.abs(d)<.99999?(this._y=Math.atan2(-u,f),this._z=Math.atan2(-o,l)):(this._y=0,this._z=Math.atan2(c,a))):"ZYX"===t?(this._y=Math.asin(-r(u,-1,1)),Math.abs(u)<.99999?(this._x=Math.atan2(d,f),this._z=Math.atan2(c,a)):(this._x=0,this._z=Math.atan2(-o,l))):"YZX"===t?(this._z=Math.asin(r(c,-1,1)),Math.abs(c)<.99999?(this._x=Math.atan2(-h,l),this._y=Math.atan2(-u,a)):(this._x=0,this._y=Math.atan2(s,f))):"XZY"===t?(this._z=Math.asin(-r(o,-1,1)),Math.abs(o)<.99999?(this._x=Math.atan2(d,l),this._y=Math.atan2(s,a)):(this._x=Math.atan2(-h,f),this._y=0)):console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+t),this._order=t,!1!==n&&this.onChangeCallback(),this},setFromQuaternion:function(){var e=new tn;return function(t,n,r){return e.makeRotationFromQuaternion(t),this.setFromRotationMatrix(e,n,r)}}(),setFromVector3:function(e,t){return this.set(e.x,e.y,e.z,t||this._order)},reorder:(un=new Pt,function(e){return un.setFromEuler(this),this.setFromQuaternion(un,e)}),equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order},fromArray:function(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this.onChangeCallback(),this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e},toVector3:function(e){return e?e.set(this._x,this._y,this._z):new Ct(this._x,this._y,this._z)},onChange:function(e){return this.onChangeCallback=e,this},onChangeCallback:function(){}}),Object.assign(yn.prototype,{set:function(e){this.mask=1<<e|0},enable:function(e){this.mask|=1<<e|0},toggle:function(e){this.mask^=1<<e|0},disable:function(e){this.mask&=~(1<<e|0)},test:function(e){return 0!=(this.mask&e.mask)}});
/**
   * @author mrdoob / http://mrdoob.com/
   * @author mikael emtinger / http://gomo.se/
   * @author alteredq / http://alteredqualia.com/
   * @author WestLangley / http://github.com/WestLangley
   * @author elephantatwork / www.elephantatwork.ch
   */
var bn,xn,wn,_n,Mn=0;function En(){Object.defineProperty(this,"id",{value:Mn++}),this.uuid=At.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=En.DefaultUp.clone();var e=new Ct,t=new vn,n=new Pt,r=new Ct(1,1,1);t.onChange(function(){n.setFromEuler(t,!1)}),n.onChange(function(){t.setFromQuaternion(n,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new tn},normalMatrix:{value:new Rt}}),this.matrix=new tn,this.matrixWorld=new tn,this.matrixAutoUpdate=En.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new yn,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={}}En.DefaultUp=new Ct(0,1,0),En.DefaultMatrixAutoUpdate=!0,En.prototype=Object.assign(Object.create(r.prototype),{constructor:En,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix:function(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(e){return this.quaternion.premultiply(e),this},setRotationFromAxisAngle:function(e,t){
// assumes axis is normalized
this.quaternion.setFromAxisAngle(e,t)},setRotationFromEuler:function(e){this.quaternion.setFromEuler(e,!0)},setRotationFromMatrix:function(e){
// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)
this.quaternion.setFromRotationMatrix(e)},setRotationFromQuaternion:function(e){
// assumes q is normalized
this.quaternion.copy(e)},rotateOnAxis:(_n=new Pt,function(e,t){return _n.setFromAxisAngle(e,t),this.quaternion.multiply(_n),this}),rotateOnWorldAxis:function(){
// rotate object on axis in world space
// axis is assumed to be normalized
// method assumes no rotated parent
var e=new Pt;return function(t,n){return e.setFromAxisAngle(t,n),this.quaternion.premultiply(e),this}}(),rotateX:function(){var e=new Ct(1,0,0);return function(t){return this.rotateOnAxis(e,t)}}(),rotateY:function(){var e=new Ct(0,1,0);return function(t){return this.rotateOnAxis(e,t)}}(),rotateZ:function(){var e=new Ct(0,0,1);return function(t){return this.rotateOnAxis(e,t)}}(),translateOnAxis:function(){
// translate object by distance along axis in object space
// axis is assumed to be normalized
var e=new Ct;return function(t,n){return e.copy(t).applyQuaternion(this.quaternion),this.position.add(e.multiplyScalar(n)),this}}(),translateX:function(){var e=new Ct(1,0,0);return function(t){return this.translateOnAxis(e,t)}}(),translateY:function(){var e=new Ct(0,1,0);return function(t){return this.translateOnAxis(e,t)}}(),translateZ:function(){var e=new Ct(0,0,1);return function(t){return this.translateOnAxis(e,t)}}(),localToWorld:function(e){return e.applyMatrix4(this.matrixWorld)},worldToLocal:(wn=new tn,function(e){return e.applyMatrix4(wn.getInverse(this.matrixWorld))}),lookAt:function(){
// This method does not support objects having non-uniformly-scaled parent(s)
var e=new Pt,t=new tn,n=new Ct,r=new Ct;return function(i,a,o){i.isVector3?n.copy(i):n.set(i,a,o);var s=this.parent;this.updateWorldMatrix(!0,!1),r.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?t.lookAt(r,n,this.up):t.lookAt(n,r,this.up),this.quaternion.setFromRotationMatrix(t),s&&(t.extractRotation(s.matrixWorld),e.setFromRotationMatrix(t),this.quaternion.premultiply(e.inverse()))}}(),add:function(e){if(arguments.length>1){for(var t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(null!==e.parent&&e.parent.remove(e),e.parent=this,e.dispatchEvent({type:"added"}),this.children.push(e)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)},remove:function(e){if(arguments.length>1){for(var t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}var n=this.children.indexOf(e);return-1!==n&&(e.parent=null,e.dispatchEvent({type:"removed"}),this.children.splice(n,1)),this},getObjectById:function(e){return this.getObjectByProperty("id",e)},getObjectByName:function(e){return this.getObjectByProperty("name",e)},getObjectByProperty:function(e,t){if(this[e]===t)return this;for(var n=0,r=this.children.length;n<r;n++){var i=this.children[n].getObjectByProperty(e,t);if(void 0!==i)return i}},getWorldPosition:function(e){return void 0===e&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),e=new Ct),this.updateMatrixWorld(!0),e.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:(bn=new Ct,xn=new Ct,function(e){return void 0===e&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),e=new Pt),this.updateMatrixWorld(!0),this.matrixWorld.decompose(bn,e,xn),e}),getWorldScale:function(){var e=new Ct,t=new Pt;return function(n){return void 0===n&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),n=new Ct),this.updateMatrixWorld(!0),this.matrixWorld.decompose(e,t,n),n}}(),getWorldDirection:function(e){void 0===e&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),e=new Ct),this.updateMatrixWorld(!0);var t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()},raycast:function(){},traverse:function(e){e(this);for(var t=this.children,n=0,r=t.length;n<r;n++)t[n].traverse(e)},traverseVisible:function(e){if(!1!==this.visible){e(this);for(var t=this.children,n=0,r=t.length;n<r;n++)t[n].traverseVisible(e)}},traverseAncestors:function(e){var t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(
// update children
var t=this.children,n=0,r=t.length;n<r;n++)t[n].updateMatrixWorld(e)},updateWorldMatrix:function(e,t){var n=this.parent;
// update children
if(!0===e&&null!==n&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===t)for(var r=this.children,i=0,a=r.length;i<a;i++)r[i].updateWorldMatrix(!1,!0)},toJSON:function(e){
// meta is a string when called from JSON.stringify
var t=void 0===e||"string"==typeof e,n={};
// meta is a hash used to collect geometries, materials.
// not providing it implies that this is the root object
// being serialized.
t&&(
// initialize meta obj
e={geometries:{},materials:{},textures:{},images:{},shapes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});
// standard Object3D serialization
var r={};
//
function i(t,n){return void 0===t[n.uuid]&&(t[n.uuid]=n.toJSON(e)),n.uuid}if(r.uuid=this.uuid,r.type=this.type,""!==this.name&&(r.name=this.name),!0===this.castShadow&&(r.castShadow=!0),!0===this.receiveShadow&&(r.receiveShadow=!0),!1===this.visible&&(r.visible=!1),!1===this.frustumCulled&&(r.frustumCulled=!1),0!==this.renderOrder&&(r.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(r.matrixAutoUpdate=!1),
// object specific properties
this.isMesh&&this.drawMode!==ft&&(r.drawMode=this.drawMode),this.isMesh||this.isLine||this.isPoints){r.geometry=i(e.geometries,this.geometry);var a=this.geometry.parameters;if(void 0!==a&&void 0!==a.shapes){var o=a.shapes;if(Array.isArray(o))for(var s=0,c=o.length;s<c;s++){var l=o[s];i(e.shapes,l)}else i(e.shapes,o)}}if(void 0!==this.material)if(Array.isArray(this.material)){var h=[];for(s=0,c=this.material.length;s<c;s++)h.push(i(e.materials,this.material[s]));r.material=h}else r.material=i(e.materials,this.material);
//
if(this.children.length>0){r.children=[];for(s=0;s<this.children.length;s++)r.children.push(this.children[s].toJSON(e).object)}if(t){var u=m(e.geometries),d=m(e.materials),f=m(e.textures),p=m(e.images);o=m(e.shapes);u.length>0&&(n.geometries=u),d.length>0&&(n.materials=d),f.length>0&&(n.textures=f),p.length>0&&(n.images=p),o.length>0&&(n.shapes=o)}return n.object=r,n;
// extract data from the cache hash
// remove metadata on each item
// and return as array
function m(e){var t=[];for(var n in e){var r=e[n];delete r.metadata,t.push(r)}return t}},clone:function(e){return(new this.constructor).copy(this,e)},copy:function(e,t){if(void 0===t&&(t=!0),this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(var n=0;n<e.children.length;n++){var r=e.children[n];this.add(r.clone())}return this}});
/**
   * @author mrdoob / http://mrdoob.com/
   * @author kile / http://kile.stravaganza.org/
   * @author alteredq / http://alteredqualia.com/
   * @author mikael emtinger / http://gomo.se/
   * @author zz85 / http://www.lab4games.net/zz85/blog
   * @author bhouston / http://clara.io
   */
var Sn,Tn,An=0;// Geometry uses even numbers as Id
function Ln(){Object.defineProperty(this,"id",{value:An+=2}),this.uuid=At.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,
// update flags
this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1}
/**
   * @author mrdoob / http://mrdoob.com/
   */
function Pn(e,t,n){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=t,this.count=void 0!==e?e.length/t:0,this.normalized=!0===n,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.version=0}
//
function Cn(e,t,n){Pn.call(this,new Int8Array(e),t,n)}function Rn(e,t,n){Pn.call(this,new Uint8Array(e),t,n)}function On(e,t,n){Pn.call(this,new Uint8ClampedArray(e),t,n)}function Nn(e,t,n){Pn.call(this,new Int16Array(e),t,n)}function In(e,t,n){Pn.call(this,new Uint16Array(e),t,n)}function Dn(e,t,n){Pn.call(this,new Int32Array(e),t,n)}function zn(e,t,n){Pn.call(this,new Uint32Array(e),t,n)}function kn(e,t,n){Pn.call(this,new Float32Array(e),t,n)}function Bn(e,t,n){Pn.call(this,new Float64Array(e),t,n)}
/**
   * @author mrdoob / http://mrdoob.com/
   */
function Un(){this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],
// this.lineDistances = [];
this.boundingBox=null,this.boundingSphere=null,
// update flags
this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1}
/**
   * @author mrdoob / http://mrdoob.com/
   */
function Fn(e){if(0===e.length)return-1/0;for(var t=e[0],n=1,r=e.length;n<r;++n)e[n]>t&&(t=e[n]);return t}
/**
   * @author alteredq / http://alteredqualia.com/
   * @author mrdoob / http://mrdoob.com/
   */Ln.prototype=Object.assign(Object.create(r.prototype),{constructor:Ln,isGeometry:!0,applyMatrix:function(e){for(var t=(new Rt).getNormalMatrix(e),n=0,r=this.vertices.length;n<r;n++){this.vertices[n].applyMatrix4(e)}for(n=0,r=this.faces.length;n<r;n++){var i=this.faces[n];i.normal.applyMatrix3(t).normalize();for(var a=0,o=i.vertexNormals.length;a<o;a++)i.vertexNormals[a].applyMatrix3(t).normalize()}return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this},rotateX:function(){
// rotate geometry around world x-axis
var e=new tn;return function(t){return e.makeRotationX(t),this.applyMatrix(e),this}}(),rotateY:function(){
// rotate geometry around world y-axis
var e=new tn;return function(t){return e.makeRotationY(t),this.applyMatrix(e),this}}(),rotateZ:function(){
// rotate geometry around world z-axis
var e=new tn;return function(t){return e.makeRotationZ(t),this.applyMatrix(e),this}}(),translate:function(){
// translate geometry
var e=new tn;return function(t,n,r){return e.makeTranslation(t,n,r),this.applyMatrix(e),this}}(),scale:function(){
// scale geometry
var e=new tn;return function(t,n,r){return e.makeScale(t,n,r),this.applyMatrix(e),this}}(),lookAt:(Tn=new En,function(e){Tn.lookAt(e),Tn.updateMatrix(),this.applyMatrix(Tn.matrix)}),fromBufferGeometry:function(e){var t=this,n=null!==e.index?e.index.array:void 0,r=e.attributes,i=r.position.array,a=void 0!==r.normal?r.normal.array:void 0,o=void 0!==r.color?r.color.array:void 0,s=void 0!==r.uv?r.uv.array:void 0,c=void 0!==r.uv2?r.uv2.array:void 0;void 0!==c&&(this.faceVertexUvs[1]=[]);for(var l=0,h=0;l<i.length;l+=3,h+=2)t.vertices.push((new Ct).fromArray(i,l)),void 0!==o&&t.colors.push((new hn).fromArray(o,l));function u(e,n,r,i){var l=void 0===o?[]:[t.colors[e].clone(),t.colors[n].clone(),t.colors[r].clone()],h=new gn(e,n,r,void 0===a?[]:[(new Ct).fromArray(a,3*e),(new Ct).fromArray(a,3*n),(new Ct).fromArray(a,3*r)],l,i);t.faces.push(h),void 0!==s&&t.faceVertexUvs[0].push([(new Lt).fromArray(s,2*e),(new Lt).fromArray(s,2*n),(new Lt).fromArray(s,2*r)]),void 0!==c&&t.faceVertexUvs[1].push([(new Lt).fromArray(c,2*e),(new Lt).fromArray(c,2*n),(new Lt).fromArray(c,2*r)])}var d=e.groups;if(d.length>0)for(l=0;l<d.length;l++)for(var f=d[l],p=f.start,m=(h=p,p+f.count);h<m;h+=3)void 0!==n?u(n[h],n[h+1],n[h+2],f.materialIndex):u(h,h+1,h+2,f.materialIndex);else if(void 0!==n)for(l=0;l<n.length;l+=3)u(n[l],n[l+1],n[l+2]);else for(l=0;l<i.length/3;l+=3)u(l,l+1,l+2);return this.computeFaceNormals(),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),this},center:(Sn=new Ct,function(){return this.computeBoundingBox(),this.boundingBox.getCenter(Sn).negate(),this.translate(Sn.x,Sn.y,Sn.z),this}),normalize:function(){this.computeBoundingSphere();var e=this.boundingSphere.center,t=this.boundingSphere.radius,n=0===t?1:1/t,r=new tn;return r.set(n,0,0,-n*e.x,0,n,0,-n*e.y,0,0,n,-n*e.z,0,0,0,1),this.applyMatrix(r),this},computeFaceNormals:function(){for(var e=new Ct,t=new Ct,n=0,r=this.faces.length;n<r;n++){var i=this.faces[n],a=this.vertices[i.a],o=this.vertices[i.b],s=this.vertices[i.c];e.subVectors(s,o),t.subVectors(a,o),e.cross(t),e.normalize(),i.normal.copy(e)}},computeVertexNormals:function(e){var t,n,r,i,a,o;for(void 0===e&&(e=!0),o=new Array(this.vertices.length),t=0,n=this.vertices.length;t<n;t++)o[t]=new Ct;if(e){
// vertex normals weighted by triangle areas
// http://www.iquilezles.org/www/articles/normals/normals.htm
var s,c,l,h=new Ct,u=new Ct;for(r=0,i=this.faces.length;r<i;r++)a=this.faces[r],s=this.vertices[a.a],c=this.vertices[a.b],l=this.vertices[a.c],h.subVectors(l,c),u.subVectors(s,c),h.cross(u),o[a.a].add(h),o[a.b].add(h),o[a.c].add(h)}else for(this.computeFaceNormals(),r=0,i=this.faces.length;r<i;r++)o[(a=this.faces[r]).a].add(a.normal),o[a.b].add(a.normal),o[a.c].add(a.normal);for(t=0,n=this.vertices.length;t<n;t++)o[t].normalize();for(r=0,i=this.faces.length;r<i;r++){var d=(a=this.faces[r]).vertexNormals;3===d.length?(d[0].copy(o[a.a]),d[1].copy(o[a.b]),d[2].copy(o[a.c])):(d[0]=o[a.a].clone(),d[1]=o[a.b].clone(),d[2]=o[a.c].clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){var e,t,n;for(this.computeFaceNormals(),e=0,t=this.faces.length;e<t;e++){var r=(n=this.faces[e]).vertexNormals;3===r.length?(r[0].copy(n.normal),r[1].copy(n.normal),r[2].copy(n.normal)):(r[0]=n.normal.clone(),r[1]=n.normal.clone(),r[2]=n.normal.clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){var e,t,n,r,i;
// save original normals
// - create temp variables on first access
//   otherwise just copy (for faster repeated calls)
for(n=0,r=this.faces.length;n<r;n++)for((i=this.faces[n]).__originalFaceNormal?i.__originalFaceNormal.copy(i.normal):i.__originalFaceNormal=i.normal.clone(),i.__originalVertexNormals||(i.__originalVertexNormals=[]),e=0,t=i.vertexNormals.length;e<t;e++)i.__originalVertexNormals[e]?i.__originalVertexNormals[e].copy(i.vertexNormals[e]):i.__originalVertexNormals[e]=i.vertexNormals[e].clone();
// use temp geometry to compute face and vertex normals for each morph
var a=new Ln;for(a.faces=this.faces,e=0,t=this.morphTargets.length;e<t;e++){
// create on first access
if(!this.morphNormals[e]){this.morphNormals[e]={},this.morphNormals[e].faceNormals=[],this.morphNormals[e].vertexNormals=[];var o=this.morphNormals[e].faceNormals,s=this.morphNormals[e].vertexNormals;for(n=0,r=this.faces.length;n<r;n++)c=new Ct,l={a:new Ct,b:new Ct,c:new Ct},o.push(c),s.push(l)}var c,l,h=this.morphNormals[e];
// set vertices to morph target
for(a.vertices=this.morphTargets[e].vertices,
// compute morph normals
a.computeFaceNormals(),a.computeVertexNormals(),n=0,r=this.faces.length;n<r;n++)i=this.faces[n],c=h.faceNormals[n],l=h.vertexNormals[n],c.copy(i.normal),l.a.copy(i.vertexNormals[0]),l.b.copy(i.vertexNormals[1]),l.c.copy(i.vertexNormals[2])}
// restore original normals
for(n=0,r=this.faces.length;n<r;n++)(i=this.faces[n]).normal=i.__originalFaceNormal,i.vertexNormals=i.__originalVertexNormals},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new Qt),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new Kt),this.boundingSphere.setFromPoints(this.vertices)},merge:function(e,t,n){if(e&&e.isGeometry){var r,i=this.vertices.length,a=this.vertices,o=e.vertices,s=this.faces,c=e.faces,l=this.faceVertexUvs[0],h=e.faceVertexUvs[0],u=this.colors,d=e.colors;void 0===n&&(n=0),void 0!==t&&(r=(new Rt).getNormalMatrix(t));
// vertices
for(var f=0,p=o.length;f<p;f++){var m=o[f].clone();void 0!==t&&m.applyMatrix4(t),a.push(m)}
// colors
for(f=0,p=d.length;f<p;f++)u.push(d[f].clone());
// faces
for(f=0,p=c.length;f<p;f++){var g,v,y,b=c[f],x=b.vertexNormals,w=b.vertexColors;(g=new gn(b.a+i,b.b+i,b.c+i)).normal.copy(b.normal),void 0!==r&&g.normal.applyMatrix3(r).normalize();for(var _=0,M=x.length;_<M;_++)v=x[_].clone(),void 0!==r&&v.applyMatrix3(r).normalize(),g.vertexNormals.push(v);g.color.copy(b.color);for(_=0,M=w.length;_<M;_++)y=w[_],g.vertexColors.push(y.clone());g.materialIndex=b.materialIndex+n,s.push(g)}
// uvs
for(f=0,p=h.length;f<p;f++){var E=h[f],S=[];if(void 0!==E){for(_=0,M=E.length;_<M;_++)S.push(E[_].clone());l.push(S)}}}else console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",e)},mergeMesh:function(e){e&&e.isMesh?(e.matrixAutoUpdate&&e.updateMatrix(),this.merge(e.geometry,e.matrix)):console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",e)},
/*
  	 * Checks for duplicate vertices with hashmap.
  	 * Duplicated vertices are removed
  	 * and faces' vertices are updated.
  	 */
mergeVertices:function(){var e,t,n,r,i,a,o,s,c={},l=[],h=[],u=Math.pow(10,4);// Hashmap for looking up vertices by position coordinates (and making sure they are unique)
for(n=0,r=this.vertices.length;n<r;n++)e=this.vertices[n],void 0===c[t=Math.round(e.x*u)+"_"+Math.round(e.y*u)+"_"+Math.round(e.z*u)]?(c[t]=n,l.push(this.vertices[n]),h[n]=l.length-1):
//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);
h[n]=h[c[t]];
// if faces are completely degenerate after merging vertices, we
// have to remove them from the geometry.
var d=[];for(n=0,r=this.faces.length;n<r;n++){(i=this.faces[n]).a=h[i.a],i.b=h[i.b],i.c=h[i.c],a=[i.a,i.b,i.c];
// if any duplicate vertices are found in a Face3
// we have to remove the face as nothing can be saved
for(var f=0;f<3;f++)if(a[f]===a[(f+1)%3]){d.push(n);break}}for(n=d.length-1;n>=0;n--){var p=d[n];for(this.faces.splice(p,1),o=0,s=this.faceVertexUvs.length;o<s;o++)this.faceVertexUvs[o].splice(p,1)}
// Use unique set of vertices
var m=this.vertices.length-l.length;return this.vertices=l,m},setFromPoints:function(e){this.vertices=[];for(var t=0,n=e.length;t<n;t++){var r=e[t];this.vertices.push(new Ct(r.x,r.y,r.z||0))}return this},sortFacesByMaterialIndex:function(){
// tag faces
for(var e=this.faces,t=e.length,n=0;n<t;n++)e[n]._id=n;
// sort faces
e.sort(function(e,t){return e.materialIndex-t.materialIndex});
// sort uvs
var r,i,a=this.faceVertexUvs[0],o=this.faceVertexUvs[1];a&&a.length===t&&(r=[]),o&&o.length===t&&(i=[]);for(n=0;n<t;n++){var s=e[n]._id;r&&r.push(a[s]),i&&i.push(o[s])}r&&(this.faceVertexUvs[0]=r),i&&(this.faceVertexUvs[1]=i)},toJSON:function(){var e={metadata:{version:4.5,type:"Geometry",generator:"Geometry.toJSON"}};
// standard Geometry serialization
if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),void 0!==this.parameters){var t=this.parameters;for(var n in t)void 0!==t[n]&&(e[n]=t[n]);return e}for(var r=[],i=0;i<this.vertices.length;i++){var a=this.vertices[i];r.push(a.x,a.y,a.z)}var o=[],s=[],c={},l=[],h={},u=[],d={};for(i=0;i<this.faces.length;i++){var f=this.faces[i],p=void 0!==this.faceVertexUvs[0][i],m=f.normal.length()>0,g=f.vertexNormals.length>0,v=1!==f.color.r||1!==f.color.g||1!==f.color.b,y=f.vertexColors.length>0,b=0;if(b=M(b,0,0),// isQuad
b=M(b,1,!0),b=M(b,2,!1),b=M(b,3,p),b=M(b,4,m),b=M(b,5,g),b=M(b,6,v),b=M(b,7,y),o.push(b),o.push(f.a,f.b,f.c),o.push(f.materialIndex),p){var x=this.faceVertexUvs[0][i];o.push(T(x[0]),T(x[1]),T(x[2]))}if(m&&o.push(E(f.normal)),g){var w=f.vertexNormals;o.push(E(w[0]),E(w[1]),E(w[2]))}if(v&&o.push(S(f.color)),y){var _=f.vertexColors;o.push(S(_[0]),S(_[1]),S(_[2]))}}function M(e,t,n){return n?e|1<<t:e&~(1<<t)}function E(e){var t=e.x.toString()+e.y.toString()+e.z.toString();return void 0!==c[t]?c[t]:(c[t]=s.length/3,s.push(e.x,e.y,e.z),c[t])}function S(e){var t=e.r.toString()+e.g.toString()+e.b.toString();return void 0!==h[t]?h[t]:(h[t]=l.length,l.push(e.getHex()),h[t])}function T(e){var t=e.x.toString()+e.y.toString();return void 0!==d[t]?d[t]:(d[t]=u.length/2,u.push(e.x,e.y),d[t])}return e.data={},e.data.vertices=r,e.data.normals=s,l.length>0&&(e.data.colors=l),u.length>0&&(e.data.uvs=[u]),// temporal backward compatibility
e.data.faces=o,e},clone:function(){
/*
  		 // Handle primitives

  		 var parameters = this.parameters;

  		 if ( parameters !== undefined ) {

  		 var values = [];

  		 for ( var key in parameters ) {

  		 values.push( parameters[ key ] );

  		 }

  		 var geometry = Object.create( this.constructor.prototype );
  		 this.constructor.apply( geometry, values );
  		 return geometry;

  		 }

  		 return new this.constructor().copy( this );
  		 */
return(new Ln).copy(this)},copy:function(e){var t,n,r,i,a,o;
// reset
this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,
// name
this.name=e.name;
// vertices
var s=e.vertices;for(t=0,n=s.length;t<n;t++)this.vertices.push(s[t].clone());
// colors
var c=e.colors;for(t=0,n=c.length;t<n;t++)this.colors.push(c[t].clone());
// faces
var l=e.faces;for(t=0,n=l.length;t<n;t++)this.faces.push(l[t].clone());
// face vertex uvs
for(t=0,n=e.faceVertexUvs.length;t<n;t++){var h=e.faceVertexUvs[t];for(void 0===this.faceVertexUvs[t]&&(this.faceVertexUvs[t]=[]),r=0,i=h.length;r<i;r++){var u=h[r],d=[];for(a=0,o=u.length;a<o;a++){var f=u[a];d.push(f.clone())}this.faceVertexUvs[t].push(d)}}
// morph targets
var p=e.morphTargets;for(t=0,n=p.length;t<n;t++){var m={};
// vertices
if(m.name=p[t].name,void 0!==p[t].vertices)for(m.vertices=[],r=0,i=p[t].vertices.length;r<i;r++)m.vertices.push(p[t].vertices[r].clone());
// normals
if(void 0!==p[t].normals)for(m.normals=[],r=0,i=p[t].normals.length;r<i;r++)m.normals.push(p[t].normals[r].clone());this.morphTargets.push(m)}
// morph normals
var g=e.morphNormals;for(t=0,n=g.length;t<n;t++){var v={};
// vertex normals
if(void 0!==g[t].vertexNormals)for(v.vertexNormals=[],r=0,i=g[t].vertexNormals.length;r<i;r++){var y=g[t].vertexNormals[r],b={};b.a=y.a.clone(),b.b=y.b.clone(),b.c=y.c.clone(),v.vertexNormals.push(b)}
// face normals
if(void 0!==g[t].faceNormals)for(v.faceNormals=[],r=0,i=g[t].faceNormals.length;r<i;r++)v.faceNormals.push(g[t].faceNormals[r].clone());this.morphNormals.push(v)}
// skin weights
var x=e.skinWeights;for(t=0,n=x.length;t<n;t++)this.skinWeights.push(x[t].clone());
// skin indices
var w=e.skinIndices;for(t=0,n=w.length;t<n;t++)this.skinIndices.push(w[t].clone());
// line distances
var _=e.lineDistances;for(t=0,n=_.length;t<n;t++)this.lineDistances.push(_[t]);
// bounding box
var M=e.boundingBox;null!==M&&(this.boundingBox=M.clone());
// bounding sphere
var E=e.boundingSphere;return null!==E&&(this.boundingSphere=E.clone()),
// update flags
this.elementsNeedUpdate=e.elementsNeedUpdate,this.verticesNeedUpdate=e.verticesNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.lineDistancesNeedUpdate=e.lineDistancesNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Object.defineProperty(Pn.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}}),Object.assign(Pn.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},setArray:function(e){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");return this.count=void 0!==e?e.length/this.itemSize:0,this.array=e,this},setDynamic:function(e){return this.dynamic=e,this},copy:function(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.dynamic=e.dynamic,this},copyAt:function(e,t,n){e*=this.itemSize,n*=t.itemSize;for(var r=0,i=this.itemSize;r<i;r++)this.array[e+r]=t.array[n+r];return this},copyArray:function(e){return this.array.set(e),this},copyColorsArray:function(e){for(var t=this.array,n=0,r=0,i=e.length;r<i;r++){var a=e[r];void 0===a&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",r),a=new hn),t[n++]=a.r,t[n++]=a.g,t[n++]=a.b}return this},copyVector2sArray:function(e){for(var t=this.array,n=0,r=0,i=e.length;r<i;r++){var a=e[r];void 0===a&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",r),a=new Lt),t[n++]=a.x,t[n++]=a.y}return this},copyVector3sArray:function(e){for(var t=this.array,n=0,r=0,i=e.length;r<i;r++){var a=e[r];void 0===a&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",r),a=new Ct),t[n++]=a.x,t[n++]=a.y,t[n++]=a.z}return this},copyVector4sArray:function(e){for(var t=this.array,n=0,r=0,i=e.length;r<i;r++){var a=e[r];void 0===a&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",r),a=new qt),t[n++]=a.x,t[n++]=a.y,t[n++]=a.z,t[n++]=a.w}return this},set:function(e,t){return void 0===t&&(t=0),this.array.set(e,t),this},getX:function(e){return this.array[e*this.itemSize]},setX:function(e,t){return this.array[e*this.itemSize]=t,this},getY:function(e){return this.array[e*this.itemSize+1]},setY:function(e,t){return this.array[e*this.itemSize+1]=t,this},getZ:function(e){return this.array[e*this.itemSize+2]},setZ:function(e,t){return this.array[e*this.itemSize+2]=t,this},getW:function(e){return this.array[e*this.itemSize+3]},setW:function(e,t){return this.array[e*this.itemSize+3]=t,this},setXY:function(e,t,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this},setXYZ:function(e,t,n,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this},setXYZW:function(e,t,n,r,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this.array[e+3]=i,this},onUpload:function(e){return this.onUploadCallback=e,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)}}),Cn.prototype=Object.create(Pn.prototype),Cn.prototype.constructor=Cn,Rn.prototype=Object.create(Pn.prototype),Rn.prototype.constructor=Rn,On.prototype=Object.create(Pn.prototype),On.prototype.constructor=On,Nn.prototype=Object.create(Pn.prototype),Nn.prototype.constructor=Nn,In.prototype=Object.create(Pn.prototype),In.prototype.constructor=In,Dn.prototype=Object.create(Pn.prototype),Dn.prototype.constructor=Dn,zn.prototype=Object.create(Pn.prototype),zn.prototype.constructor=zn,kn.prototype=Object.create(Pn.prototype),kn.prototype.constructor=kn,Bn.prototype=Object.create(Pn.prototype),Bn.prototype.constructor=Bn,Object.assign(Un.prototype,{computeGroups:function(e){for(var t,n=[],r=void 0,i=e.faces,a=0;a<i.length;a++){var o=i[a];
// materials
o.materialIndex!==r&&(r=o.materialIndex,void 0!==t&&(t.count=3*a-t.start,n.push(t)),t={start:3*a,materialIndex:r})}void 0!==t&&(t.count=3*a-t.start,n.push(t)),this.groups=n},fromGeometry:function(e){var t,n=e.faces,r=e.vertices,i=e.faceVertexUvs,a=i[0]&&i[0].length>0,o=i[1]&&i[1].length>0,s=e.morphTargets,c=s.length;if(c>0){t=[];for(var l=0;l<c;l++)t[l]={name:s[l].name,data:[]};this.morphTargets.position=t}var h,u=e.morphNormals,d=u.length;if(d>0){h=[];for(l=0;l<d;l++)h[l]={name:u[l].name,data:[]};this.morphTargets.normal=h}
// skins
var f=e.skinIndices,p=e.skinWeights,m=f.length===r.length,g=p.length===r.length;
//
r.length>0&&0===n.length&&console.error("THREE.DirectGeometry: Faceless geometries are not supported.");for(l=0;l<n.length;l++){var v=n[l];this.vertices.push(r[v.a],r[v.b],r[v.c]);var y=v.vertexNormals;if(3===y.length)this.normals.push(y[0],y[1],y[2]);else{var b=v.normal;this.normals.push(b,b,b)}var x,w=v.vertexColors;if(3===w.length)this.colors.push(w[0],w[1],w[2]);else{var _=v.color;this.colors.push(_,_,_)}if(!0===a)void 0!==(x=i[0][l])?this.uvs.push(x[0],x[1],x[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",l),this.uvs.push(new Lt,new Lt,new Lt));if(!0===o)void 0!==(x=i[1][l])?this.uvs2.push(x[0],x[1],x[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",l),this.uvs2.push(new Lt,new Lt,new Lt));
// morphs
for(var M=0;M<c;M++){var E=s[M].vertices;t[M].data.push(E[v.a],E[v.b],E[v.c])}for(M=0;M<d;M++){var S=u[M].vertexNormals[l];h[M].data.push(S.a,S.b,S.c)}
// skins
m&&this.skinIndices.push(f[v.a],f[v.b],f[v.c]),g&&this.skinWeights.push(p[v.a],p[v.b],p[v.c])}return this.computeGroups(e),this.verticesNeedUpdate=e.verticesNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,this}});var Gn=1;// BufferGeometry uses odd numbers as Id
function jn(){Object.defineProperty(this,"id",{value:Gn+=2}),this.uuid=At.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}
/**
   * @author mrdoob / http://mrdoob.com/
   * @author Mugen87 / https://github.com/Mugen87
   */
// BoxGeometry
function Hn(e,t,n,r,i,a){Ln.call(this),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:r,heightSegments:i,depthSegments:a},this.fromBufferGeometry(new Vn(e,t,n,r,i,a)),this.mergeVertices()}
// BoxBufferGeometry
function Vn(e,t,n,r,i,a){jn.call(this),this.type="BoxBufferGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:r,heightSegments:i,depthSegments:a};var o=this;e=e||1,t=t||1,n=n||1,
// segments
r=Math.floor(r)||1,i=Math.floor(i)||1,a=Math.floor(a)||1;
// buffers
var s=[],c=[],l=[],h=[],u=0,d=0;function f(e,t,n,r,i,a,f,p,m,g,v){var y,b,x=a/m,w=f/g,_=a/2,M=f/2,E=p/2,S=m+1,T=g+1,A=0,L=0,P=new Ct;
// generate vertices, normals and uvs
for(b=0;b<T;b++){var C=b*w-M;for(y=0;y<S;y++){var R=y*x-_;
// set values to correct vector component
P[e]=R*r,P[t]=C*i,P[n]=E,
// now apply vector to vertex buffer
c.push(P.x,P.y,P.z),
// set values to correct vector component
P[e]=0,P[t]=0,P[n]=p>0?1:-1,
// now apply vector to normal buffer
l.push(P.x,P.y,P.z),
// uvs
h.push(y/m),h.push(1-b/g),
// counters
A+=1}}
// indices
// 1. you need three indices to draw a single face
// 2. a single segment consists of two faces
// 3. so we need to generate six (2*3) indices per segment
for(b=0;b<g;b++)for(y=0;y<m;y++){var O=u+y+S*b,N=u+y+S*(b+1),I=u+(y+1)+S*(b+1),D=u+(y+1)+S*b;
// faces
s.push(O,N,D),s.push(N,I,D),
// increase counter
L+=6}
// add a group to the geometry. this will ensure multi material support
o.addGroup(d,L,v),
// calculate new start value for groups
d+=L,
// update total number of vertices
u+=A}
// build each side of the box geometry
f("z","y","x",-1,-1,n,t,e,a,i,0),// px
f("z","y","x",1,-1,n,t,-e,a,i,1),// nx
f("x","z","y",1,1,e,n,t,r,a,2),// py
f("x","z","y",1,-1,e,n,-t,r,a,3),// ny
f("x","y","z",1,-1,e,t,n,r,i,4),// pz
f("x","y","z",-1,-1,e,t,-n,r,i,5),// nz
// build geometry
this.setIndex(s),this.addAttribute("position",new kn(c,3)),this.addAttribute("normal",new kn(l,3)),this.addAttribute("uv",new kn(h,2))}
/**
   * @author mrdoob / http://mrdoob.com/
   * @author Mugen87 / https://github.com/Mugen87
   */
// PlaneGeometry
function Wn(e,t,n,r){Ln.call(this),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:r},this.fromBufferGeometry(new qn(e,t,n,r)),this.mergeVertices()}
// PlaneBufferGeometry
function qn(e,t,n,r){jn.call(this),this.type="PlaneBufferGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:r};var i,a,o=(e=e||1)/2,s=(t=t||1)/2,c=Math.floor(n)||1,l=Math.floor(r)||1,h=c+1,u=l+1,d=e/c,f=t/l,p=[],m=[],g=[],v=[];
// generate vertices, normals and uvs
for(a=0;a<u;a++){var y=a*f-s;for(i=0;i<h;i++){var b=i*d-o;m.push(b,-y,0),g.push(0,0,1),v.push(i/c),v.push(1-a/l)}}
// indices
for(a=0;a<l;a++)for(i=0;i<c;i++){var x=i+h*a,w=i+h*(a+1),_=i+1+h*(a+1),M=i+1+h*a;
// faces
p.push(x,w,M),p.push(w,_,M)}
// build geometry
this.setIndex(p),this.addAttribute("position",new kn(m,3)),this.addAttribute("normal",new kn(g,3)),this.addAttribute("uv",new kn(v,2))}jn.prototype=Object.assign(Object.create(r.prototype),{constructor:jn,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(e){Array.isArray(e)?this.index=new(Fn(e)>65535?zn:In)(e,1):this.index=e},addAttribute:function(e,t){return t&&t.isBufferAttribute||t&&t.isInterleavedBufferAttribute?"index"===e?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(t),this):(this.attributes[e]=t,this):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.addAttribute(e,new Pn(arguments[1],arguments[2])))},getAttribute:function(e){return this.attributes[e]},removeAttribute:function(e){return delete this.attributes[e],this},addGroup:function(e,t,n){this.groups.push({start:e,count:t,materialIndex:void 0!==n?n:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(e,t){this.drawRange.start=e,this.drawRange.count=t},applyMatrix:function(e){var t=this.attributes.position;void 0!==t&&(e.applyToBufferAttribute(t),t.needsUpdate=!0);var n=this.attributes.normal;void 0!==n&&((new Rt).getNormalMatrix(e).applyToBufferAttribute(n),n.needsUpdate=!0);var r=this.attributes.tangent;void 0!==r&&(
// Tangent is vec4, but the '.w' component is a sign value (+1/-1).
(new Rt).getNormalMatrix(e).applyToBufferAttribute(r),r.needsUpdate=!0);return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},rotateX:function(){
// rotate geometry around world x-axis
var e=new tn;return function(t){return e.makeRotationX(t),this.applyMatrix(e),this}}(),rotateY:function(){
// rotate geometry around world y-axis
var e=new tn;return function(t){return e.makeRotationY(t),this.applyMatrix(e),this}}(),rotateZ:function(){
// rotate geometry around world z-axis
var e=new tn;return function(t){return e.makeRotationZ(t),this.applyMatrix(e),this}}(),translate:function(){
// translate geometry
var e=new tn;return function(t,n,r){return e.makeTranslation(t,n,r),this.applyMatrix(e),this}}(),scale:function(){
// scale geometry
var e=new tn;return function(t,n,r){return e.makeScale(t,n,r),this.applyMatrix(e),this}}(),lookAt:function(){var e=new En;return function(t){e.lookAt(t),e.updateMatrix(),this.applyMatrix(e.matrix)}}(),center:function(){var e=new Ct;return function(){return this.computeBoundingBox(),this.boundingBox.getCenter(e).negate(),this.translate(e.x,e.y,e.z),this}}(),setFromObject:function(e){
// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );
var t=e.geometry;if(e.isPoints||e.isLine){var n=new kn(3*t.vertices.length,3),r=new kn(3*t.colors.length,3);if(this.addAttribute("position",n.copyVector3sArray(t.vertices)),this.addAttribute("color",r.copyColorsArray(t.colors)),t.lineDistances&&t.lineDistances.length===t.vertices.length){var i=new kn(t.lineDistances.length,1);this.addAttribute("lineDistance",i.copyArray(t.lineDistances))}null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone())}else e.isMesh&&t&&t.isGeometry&&this.fromGeometry(t);return this},setFromPoints:function(e){for(var t=[],n=0,r=e.length;n<r;n++){var i=e[n];t.push(i.x,i.y,i.z||0)}return this.addAttribute("position",new kn(t,3)),this},updateFromObject:function(e){var t,n=e.geometry;if(e.isMesh){var r=n.__directGeometry;if(!0===n.elementsNeedUpdate&&(r=void 0,n.elementsNeedUpdate=!1),void 0===r)return this.fromGeometry(n);r.verticesNeedUpdate=n.verticesNeedUpdate,r.normalsNeedUpdate=n.normalsNeedUpdate,r.colorsNeedUpdate=n.colorsNeedUpdate,r.uvsNeedUpdate=n.uvsNeedUpdate,r.groupsNeedUpdate=n.groupsNeedUpdate,n.verticesNeedUpdate=!1,n.normalsNeedUpdate=!1,n.colorsNeedUpdate=!1,n.uvsNeedUpdate=!1,n.groupsNeedUpdate=!1,n=r}return!0===n.verticesNeedUpdate&&(void 0!==(t=this.attributes.position)&&(t.copyVector3sArray(n.vertices),t.needsUpdate=!0),n.verticesNeedUpdate=!1),!0===n.normalsNeedUpdate&&(void 0!==(t=this.attributes.normal)&&(t.copyVector3sArray(n.normals),t.needsUpdate=!0),n.normalsNeedUpdate=!1),!0===n.colorsNeedUpdate&&(void 0!==(t=this.attributes.color)&&(t.copyColorsArray(n.colors),t.needsUpdate=!0),n.colorsNeedUpdate=!1),n.uvsNeedUpdate&&(void 0!==(t=this.attributes.uv)&&(t.copyVector2sArray(n.uvs),t.needsUpdate=!0),n.uvsNeedUpdate=!1),n.lineDistancesNeedUpdate&&(void 0!==(t=this.attributes.lineDistance)&&(t.copyArray(n.lineDistances),t.needsUpdate=!0),n.lineDistancesNeedUpdate=!1),n.groupsNeedUpdate&&(n.computeGroups(e.geometry),this.groups=n.groups,n.groupsNeedUpdate=!1),this},fromGeometry:function(e){return e.__directGeometry=(new Un).fromGeometry(e),this.fromDirectGeometry(e.__directGeometry)},fromDirectGeometry:function(e){var t=new Float32Array(3*e.vertices.length);if(this.addAttribute("position",new Pn(t,3).copyVector3sArray(e.vertices)),e.normals.length>0){var n=new Float32Array(3*e.normals.length);this.addAttribute("normal",new Pn(n,3).copyVector3sArray(e.normals))}if(e.colors.length>0){var r=new Float32Array(3*e.colors.length);this.addAttribute("color",new Pn(r,3).copyColorsArray(e.colors))}if(e.uvs.length>0){var i=new Float32Array(2*e.uvs.length);this.addAttribute("uv",new Pn(i,2).copyVector2sArray(e.uvs))}if(e.uvs2.length>0){var a=new Float32Array(2*e.uvs2.length);this.addAttribute("uv2",new Pn(a,2).copyVector2sArray(e.uvs2))}
// groups
// morphs
for(var o in this.groups=e.groups,e.morphTargets){for(var s=[],c=e.morphTargets[o],l=0,h=c.length;l<h;l++){var u=c[l],d=new kn(3*u.data.length,3);d.name=u.name,s.push(d.copyVector3sArray(u.data))}this.morphAttributes[o]=s}
// skinning
if(e.skinIndices.length>0){var f=new kn(4*e.skinIndices.length,4);this.addAttribute("skinIndex",f.copyVector4sArray(e.skinIndices))}if(e.skinWeights.length>0){var p=new kn(4*e.skinWeights.length,4);this.addAttribute("skinWeight",p.copyVector4sArray(e.skinWeights))}
//
return null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),this},computeBoundingBox:function(){var e=new Qt;return function(){null===this.boundingBox&&(this.boundingBox=new Qt);var t=this.attributes.position,n=this.morphAttributes.position;if(void 0!==t){
// process morph attributes if present
if(this.boundingBox.setFromBufferAttribute(t),n)for(var r=0,i=n.length;r<i;r++){var a=n[r];e.setFromBufferAttribute(a),this.boundingBox.expandByPoint(e.min),this.boundingBox.expandByPoint(e.max)}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}}(),computeBoundingSphere:function(){var e=new Qt,t=new Qt,n=new Ct;return function(){null===this.boundingSphere&&(this.boundingSphere=new Kt);var r=this.attributes.position,i=this.morphAttributes.position;if(r){
// first, find the center of the bounding sphere
var a=this.boundingSphere.center;
// process morph attributes if present
if(e.setFromBufferAttribute(r),i)for(var o=0,s=i.length;o<s;o++){var c=i[o];t.setFromBufferAttribute(c),e.expandByPoint(t.min),e.expandByPoint(t.max)}e.getCenter(a);
// second, try to find a boundingSphere with a radius smaller than the
// boundingSphere of the boundingBox: sqrt(3) smaller in the best case
var l=0;for(o=0,s=r.count;o<s;o++)n.fromBufferAttribute(r,o),l=Math.max(l,a.distanceToSquared(n));
// process morph attributes if present
if(i)for(o=0,s=i.length;o<s;o++)for(var h=0,u=(c=i[o]).count;h<u;h++)n.fromBufferAttribute(c,h),l=Math.max(l,a.distanceToSquared(n));this.boundingSphere.radius=Math.sqrt(l),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}}(),computeFaceNormals:function(){
// backwards compatibility
},computeVertexNormals:function(){var e=this.index,t=this.attributes;if(t.position){var n=t.position.array;if(void 0===t.normal)this.addAttribute("normal",new Pn(new Float32Array(n.length),3));else for(
// reset existing normals to zero
var r=t.normal.array,i=0,a=r.length;i<a;i++)r[i]=0;var o,s,c,l=t.normal.array,h=new Ct,u=new Ct,d=new Ct,f=new Ct,p=new Ct;
// indexed elements
if(e){var m=e.array;for(i=0,a=e.count;i<a;i+=3)o=3*m[i+0],s=3*m[i+1],c=3*m[i+2],h.fromArray(n,o),u.fromArray(n,s),d.fromArray(n,c),f.subVectors(d,u),p.subVectors(h,u),f.cross(p),l[o]+=f.x,l[o+1]+=f.y,l[o+2]+=f.z,l[s]+=f.x,l[s+1]+=f.y,l[s+2]+=f.z,l[c]+=f.x,l[c+1]+=f.y,l[c+2]+=f.z}else
// non-indexed elements (unconnected triangle soup)
for(i=0,a=n.length;i<a;i+=9)h.fromArray(n,i),u.fromArray(n,i+3),d.fromArray(n,i+6),f.subVectors(d,u),p.subVectors(h,u),f.cross(p),l[i]=f.x,l[i+1]=f.y,l[i+2]=f.z,l[i+3]=f.x,l[i+4]=f.y,l[i+5]=f.z,l[i+6]=f.x,l[i+7]=f.y,l[i+8]=f.z;this.normalizeNormals(),t.normal.needsUpdate=!0}},merge:function(e,t){if(e&&e.isBufferGeometry){void 0===t&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));var n=this.attributes;for(var r in n)if(void 0!==e.attributes[r])for(var i=n[r].array,a=e.attributes[r],o=a.array,s=a.itemSize*t,c=Math.min(o.length,i.length-s),l=0,h=s;l<c;l++,h++)i[h]=o[l];return this}console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e)},normalizeNormals:function(){var e=new Ct;return function(){for(var t=this.attributes.normal,n=0,r=t.count;n<r;n++)e.x=t.getX(n),e.y=t.getY(n),e.z=t.getZ(n),e.normalize(),t.setXYZ(n,e.x,e.y,e.z)}}(),toNonIndexed:function(){function e(e,t){for(var n=e.array,r=e.itemSize,i=new n.constructor(t.length*r),a=0,o=0,s=0,c=t.length;s<c;s++){a=t[s]*r;for(var l=0;l<r;l++)i[o++]=n[a++]}return new Pn(i,r)}
//
if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),this;var t=new jn,n=this.index.array,r=this.attributes;
// attributes
for(var i in r){var a=e(r[i],n);t.addAttribute(i,a)}
// morph attributes
var o=this.morphAttributes;for(i in o){// morphAttribute: array of Float32BufferAttributes
for(var s=[],c=o[i],l=0,h=c.length;l<h;l++){a=e(c[l],n);s.push(a)}t.morphAttributes[i]=s}
// groups
for(var u=this.groups,d=(l=0,u.length);l<d;l++){var f=u[l];t.addGroup(f.start,f.count,f.materialIndex)}return t},toJSON:function(){var e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};
// standard BufferGeometry serialization
if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),void 0!==this.parameters){var t=this.parameters;for(var n in t)void 0!==t[n]&&(e[n]=t[n]);return e}e.data={attributes:{}};var r=this.index;null!==r&&(e.data.index={type:r.array.constructor.name,array:Array.prototype.slice.call(r.array)});var i=this.attributes;for(var n in i){var a={itemSize:(d=i[n]).itemSize,type:d.array.constructor.name,array:Array.prototype.slice.call(d.array),normalized:d.normalized};""!==d.name&&(a.name=d.name),e.data.attributes[n]=a}var o={},s=!1;for(var n in this.morphAttributes){for(var c=this.morphAttributes[n],l=[],h=0,u=c.length;h<u;h++){var d;a={itemSize:(d=c[h]).itemSize,type:d.array.constructor.name,array:Array.prototype.slice.call(d.array),normalized:d.normalized};""!==d.name&&(a.name=d.name),l.push(a)}l.length>0&&(o[n]=l,s=!0)}s&&(e.data.morphAttributes=o);var f=this.groups;f.length>0&&(e.data.groups=JSON.parse(JSON.stringify(f)));var p=this.boundingSphere;return null!==p&&(e.data.boundingSphere={center:p.center.toArray(),radius:p.radius}),e},clone:function(){
/*
  		 // Handle primitives

  		 var parameters = this.parameters;

  		 if ( parameters !== undefined ) {

  		 var values = [];

  		 for ( var key in parameters ) {

  		 values.push( parameters[ key ] );

  		 }

  		 var geometry = Object.create( this.constructor.prototype );
  		 this.constructor.apply( geometry, values );
  		 return geometry;

  		 }

  		 return new this.constructor().copy( this );
  		 */
return(new jn).copy(this)},copy:function(e){var t,n,r;
// reset
this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,
// name
this.name=e.name;
// index
var i=e.index;null!==i&&this.setIndex(i.clone());
// attributes
var a=e.attributes;for(t in a){var o=a[t];this.addAttribute(t,o.clone())}
// morph attributes
var s=e.morphAttributes;for(t in s){var c=[],l=s[t];// morphAttribute: array of Float32BufferAttributes
for(n=0,r=l.length;n<r;n++)c.push(l[n].clone());this.morphAttributes[t]=c}
// groups
var h=e.groups;for(n=0,r=h.length;n<r;n++){var u=h[n];this.addGroup(u.start,u.count,u.materialIndex)}
// bounding box
var d=e.boundingBox;null!==d&&(this.boundingBox=d.clone());
// bounding sphere
var f=e.boundingSphere;return null!==f&&(this.boundingSphere=f.clone()),
// draw range
this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,
// user data
this.userData=e.userData,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Hn.prototype=Object.create(Ln.prototype),Hn.prototype.constructor=Hn,Vn.prototype=Object.create(jn.prototype),Vn.prototype.constructor=Vn,Wn.prototype=Object.create(Ln.prototype),Wn.prototype.constructor=Wn,qn.prototype=Object.create(jn.prototype),qn.prototype.constructor=qn;
/**
   * @author mrdoob / http://mrdoob.com/
   * @author alteredq / http://alteredqualia.com/
   */
var Xn=0;function Yn(){Object.defineProperty(this,"id",{value:Xn++}),this.uuid=At.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.lights=!0,this.blending=w,this.side=p,this.flatShading=!1,this.vertexTangents=!1,this.vertexColors=v,// THREE.NoColors, THREE.VertexColors, THREE.FaceColors
this.opacity=1,this.transparent=!1,this.blendSrc=D,this.blendDst=z,this.blendEquation=T,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=W,this.depthTest=!0,this.depthWrite=!0,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,// override the renderer's default precision for this material
this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.premultipliedAlpha=!1,this.visible=!0,this.userData={},this.needsUpdate=!0}Yn.prototype=Object.assign(Object.create(r.prototype),{constructor:Yn,isMaterial:!0,onBeforeCompile:function(){},setValues:function(e){if(void 0!==e)for(var t in e){var n=e[t];if(void 0!==n)
// for backward compatability if shading is set in the constructor
if("shading"!==t){var r=this[t];void 0!==r?r&&r.isColor?r.set(n):r&&r.isVector3&&n&&n.isVector3?r.copy(n):this[t]=n:console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.")}else console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===n;else console.warn("THREE.Material: '"+t+"' parameter is undefined.")}},toJSON:function(e){var t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{}});var n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};
// standard Material serialization
// TODO: Copied from Object3D.toJSON
function r(e){var t=[];for(var n in e){var r=e[n];delete r.metadata,t.push(r)}return t}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearCoat&&(n.clearCoat=this.clearCoat),void 0!==this.clearCoatRoughness&&(n.clearCoatRoughness=this.clearCoatRoughness),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,n.reflectivity=this.reflectivity,// Scale behind envMap
void 0!==this.combine&&(n.combine=this.combine),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity)),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.size&&(n.size=this.size),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==w&&(n.blending=this.blending),!0===this.flatShading&&(n.flatShading=this.flatShading),this.side!==p&&(n.side=this.side),this.vertexColors!==v&&(n.vertexColors=this.vertexColors),this.opacity<1&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,
// rotation (SpriteMaterial)
0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(n.morphTargets=!0),!0===this.skinning&&(n.skinning=!0),!1===this.visible&&(n.visible=!1),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),t){var i=r(e.textures),a=r(e.images);i.length>0&&(n.textures=i),a.length>0&&(n.images=a)}return n},clone:function(){return(new this.constructor).copy(this)},copy:function(e){this.name=e.name,this.fog=e.fog,this.lights=e.lights,this.blending=e.blending,this.side=e.side,this.flatShading=e.flatShading,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.userData=JSON.parse(JSON.stringify(e.userData)),this.clipShadows=e.clipShadows,this.clipIntersection=e.clipIntersection;var t=e.clippingPlanes,n=null;if(null!==t){var r=t.length;n=new Array(r);for(var i=0;i!==r;++i)n[i]=t[i].clone()}return this.clippingPlanes=n,this.shadowSide=e.shadowSide,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});var Zn,Jn,Qn,Kn,$n,er,tr,nr,rr,ir,ar,or,sr="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",cr="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}";
/**
   * @author alteredq / http://alteredqualia.com/
   *
   * parameters = {
   *  defines: { "label" : "value" },
   *  uniforms: { "parameter1": { value: 1.0 }, "parameter2": { value2: 2 } },
   *
   *  fragmentShader: <string>,
   *  vertexShader: <string>,
   *
   *  wireframe: <boolean>,
   *  wireframeLinewidth: <float>,
   *
   *  lights: <bool>,
   *
   *  skinning: <bool>,
   *  morphTargets: <bool>,
   *  morphNormals: <bool>
   * }
   */
function lr(e){Yn.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=sr,this.fragmentShader=cr,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,// set to use scene fog
this.lights=!1,// set to use scene lights
this.clipping=!1,// set to use user-defined clipping planes
this.skinning=!1,// set to use skinning attribute streams
this.morphTargets=!1,// set to use morph targets
this.morphNormals=!1,// set to use morph normals
this.extensions={derivatives:!1,// set to use derivatives
fragDepth:!1,// set to use fragment depth values
drawBuffers:!1,// set to use draw buffers
shaderTextureLOD:!1},
// When rendered geometry doesn't include these attributes but the material does,
// use these default values in WebGL. This avoids errors when buffer data is missing.
this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,void 0!==e&&(void 0!==e.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}
/**
   * @author bhouston / http://clara.io
   */
function hr(e,t){this.origin=void 0!==e?e:new Ct,this.direction=void 0!==t?t:new Ct}
/**
   * @author bhouston / http://clara.io
   * @author mrdoob / http://mrdoob.com/
   */
function ur(e,t,n){this.a=void 0!==e?e:new Ct,this.b=void 0!==t?t:new Ct,this.c=void 0!==n?n:new Ct}
/**
   * @author mrdoob / http://mrdoob.com/
   * @author alteredq / http://alteredqualia.com/
   *
   * parameters = {
   *  color: <hex>,
   *  opacity: <float>,
   *  map: new THREE.Texture( <Image> ),
   *
   *  lightMap: new THREE.Texture( <Image> ),
   *  lightMapIntensity: <float>
   *
   *  aoMap: new THREE.Texture( <Image> ),
   *  aoMapIntensity: <float>
   *
   *  specularMap: new THREE.Texture( <Image> ),
   *
   *  alphaMap: new THREE.Texture( <Image> ),
   *
   *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),
   *  combine: THREE.Multiply,
   *  reflectivity: <float>,
   *  refractionRatio: <float>,
   *
   *  depthTest: <bool>,
   *  depthWrite: <bool>,
   *
   *  wireframe: <boolean>,
   *  wireframeLinewidth: <float>,
   *
   *  skinning: <bool>,
   *  morphTargets: <bool>
   * }
   */
function dr(e){Yn.call(this),this.type="MeshBasicMaterial",this.color=new hn(16777215),// emissive
this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=J,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.lights=!1,this.setValues(e)}
/**
   * @author mrdoob / http://mrdoob.com/
   * @author alteredq / http://alteredqualia.com/
   * @author mikael emtinger / http://gomo.se/
   * @author jonobr1 / http://jonobr1.com/
   */
function fr(e,t){En.call(this),this.type="Mesh",this.geometry=void 0!==e?e:new jn,this.material=void 0!==t?t:new dr({color:16777215*Math.random()}),this.drawMode=ft,this.updateMorphTargets()}
/**
   * @author mrdoob / http://mrdoob.com/
   */
function pr(e,t,n,r){var i,a,o=new hn(0),s=0,c=null,l=0;function h(e,n){t.buffers.color.setClear(e.r,e.g,e.b,n,r)}return{getClearColor:function(){return o},setClearColor:function(e,t){o.set(e),h(o,s=void 0!==t?t:1)},getClearAlpha:function(){return s},setClearAlpha:function(e){h(o,s=e)},render:function(t,r,s,u){var d=r.background,f=e.vr,g=f.getSession&&f.getSession();
// Ignore background in AR
// TODO: Reconsider this.
if(g&&"additive"===g.environmentBlendMode&&(d=null),null===d?(h(o,0),c=null,l=0):d&&d.isColor&&(h(d,1),u=!0,c=null,l=0),(e.autoClear||u)&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),d&&(d.isCubeTexture||d.isWebGLRenderTargetCube)){void 0===a&&((a=new fr(new Vn(1,1,1),new lr({type:"BackgroundCubeMaterial",uniforms:rn(fn.cube.uniforms),vertexShader:fn.cube.vertexShader,fragmentShader:fn.cube.fragmentShader,side:m,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.removeAttribute("normal"),a.geometry.removeAttribute("uv"),a.onBeforeRender=function(e,t,n){this.matrixWorld.copyPosition(n.matrixWorld)},
// enable code injection for non-built-in material
Object.defineProperty(a.material,"map",{get:function(){return this.uniforms.tCube.value}}),n.update(a));var v=d.isWebGLRenderTargetCube?d.texture:d;a.material.uniforms.tCube.value=v,a.material.uniforms.tFlip.value=d.isWebGLRenderTargetCube?1:-1,c===d&&l===v.version||(a.material.needsUpdate=!0,c=d,l=v.version),
// push to the pre-sorted opaque render list
t.unshift(a,a.geometry,a.material,0,0,null)}else d&&d.isTexture&&(void 0===i&&((i=new fr(new qn(2,2),new lr({type:"BackgroundMaterial",uniforms:rn(fn.background.uniforms),vertexShader:fn.background.vertexShader,fragmentShader:fn.background.fragmentShader,side:p,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.removeAttribute("normal"),
// enable code injection for non-built-in material
Object.defineProperty(i.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(i)),i.material.uniforms.t2D.value=d,!0===d.matrixAutoUpdate&&d.updateMatrix(),i.material.uniforms.uvTransform.value.copy(d.matrix),c===d&&l===d.version||(i.material.needsUpdate=!0,c=d,l=d.version),
// push to the pre-sorted opaque render list
t.unshift(i,i.geometry,i.material,0,0,null))}}}
/**
   * @author mrdoob / http://mrdoob.com/
   */function mr(e,t,n,r){var i;
//
this.setMode=function(e){i=e},this.render=function(t,r){e.drawArrays(i,t,r),n.update(r,i)},this.renderInstances=function(a,o,s){var c;if(r.isWebGL2)c=e;else if(null===(c=t.get("ANGLE_instanced_arrays")))return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");c[r.isWebGL2?"drawArraysInstanced":"drawArraysInstancedANGLE"](i,o,s,a.maxInstancedCount),n.update(s,i,a.maxInstancedCount)}}
/**
   * @author mrdoob / http://mrdoob.com/
   */function gr(e,t,n){var r;function i(t){if("highp"===t){if(e.getShaderPrecisionFormat(35633,36338).precision>0&&e.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";t="mediump"}return"mediump"===t&&e.getShaderPrecisionFormat(35633,36337).precision>0&&e.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}var a="undefined"!=typeof WebGL2RenderingContext&&e instanceof WebGL2RenderingContext,o=void 0!==n.precision?n.precision:"highp",s=i(o);s!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",s,"instead."),o=s);var c=!0===n.logarithmicDepthBuffer,l=e.getParameter(34930),h=e.getParameter(35660),u=e.getParameter(3379),d=e.getParameter(34076),f=e.getParameter(34921),p=e.getParameter(36347),m=e.getParameter(36348),g=e.getParameter(36349),v=h>0,y=a||!!t.get("OES_texture_float");return{isWebGL2:a,getMaxAnisotropy:function(){if(void 0!==r)return r;var n=t.get("EXT_texture_filter_anisotropic");return r=null!==n?e.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0},getMaxPrecision:i,precision:o,logarithmicDepthBuffer:c,maxTextures:l,maxVertexTextures:h,maxTextureSize:u,maxCubemapSize:d,maxAttributes:f,maxVertexUniforms:p,maxVaryings:m,maxFragmentUniforms:g,vertexTextures:v,floatFragmentTextures:y,floatVertexTextures:v&&y,maxSamples:a?e.getParameter(36183):0}}
/**
   * @author tschw
   */function vr(){var e=this,t=null,n=0,r=!1,i=!1,a=new $t,o=new Rt,s={value:null,needsUpdate:!1};function c(){s.value!==t&&(s.value=t,s.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function l(t,n,r,i){var c=null!==t?t.length:0,l=null;if(0!==c){if(l=s.value,!0!==i||null===l){var h=r+4*c,u=n.matrixWorldInverse;o.getNormalMatrix(u),(null===l||l.length<h)&&(l=new Float32Array(h));for(var d=0,f=r;d!==c;++d,f+=4)a.copy(t[d]).applyMatrix4(u,o),a.normal.toArray(l,f),l[f+3]=a.constant}s.value=l,s.needsUpdate=!0}return e.numPlanes=c,l}this.uniform=s,this.numPlanes=0,this.numIntersection=0,this.init=function(e,i,a){var o=0!==e.length||i||
// enable state of previous frame - the clipping code has to
// run another frame in order to reset the state:
0!==n||r;return r=i,t=l(e,a,0),n=e.length,o},this.beginShadows=function(){i=!0,l(null)},this.endShadows=function(){i=!1,c()},this.setState=function(e,a,o,h,u,d){if(!r||null===e||0===e.length||i&&!o)
// there's no local clipping
i?
// there's no global clipping
l(null):c();else{var f=i?0:n,p=4*f,m=u.clippingState||null;s.value=m,// ensure unique state
m=l(e,h,p,d);for(var g=0;g!==p;++g)m[g]=t[g];u.clippingState=m,this.numIntersection=a?this.numPlanes:0,this.numPlanes+=f}}}
/**
   * @author mrdoob / http://mrdoob.com/
   */function yr(e){var t={};return{get:function(n){if(void 0!==t[n])return t[n];var r;switch(n){case"WEBGL_depth_texture":r=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=e.getExtension(n)}return null===r&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),t[n]=r,r}}}
/**
   * @author mrdoob / http://mrdoob.com/
   */function br(e,t,n){var r={},i={};function a(e){var o=e.target,s=r[o.id];for(var c in null!==s.index&&t.remove(s.index),s.attributes)t.remove(s.attributes[c]);o.removeEventListener("dispose",a),delete r[o.id];var l=i[s.id];l&&(t.remove(l),delete i[s.id]),
//
n.memory.geometries--}return{get:function(e,t){var i=r[t.id];return i||(t.addEventListener("dispose",a),t.isBufferGeometry?i=t:t.isGeometry&&(void 0===t._bufferGeometry&&(t._bufferGeometry=(new jn).setFromObject(e)),i=t._bufferGeometry),r[t.id]=i,n.memory.geometries++,i)},update:function(e){var n=e.index,r=e.attributes;for(var i in null!==n&&t.update(n,34963),r)t.update(r[i],34962);
// morph targets
var a=e.morphAttributes;for(var i in a)for(var o=a[i],s=0,c=o.length;s<c;s++)t.update(o[s],34962)},getWireframeAttribute:function(e){var n=i[e.id];if(n)return n;var r,a=[],o=e.index,s=e.attributes;
// console.time( 'wireframe' );
if(null!==o)for(var c=0,l=(r=o.array).length;c<l;c+=3){var h=r[c+0],u=r[c+1],d=r[c+2];a.push(h,u,u,d,d,h)}else for(c=0,l=(r=s.position.array).length/3-1;c<l;c+=3)h=c+0,u=c+1,d=c+2,a.push(h,u,u,d,d,h);
// console.timeEnd( 'wireframe' );
return n=new(Fn(a)>65535?zn:In)(a,1),t.update(n,34963),i[e.id]=n,n}}}
/**
   * @author mrdoob / http://mrdoob.com/
   */function xr(e,t,n,r){var i,a,o;
//
this.setMode=function(e){i=e},this.setIndex=function(e){a=e.type,o=e.bytesPerElement},this.render=function(t,r){e.drawElements(i,r,a,t*o),n.update(r,i)},this.renderInstances=function(s,c,l){var h;if(r.isWebGL2)h=e;else if(null===(h=t.get("ANGLE_instanced_arrays")))return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");h[r.isWebGL2?"drawElementsInstanced":"drawElementsInstancedANGLE"](i,l,a,c*o,s.maxInstancedCount),n.update(l,i,s.maxInstancedCount)}}
/**
   * @author Mugen87 / https://github.com/Mugen87
   */function wr(e){var t={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:t,programs:null,autoReset:!0,reset:function(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0},update:function(e,n,r){switch(r=r||1,t.calls++,n){case 4:t.triangles+=r*(e/3);break;case 5:case 6:t.triangles+=r*(e-2);break;case 1:t.lines+=r*(e/2);break;case 3:t.lines+=r*(e-1);break;case 2:t.lines+=r*e;break;case 0:t.points+=r*e;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",n)}}}}
/**
   * @author mrdoob / http://mrdoob.com/
   */function _r(e,t){return Math.abs(t[1])-Math.abs(e[1])}function Mr(e){var t={},n=new Float32Array(8);return{update:function(r,i,a,o){var s=r.morphTargetInfluences,c=s.length,l=t[i.id];if(void 0===l){
// initialise list
l=[];for(var h=0;h<c;h++)l[h]=[h,0];t[i.id]=l}var u=a.morphTargets&&i.morphAttributes.position,d=a.morphNormals&&i.morphAttributes.normal;
// Remove current morphAttributes
for(h=0;h<c;h++)0!==(f=l[h])[1]&&(u&&i.removeAttribute("morphTarget"+h),d&&i.removeAttribute("morphNormal"+h));
// Collect influences
for(h=0;h<c;h++)(f=l[h])[0]=h,f[1]=s[h];
// Add morphAttributes
for(l.sort(_r),h=0;h<8;h++){var f;if(f=l[h]){var p=f[0],m=f[1];if(m){u&&i.addAttribute("morphTarget"+h,u[p]),d&&i.addAttribute("morphNormal"+h,d[p]),n[h]=m;continue}}n[h]=0}o.getUniforms().setValue(e,"morphTargetInfluences",n)}}}
/**
   * @author mrdoob / http://mrdoob.com/
   */function Er(e,t){var n={};return{update:function(r){var i=t.render.frame,a=r.geometry,o=e.get(r,a);
// Update once per frame
return n[o.id]!==i&&(a.isGeometry&&o.updateFromObject(r),e.update(o),n[o.id]=i),o},dispose:function(){n={}}}}
/**
   * @author mrdoob / http://mrdoob.com/
   */function Sr(e,t,n,r,i,a,o,s,c,l){e=void 0!==e?e:[],t=void 0!==t?t:ae,o=void 0!==o?o:Ie,Wt.call(this,e,t,n,r,i,a,o,s,c,l),this.flipY=!1}
/**
   * @author Takahiro https://github.com/takahirox
   */
function Tr(e,t,n,r){Wt.call(this,null),this.image={data:e,width:t,height:n,depth:r},this.magFilter=me,this.minFilter=me,this.wrapR=fe,this.generateMipmaps=!1,this.flipY=!1}
/**
   * @author Artur Trzesiok
   */
function Ar(e,t,n,r){
// We're going to add .setXXX() methods for setting properties later.
// Users can still set in DataTexture3D directly.
//
//	var texture = new THREE.DataTexture3D( data, width, height, depth );
// 	texture.anisotropy = 16;
//
// See #14839
Wt.call(this,null),this.image={data:e,width:t,height:n,depth:r},this.magFilter=me,this.minFilter=me,this.wrapR=fe,this.generateMipmaps=!1,this.flipY=!1}lr.prototype=Object.create(Yn.prototype),lr.prototype.constructor=lr,lr.prototype.isShaderMaterial=!0,lr.prototype.copy=function(e){return Yn.prototype.copy.call(this,e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=rn(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.lights=e.lights,this.clipping=e.clipping,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.extensions=e.extensions,this},lr.prototype.toJSON=function(e){var t=Yn.prototype.toJSON.call(this,e);for(var n in t.uniforms={},this.uniforms){var r=this.uniforms[n].value;r&&r.isTexture?t.uniforms[n]={type:"t",value:r.toJSON(e).uuid}:r&&r.isColor?t.uniforms[n]={type:"c",value:r.getHex()}:r&&r.isVector2?t.uniforms[n]={type:"v2",value:r.toArray()}:r&&r.isVector3?t.uniforms[n]={type:"v3",value:r.toArray()}:r&&r.isVector4?t.uniforms[n]={type:"v4",value:r.toArray()}:r&&r.isMatrix3?t.uniforms[n]={type:"m3",value:r.toArray()}:r&&r.isMatrix4?t.uniforms[n]={type:"m4",value:r.toArray()}:t.uniforms[n]={value:r}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;var i={};for(var a in this.extensions)!0===this.extensions[a]&&(i[a]=!0);return Object.keys(i).length>0&&(t.extensions=i),t},Object.assign(hr.prototype,{set:function(e,t){return this.origin.copy(e),this.direction.copy(t),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this},at:function(e,t){return void 0===t&&(console.warn("THREE.Ray: .at() target is now required"),t=new Ct),t.copy(this.direction).multiplyScalar(e).add(this.origin)},lookAt:function(e){return this.direction.copy(e).sub(this.origin).normalize(),this},recast:function(){var e=new Ct;return function(t){return this.origin.copy(this.at(t,e)),this}}(),closestPointToPoint:function(e,t){void 0===t&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),t=new Ct),t.subVectors(e,this.origin);var n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(n).add(this.origin)},distanceToPoint:function(e){return Math.sqrt(this.distanceSqToPoint(e))},distanceSqToPoint:function(){var e=new Ct;return function(t){var n=e.subVectors(t,this.origin).dot(this.direction);
// point behind the ray
return n<0?this.origin.distanceToSquared(t):(e.copy(this.direction).multiplyScalar(n).add(this.origin),e.distanceToSquared(t))}}(),distanceSqToSegment:(Jn=new Ct,Qn=new Ct,Kn=new Ct,function(e,t,n,r){
// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h
// It returns the min distance between the ray and the segment
// defined by v0 and v1
// It can also set two optional targets :
// - The closest point on the ray
// - The closest point on the segment
Jn.copy(e).add(t).multiplyScalar(.5),Qn.copy(t).sub(e).normalize(),Kn.copy(this.origin).sub(Jn);var i,a,o,s,c=.5*e.distanceTo(t),l=-this.direction.dot(Qn),h=Kn.dot(this.direction),u=-Kn.dot(Qn),d=Kn.lengthSq(),f=Math.abs(1-l*l);if(f>0)if(
// The ray and segment are not parallel.
a=l*h-u,s=c*f,(i=l*u-h)>=0)if(a>=-s)if(a<=s){
// region 0
// Minimum at interior points of ray and segment.
var p=1/f;o=(i*=p)*(i+l*(a*=p)+2*h)+a*(l*i+a+2*u)+d}else
// region 1
a=c,o=-(i=Math.max(0,-(l*a+h)))*i+a*(a+2*u)+d;else
// region 5
a=-c,o=-(i=Math.max(0,-(l*a+h)))*i+a*(a+2*u)+d;else a<=-s?o=-(
// region 4
i=Math.max(0,-(-l*c+h)))*i+(a=i>0?-c:Math.min(Math.max(-c,-u),c))*(a+2*u)+d:a<=s?(
// region 3
i=0,o=(a=Math.min(Math.max(-c,-u),c))*(a+2*u)+d):o=-(
// region 2
i=Math.max(0,-(l*c+h)))*i+(a=i>0?c:Math.min(Math.max(-c,-u),c))*(a+2*u)+d;else
// Ray and segment are parallel.
a=l>0?-c:c,o=-(i=Math.max(0,-(l*a+h)))*i+a*(a+2*u)+d;return n&&n.copy(this.direction).multiplyScalar(i).add(this.origin),r&&r.copy(Qn).multiplyScalar(a).add(Jn),o}),intersectSphere:function(){var e=new Ct;return function(t,n){e.subVectors(t.center,this.origin);var r=e.dot(this.direction),i=e.dot(e)-r*r,a=t.radius*t.radius;if(i>a)return null;var o=Math.sqrt(a-i),s=r-o,c=r+o;
// t0 = first intersect point - entrance on front of sphere
// test to see if both t0 and t1 are behind the ray - if so, return null
return s<0&&c<0?null:
// test to see if t0 is behind the ray:
// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,
// in order to always return an intersect point that is in front of the ray.
s<0?this.at(c,n):this.at(s,n)}}(),intersectsSphere:function(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius},distanceToPlane:function(e){var t=e.normal.dot(this.direction);if(0===t)
// line is coplanar, return origin
return 0===e.distanceToPoint(this.origin)?0:null;
// Null is preferable to undefined since undefined means.... it is undefined
var n=-(this.origin.dot(e.normal)+e.constant)/t;
// Return if the ray never intersects the plane
return n>=0?n:null},intersectPlane:function(e,t){var n=this.distanceToPlane(e);return null===n?null:this.at(n,t)},intersectsPlane:function(e){
// check if the ray lies on the plane first
var t=e.distanceToPoint(this.origin);return 0===t||e.normal.dot(this.direction)*t<0},intersectBox:function(e,t){var n,r,i,a,o,s,c=1/this.direction.x,l=1/this.direction.y,h=1/this.direction.z,u=this.origin;return c>=0?(n=(e.min.x-u.x)*c,r=(e.max.x-u.x)*c):(n=(e.max.x-u.x)*c,r=(e.min.x-u.x)*c),l>=0?(i=(e.min.y-u.y)*l,a=(e.max.y-u.y)*l):(i=(e.max.y-u.y)*l,a=(e.min.y-u.y)*l),n>a||i>r?null:(
// These lines also handle the case where tmin or tmax is NaN
// (result of 0 * Infinity). x !== x returns true if x is NaN
(i>n||n!=n)&&(n=i),(a<r||r!=r)&&(r=a),h>=0?(o=(e.min.z-u.z)*h,s=(e.max.z-u.z)*h):(o=(e.max.z-u.z)*h,s=(e.min.z-u.z)*h),n>s||o>r?null:((o>n||n!=n)&&(n=o),(s<r||r!=r)&&(r=s),
//return point closest to the ray (positive side)
r<0?null:this.at(n>=0?n:r,t)))},intersectsBox:(Zn=new Ct,function(e){return null!==this.intersectBox(e,Zn)}),intersectTriangle:function(){
// Compute the offset origin, edges, and normal.
var e=new Ct,t=new Ct,n=new Ct,r=new Ct;return function(i,a,o,s,c){
// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h
t.subVectors(a,i),n.subVectors(o,i),r.crossVectors(t,n);
// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,
// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by
//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))
//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))
//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)
var l,h=this.direction.dot(r);if(h>0){if(s)return null;l=1}else{if(!(h<0))return null;l=-1,h=-h}e.subVectors(this.origin,i);var u=l*this.direction.dot(n.crossVectors(e,n));
// b1 < 0, no intersection
if(u<0)return null;var d=l*this.direction.dot(t.cross(e));
// b2 < 0, no intersection
if(d<0)return null;
// b1+b2 > 1, no intersection
if(u+d>h)return null;
// Line intersects triangle, check if ray does.
var f=-l*e.dot(r);
// t < 0, no intersection
return f<0?null:this.at(f/h,c);
// Ray intersects triangle.
}}(),applyMatrix4:function(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this},equals:function(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}}),Object.assign(ur,{getNormal:(er=new Ct,function(e,t,n,r){void 0===r&&(console.warn("THREE.Triangle: .getNormal() target is now required"),r=new Ct),r.subVectors(n,t),er.subVectors(e,t),r.cross(er);var i=r.lengthSq();return i>0?r.multiplyScalar(1/Math.sqrt(i)):r.set(0,0,0)}),
// static/instance method to calculate barycentric coordinates
// based on: http://www.blackpawn.com/texts/pointinpoly/default.html
getBarycoord:function(){var e=new Ct,t=new Ct,n=new Ct;return function(r,i,a,o,s){e.subVectors(o,i),t.subVectors(a,i),n.subVectors(r,i);var c=e.dot(e),l=e.dot(t),h=e.dot(n),u=t.dot(t),d=t.dot(n),f=c*u-l*l;
// collinear or singular triangle
if(void 0===s&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),s=new Ct),0===f)
// arbitrary location outside of triangle?
// not sure if this is the best idea, maybe should be returning undefined
return s.set(-2,-1,-1);var p=1/f,m=(u*h-l*d)*p,g=(c*d-l*h)*p;
// barycentric coordinates must always sum to 1
return s.set(1-m-g,g,m)}}(),containsPoint:function(){var e=new Ct;return function(t,n,r,i){return ur.getBarycoord(t,n,r,i,e),e.x>=0&&e.y>=0&&e.x+e.y<=1}}(),getUV:($n=new Ct,function(e,t,n,r,i,a,o,s){return this.getBarycoord(e,t,n,r,$n),s.set(0,0),s.addScaledVector(i,$n.x),s.addScaledVector(a,$n.y),s.addScaledVector(o,$n.z),s})}),Object.assign(ur.prototype,{set:function(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this},setFromPointsAndIndices:function(e,t,n,r){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[r]),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this},getArea:function(){var e=new Ct,t=new Ct;return function(){return e.subVectors(this.c,this.b),t.subVectors(this.a,this.b),.5*e.cross(t).length()}}(),getMidpoint:function(e){return void 0===e&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),e=new Ct),e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},getNormal:function(e){return ur.getNormal(this.a,this.b,this.c,e)},getPlane:function(e){return void 0===e&&(console.warn("THREE.Triangle: .getPlane() target is now required"),e=new Ct),e.setFromCoplanarPoints(this.a,this.b,this.c)},getBarycoord:function(e,t){return ur.getBarycoord(e,this.a,this.b,this.c,t)},containsPoint:function(e){return ur.containsPoint(e,this.a,this.b,this.c)},getUV:function(e,t,n,r,i){return ur.getUV(e,this.a,this.b,this.c,t,n,r,i)},intersectsBox:function(e){return e.intersectsTriangle(this)},closestPointToPoint:(tr=new Ct,nr=new Ct,rr=new Ct,ir=new Ct,ar=new Ct,or=new Ct,function(e,t){void 0===t&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),t=new Ct);var n,r,i=this.a,a=this.b,o=this.c;
// algorithm thanks to Real-Time Collision Detection by Christer Ericson,
// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,
// under the accompanying license; see chapter 5.1.5 for detailed explanation.
// basically, we're distinguishing which of the voronoi regions of the triangle
// the point lies in with the minimum amount of redundant computation.
tr.subVectors(a,i),nr.subVectors(o,i),ir.subVectors(e,i);var s=tr.dot(ir),c=nr.dot(ir);if(s<=0&&c<=0)
// vertex region of A; barycentric coords (1, 0, 0)
return t.copy(i);ar.subVectors(e,a);var l=tr.dot(ar),h=nr.dot(ar);if(l>=0&&h<=l)
// vertex region of B; barycentric coords (0, 1, 0)
return t.copy(a);var u=s*h-l*c;if(u<=0&&s>=0&&l<=0)
// edge region of AB; barycentric coords (1-v, v, 0)
return n=s/(s-l),t.copy(i).addScaledVector(tr,n);or.subVectors(e,o);var d=tr.dot(or),f=nr.dot(or);if(f>=0&&d<=f)
// vertex region of C; barycentric coords (0, 0, 1)
return t.copy(o);var p=d*c-s*f;if(p<=0&&c>=0&&f<=0)
// edge region of AC; barycentric coords (1-w, 0, w)
return r=c/(c-f),t.copy(i).addScaledVector(nr,r);var m=l*f-d*h;if(m<=0&&h-l>=0&&d-f>=0)
// edge region of BC; barycentric coords (0, 1-w, w)
return rr.subVectors(o,a),r=(h-l)/(h-l+(d-f)),t.copy(a).addScaledVector(rr,r);// edge region of BC
// face region
var g=1/(m+p+u);
// u = va * denom
return n=p*g,r=u*g,t.copy(i).addScaledVector(tr,n).addScaledVector(nr,r)}),equals:function(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}),dr.prototype=Object.create(Yn.prototype),dr.prototype.constructor=dr,dr.prototype.isMeshBasicMaterial=!0,dr.prototype.copy=function(e){return Yn.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this},fr.prototype=Object.assign(Object.create(En.prototype),{constructor:fr,isMesh:!0,setDrawMode:function(e){this.drawMode=e},copy:function(e){return En.prototype.copy.call(this,e),this.drawMode=e.drawMode,void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this},updateMorphTargets:function(){var e,t,n,r=this.geometry;if(r.isBufferGeometry){var i=r.morphAttributes,a=Object.keys(i);if(a.length>0){var o=i[a[0]];if(void 0!==o)for(this.morphTargetInfluences=[],this.morphTargetDictionary={},e=0,t=o.length;e<t;e++)n=o[e].name||String(e),this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}else{var s=r.morphTargets;void 0!==s&&s.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}},raycast:function(){var e=new tn,t=new hr,n=new Kt,r=new Ct,i=new Ct,a=new Ct,o=new Ct,s=new Ct,c=new Ct,l=new Ct,h=new Ct,u=new Ct,d=new Lt,f=new Lt,p=new Lt,v=new Ct,y=new Ct;function b(e,t,n,r,i,a,o,s){if(null===(t.side===m?r.intersectTriangle(o,a,i,!0,s):r.intersectTriangle(i,a,o,t.side!==g,s)))return null;y.copy(s),y.applyMatrix4(e.matrixWorld);var c=n.ray.origin.distanceTo(y);return c<n.near||c>n.far?null:{distance:c,point:y.clone(),object:e}}function x(e,t,n,m,g,y,x,w,_,M){r.fromBufferAttribute(g,w),i.fromBufferAttribute(g,_),a.fromBufferAttribute(g,M);var E=e.morphTargetInfluences;if(t.morphTargets&&y&&E){l.set(0,0,0),h.set(0,0,0),u.set(0,0,0);for(var S=0,T=y.length;S<T;S++){var A=E[S],L=y[S];0!==A&&(o.fromBufferAttribute(L,w),s.fromBufferAttribute(L,_),c.fromBufferAttribute(L,M),l.addScaledVector(o.sub(r),A),h.addScaledVector(s.sub(i),A),u.addScaledVector(c.sub(a),A))}r.add(l),i.add(h),a.add(u)}var P=b(e,t,n,m,r,i,a,v);if(P){x&&(d.fromBufferAttribute(x,w),f.fromBufferAttribute(x,_),p.fromBufferAttribute(x,M),P.uv=ur.getUV(v,r,i,a,d,f,p,new Lt));var C=new gn(w,_,M);ur.getNormal(r,i,a,C.normal),P.face=C}return P}return function(r,i){var a,o=this.geometry,s=this.material,c=this.matrixWorld;if(void 0!==s&&(
// Checking boundingSphere distance to ray
null===o.boundingSphere&&o.computeBoundingSphere(),n.copy(o.boundingSphere),n.applyMatrix4(c),!1!==r.ray.intersectsSphere(n)&&(
//
e.getInverse(c),t.copy(r.ray).applyMatrix4(e),null===o.boundingBox||!1!==t.intersectsBox(o.boundingBox))))if(o.isBufferGeometry){var l,h,u,m,g,y,w,_,M,E=o.index,S=o.attributes.position,T=o.morphAttributes.position,A=o.attributes.uv,L=o.groups,P=o.drawRange;if(null!==E)
// indexed buffer geometry
if(Array.isArray(s))for(m=0,y=L.length;m<y;m++)for(M=s[(_=L[m]).materialIndex],g=Math.max(_.start,P.start),w=Math.min(_.start+_.count,P.start+P.count);g<w;g+=3)l=E.getX(g),h=E.getX(g+1),u=E.getX(g+2),(a=x(this,M,r,t,S,T,A,l,h,u))&&(a.faceIndex=Math.floor(g/3),// triangle number in indexed buffer semantics
a.face.materialIndex=_.materialIndex,i.push(a));else for(m=Math.max(0,P.start),y=Math.min(E.count,P.start+P.count);m<y;m+=3)l=E.getX(m),h=E.getX(m+1),u=E.getX(m+2),(a=x(this,s,r,t,S,T,A,l,h,u))&&(a.faceIndex=Math.floor(m/3),// triangle number in indexed buffer semantics
i.push(a));else if(void 0!==S)
// non-indexed buffer geometry
if(Array.isArray(s))for(m=0,y=L.length;m<y;m++)for(M=s[(_=L[m]).materialIndex],g=Math.max(_.start,P.start),w=Math.min(_.start+_.count,P.start+P.count);g<w;g+=3)(a=x(this,M,r,t,S,T,A,l=g,h=g+1,u=g+2))&&(a.faceIndex=Math.floor(g/3),// triangle number in non-indexed buffer semantics
a.face.materialIndex=_.materialIndex,i.push(a));else for(m=Math.max(0,P.start),y=Math.min(S.count,P.start+P.count);m<y;m+=3)(a=x(this,s,r,t,S,T,A,l=m,h=m+1,u=m+2))&&(a.faceIndex=Math.floor(m/3),// triangle number in non-indexed buffer semantics
i.push(a))}else if(o.isGeometry){var C,R,O,N,I=Array.isArray(s),D=o.vertices,z=o.faces,k=o.faceVertexUvs[0];k.length>0&&(N=k);for(var B=0,U=z.length;B<U;B++){var F=z[B],G=I?s[F.materialIndex]:s;if(void 0!==G&&(C=D[F.a],R=D[F.b],O=D[F.c],a=b(this,G,r,t,C,R,O,v))){if(N&&N[B]){var j=N[B];d.copy(j[0]),f.copy(j[1]),p.copy(j[2]),a.uv=ur.getUV(v,C,R,O,d,f,p,new Lt)}a.face=F,a.faceIndex=B,i.push(a)}}}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),Sr.prototype=Object.create(Wt.prototype),Sr.prototype.constructor=Sr,Sr.prototype.isCubeTexture=!0,Object.defineProperty(Sr.prototype,"images",{get:function(){return this.image},set:function(e){this.image=e}}),Tr.prototype=Object.create(Wt.prototype),Tr.prototype.constructor=Tr,Tr.prototype.isDataTexture2DArray=!0,Ar.prototype=Object.create(Wt.prototype),Ar.prototype.constructor=Ar,Ar.prototype.isDataTexture3D=!0;
/**
   * @author tschw
   * @author Mugen87 / https://github.com/Mugen87
   * @author mrdoob / http://mrdoob.com/
   *
   * Uniforms of a program.
   * Those form a tree structure with a special top-level container for the root,
   * which you get by calling 'new WebGLUniforms( gl, program )'.
   *
   *
   * Properties of inner nodes including the top-level container:
   *
   * .seq - array of nested uniforms
   * .map - nested uniforms by name
   *
   *
   * Methods of all nodes except the top-level container:
   *
   * .setValue( gl, value, [textures] )
   *
   * 		uploads a uniform value(s)
   *  	the 'textures' parameter is needed for sampler uniforms
   *
   *
   * Static methods of the top-level container (textures factorizations):
   *
   * .upload( gl, seq, values, textures )
   *
   * 		sets uniforms in 'seq' to 'values[id].value'
   *
   * .seqWithValue( seq, values ) : filteredSeq
   *
   * 		filters 'seq' entries with corresponding entry in values
   *
   *
   * Methods of the top-level container (textures factorizations):
   *
   * .setValue( gl, name, value, textures )
   *
   * 		sets uniform with  name 'name' to 'value'
   *
   * .setOptional( gl, obj, prop )
   *
   * 		like .set for an optional property of the object
   *
   */
var Lr=new Wt,Pr=new Tr,Cr=new Ar,Rr=new Sr,Or=[],Nr=[],Ir=new Float32Array(16),Dr=new Float32Array(9),zr=new Float32Array(4);
// Flattening for arrays of vectors and matrices
function kr(e,t,n){var r=e[0];if(r<=0||r>0)return e;
// unoptimized: ! isNaN( firstElem )
// see http://jacksondunstan.com/articles/983
var i=t*n,a=Or[i];if(void 0===a&&(a=new Float32Array(i),Or[i]=a),0!==t){r.toArray(a,0);for(var o=1,s=0;o!==t;++o)s+=n,e[o].toArray(a,s)}return a}function Br(e,t){if(e.length!==t.length)return!1;for(var n=0,r=e.length;n<r;n++)if(e[n]!==t[n])return!1;return!0}function Ur(e,t){for(var n=0,r=t.length;n<r;n++)e[n]=t[n]}
// Texture unit allocation
function Fr(e,t){var n=Nr[t];void 0===n&&(n=new Int32Array(t),Nr[t]=n);for(var r=0;r!==t;++r)n[r]=e.allocateTextureUnit();return n}
// --- Setters ---
// Note: Defining these methods externally, because they come in a bunch
// and this way their names minify.
// Single scalar
function Gr(e,t){var n=this.cache;n[0]!==t&&(e.uniform1f(this.addr,t),n[0]=t)}function jr(e,t){var n=this.cache;n[0]!==t&&(e.uniform1i(this.addr,t),n[0]=t)}
// Single float vector (from flat array or THREE.VectorN)
function Hr(e,t){var n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y||(e.uniform2f(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if(Br(n,t))return;e.uniform2fv(this.addr,t),Ur(n,t)}}function Vr(e,t){var n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z||(e.uniform3f(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else if(void 0!==t.r)n[0]===t.r&&n[1]===t.g&&n[2]===t.b||(e.uniform3f(this.addr,t.r,t.g,t.b),n[0]=t.r,n[1]=t.g,n[2]=t.b);else{if(Br(n,t))return;e.uniform3fv(this.addr,t),Ur(n,t)}}function Wr(e,t){var n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z&&n[3]===t.w||(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if(Br(n,t))return;e.uniform4fv(this.addr,t),Ur(n,t)}}
// Single matrix (from flat array or MatrixN)
function qr(e,t){var n=this.cache,r=t.elements;if(void 0===r){if(Br(n,t))return;e.uniformMatrix2fv(this.addr,!1,t),Ur(n,t)}else{if(Br(n,r))return;zr.set(r),e.uniformMatrix2fv(this.addr,!1,zr),Ur(n,r)}}function Xr(e,t){var n=this.cache,r=t.elements;if(void 0===r){if(Br(n,t))return;e.uniformMatrix3fv(this.addr,!1,t),Ur(n,t)}else{if(Br(n,r))return;Dr.set(r),e.uniformMatrix3fv(this.addr,!1,Dr),Ur(n,r)}}function Yr(e,t){var n=this.cache,r=t.elements;if(void 0===r){if(Br(n,t))return;e.uniformMatrix4fv(this.addr,!1,t),Ur(n,t)}else{if(Br(n,r))return;Ir.set(r),e.uniformMatrix4fv(this.addr,!1,Ir),Ur(n,r)}}
// Single texture (2D / Cube)
function Zr(e,t,n){var r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),n.safeSetTexture2D(t||Lr,i)}function Jr(e,t,n){var r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),n.setTexture2DArray(t||Pr,i)}function Qr(e,t,n){var r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),n.setTexture3D(t||Cr,i)}function Kr(e,t,n){var r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),n.safeSetTextureCube(t||Rr,i)}
// Integer / Boolean vectors or arrays thereof (always flat arrays)
function $r(e,t){var n=this.cache;Br(n,t)||(e.uniform2iv(this.addr,t),Ur(n,t))}function ei(e,t){var n=this.cache;Br(n,t)||(e.uniform3iv(this.addr,t),Ur(n,t))}function ti(e,t){var n=this.cache;Br(n,t)||(e.uniform4iv(this.addr,t),Ur(n,t))}
// Helper to pick the right setter for the singular case
// Array of scalars
function ni(e,t){var n=this.cache;Br(n,t)||(e.uniform1fv(this.addr,t),Ur(n,t))}function ri(e,t){var n=this.cache;Br(n,t)||(e.uniform1iv(this.addr,t),Ur(n,t))}
// Array of vectors (flat or from THREE classes)
function ii(e,t){var n=this.cache,r=kr(t,this.size,2);Br(n,r)||(e.uniform2fv(this.addr,r),this.updateCache(r))}function ai(e,t){var n=this.cache,r=kr(t,this.size,3);Br(n,r)||(e.uniform3fv(this.addr,r),this.updateCache(r))}function oi(e,t){var n=this.cache,r=kr(t,this.size,4);Br(n,r)||(e.uniform4fv(this.addr,r),this.updateCache(r))}
// Array of matrices (flat or from THREE clases)
function si(e,t){var n=this.cache,r=kr(t,this.size,4);Br(n,r)||(e.uniformMatrix2fv(this.addr,!1,r),this.updateCache(r))}function ci(e,t){var n=this.cache,r=kr(t,this.size,9);Br(n,r)||(e.uniformMatrix3fv(this.addr,!1,r),this.updateCache(r))}function li(e,t){var n=this.cache,r=kr(t,this.size,16);Br(n,r)||(e.uniformMatrix4fv(this.addr,!1,r),this.updateCache(r))}
// Array of textures (2D / Cube)
function hi(e,t,n){var r=this.cache,i=t.length,a=Fr(n,i);!1===Br(r,a)&&(e.uniform1iv(this.addr,a),Ur(r,a));for(var o=0;o!==i;++o)n.safeSetTexture2D(t[o]||Lr,a[o])}function ui(e,t,n){var r=this.cache,i=t.length,a=Fr(n,i);!1===Br(r,a)&&(e.uniform1iv(this.addr,a),Ur(r,a));for(var o=0;o!==i;++o)n.safeSetTextureCube(t[o]||Rr,a[o])}
// Helper to pick the right setter for a pure (bottom-level) array
// --- Uniform Classes ---
function di(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=function(e){switch(e){case 5126:return Gr;// FLOAT
case 35664:return Hr;// _VEC2
case 35665:return Vr;// _VEC3
case 35666:return Wr;// _VEC4
case 35674:return qr;// _MAT2
case 35675:return Xr;// _MAT3
case 35676:return Yr;// _MAT4
case 35678:case 36198:return Zr;// SAMPLER_2D, SAMPLER_EXTERNAL_OES
case 35679:return Qr;// SAMPLER_3D
case 35680:return Kr;// SAMPLER_CUBE
case 36289:return Jr;// SAMPLER_2D_ARRAY
case 5124:case 35670:return jr;// INT, BOOL
case 35667:case 35671:return $r;// _VEC2
case 35668:case 35672:return ei;// _VEC3
case 35669:case 35673:return ti;// _VEC4
}}(t.type)}function fi(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=function(e){switch(e){case 5126:return ni;// FLOAT
case 35664:return ii;// _VEC2
case 35665:return ai;// _VEC3
case 35666:return oi;// _VEC4
case 35674:return si;// _MAT2
case 35675:return ci;// _MAT3
case 35676:return li;// _MAT4
case 35678:return hi;// SAMPLER_2D
case 35680:return ui;// SAMPLER_CUBE
case 5124:case 35670:return ri;// INT, BOOL
case 35667:case 35671:return $r;// _VEC2
case 35668:case 35672:return ei;// _VEC3
case 35669:case 35673:return ti;// _VEC4
}}(t.type)}function pi(e){this.id=e,this.seq=[],this.map={}}fi.prototype.updateCache=function(e){var t=this.cache;e instanceof Float32Array&&t.length!==e.length&&(this.cache=new Float32Array(e.length)),Ur(t,e)},pi.prototype.setValue=function(e,t,n){for(var r=this.seq,i=0,a=r.length;i!==a;++i){var o=r[i];o.setValue(e,t[o.id],n)}};
// --- Top-level ---
// Parser - builds up the property tree from the path strings
var mi=/([\w\d_]+)(\])?(\[|\.)?/g;
// extracts
// 	- the identifier (member name or array index)
//  - followed by an optional right bracket (found when array index)
//  - followed by an optional left bracket or dot (type of subscript)
//
// Note: These portions can be read in a non-overlapping fashion and
// allow straightforward parsing of the hierarchy that WebGL encodes
// in the uniform names.
function gi(e,t){e.seq.push(t),e.map[t.id]=t}function vi(e,t,n){var r=e.name,i=r.length;
// reset RegExp object, because of the early exit of a previous run
for(mi.lastIndex=0;;){var a=mi.exec(r),o=mi.lastIndex,s=a[1],c="]"===a[2],l=a[3];// convert to integer
if(c&&(s|=0),void 0===l||"["===l&&o+2===i){
// bare name or "pure" bottom-level array "[0]" suffix
gi(n,void 0===l?new di(s,e,t):new fi(s,e,t));break}
// step into inner node / create it in case it doesn't exist
var h=n.map[s];void 0===h&&gi(n,h=new pi(s)),n=h}}
// Root Container
function yi(e,t){this.seq=[],this.map={};for(var n=e.getProgramParameter(t,35718),r=0;r<n;++r){var i=e.getActiveUniform(t,r);vi(i,e.getUniformLocation(t,i.name),this)}}function bi(e,t,n,r){var i=e.createShader(t);
// --enable-privileged-webgl-extension
// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );
return e.shaderSource(i,n),e.compileShader(i),!0===r&&(!1===e.getShaderParameter(i,35713)&&console.error("THREE.WebGLShader: Shader couldn't compile."),""!==e.getShaderInfoLog(i)&&console.warn("THREE.WebGLShader: gl.getShaderInfoLog()",35633===t?"vertex":"fragment",e.getShaderInfoLog(i),
/**
   * @author mrdoob / http://mrdoob.com/
   */
function(e){for(var t=e.split("\n"),n=0;n<t.length;n++)t[n]=n+1+": "+t[n];return t.join("\n")}(n))),i}
/**
   * @author mrdoob / http://mrdoob.com/
   */yi.prototype.setValue=function(e,t,n,r){var i=this.map[t];void 0!==i&&i.setValue(e,n,r)},yi.prototype.setOptional=function(e,t,n){var r=t[n];void 0!==r&&this.setValue(e,n,r)},
// Static interface
yi.upload=function(e,t,n,r){for(var i=0,a=t.length;i!==a;++i){var o=t[i],s=n[o.id];!1!==s.needsUpdate&&
// note: always updating when .needsUpdate is undefined
o.setValue(e,s.value,r)}},yi.seqWithValue=function(e,t){for(var n=[],r=0,i=e.length;r!==i;++r){var a=e[r];a.id in t&&n.push(a)}return n};var xi=0;function wi(e){switch(e){case gt:return["Linear","( value )"];case vt:return["sRGB","( value )"];case bt:return["RGBE","( value )"];case xt:return["RGBM","( value, 7.0 )"];case wt:return["RGBM","( value, 16.0 )"];case _t:return["RGBD","( value, 256.0 )"];case yt:return["Gamma","( value, float( GAMMA_FACTOR ) )"];default:throw new Error("unsupported encoding: "+e)}}function _i(e,t){var n=wi(t);return"vec4 "+e+"( vec4 value ) { return "+n[0]+"ToLinear"+n[1]+"; }"}function Mi(e,t){var n;switch(t){case ee:n="Linear";break;case te:n="Reinhard";break;case ne:n="Uncharted2";break;case re:n="OptimizedCineon";break;case ie:n="ACESFilmic";break;default:throw new Error("unsupported toneMapping: "+t)}return"vec3 "+e+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function Ei(e){return""!==e}function Si(e,t){return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights)}function Ti(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}function Ai(e){return e.replace(/^[ \t]*#include +<([\w\d.\/]+)>/gm,function(e,t){var n=nn[t];if(void 0===n)throw new Error("Can not resolve #include <"+t+">");return Ai(n)})}function Li(e){return e.replace(/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,function(e,t,n,r){for(var i="",a=parseInt(t);a<parseInt(n);a++)i+=r.replace(/\[ i \]/g,"[ "+a+" ]");return i})}function Pi(e,t,n,r,i,a,o,s){var c=e.context,l=r.defines,h=i.vertexShader,u=i.fragmentShader,p="SHADOWMAP_TYPE_BASIC";a.shadowMapType===d?p="SHADOWMAP_TYPE_PCF":a.shadowMapType===f&&(p="SHADOWMAP_TYPE_PCF_SOFT");var m="ENVMAP_TYPE_CUBE",g="ENVMAP_MODE_REFLECTION",v="ENVMAP_BLENDING_MULTIPLY";if(a.envMap){switch(r.envMap.mapping){case ae:case oe:m="ENVMAP_TYPE_CUBE";break;case he:case ue:m="ENVMAP_TYPE_CUBE_UV";break;case se:case ce:m="ENVMAP_TYPE_EQUIREC";break;case le:m="ENVMAP_TYPE_SPHERE"}switch(r.envMap.mapping){case oe:case ce:g="ENVMAP_MODE_REFRACTION"}switch(r.combine){case J:v="ENVMAP_BLENDING_MULTIPLY";break;case Q:v="ENVMAP_BLENDING_MIX";break;case K:v="ENVMAP_BLENDING_ADD"}}var y,b,x,w,_,M=e.gammaFactor>0?e.gammaFactor:1,E=o.isWebGL2?"":function(e,t,n){return[(e=e||{}).derivatives||t.envMapCubeUV||t.bumpMap||t.normalMap&&!t.objectSpaceNormalMap||t.flatShading?"#extension GL_OES_standard_derivatives : enable":"",(e.fragDepth||t.logarithmicDepthBuffer)&&n.get("EXT_frag_depth")?"#extension GL_EXT_frag_depth : enable":"",e.drawBuffers&&n.get("WEBGL_draw_buffers")?"#extension GL_EXT_draw_buffers : require":"",(e.shaderTextureLOD||t.envMap)&&n.get("EXT_shader_texture_lod")?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Ei).join("\n")}(r.extensions,a,t),S=function(e){var t=[];for(var n in e){var r=e[n];!1!==r&&t.push("#define "+n+" "+r)}return t.join("\n")}(l),T=c.createProgram();
// console.log( 'building new program ' );
//
if(r.isRawShaderMaterial?((y=[S].filter(Ei).join("\n")).length>0&&(y+="\n"),(b=[E,S].filter(Ei).join("\n")).length>0&&(b+="\n")):(y=["precision "+a.precision+" float;","precision "+a.precision+" int;","#define SHADER_NAME "+i.name,S,a.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+M,"#define MAX_BONES "+a.maxBones,a.useFog&&a.fog?"#define USE_FOG":"",a.useFog&&a.fogExp?"#define FOG_EXP2":"",a.map?"#define USE_MAP":"",a.envMap?"#define USE_ENVMAP":"",a.envMap?"#define "+g:"",a.lightMap?"#define USE_LIGHTMAP":"",a.aoMap?"#define USE_AOMAP":"",a.emissiveMap?"#define USE_EMISSIVEMAP":"",a.bumpMap?"#define USE_BUMPMAP":"",a.normalMap?"#define USE_NORMALMAP":"",a.normalMap&&a.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",a.displacementMap&&a.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",a.specularMap?"#define USE_SPECULARMAP":"",a.roughnessMap?"#define USE_ROUGHNESSMAP":"",a.metalnessMap?"#define USE_METALNESSMAP":"",a.alphaMap?"#define USE_ALPHAMAP":"",a.vertexTangents?"#define USE_TANGENT":"",a.vertexColors?"#define USE_COLOR":"",a.flatShading?"#define FLAT_SHADED":"",a.skinning?"#define USE_SKINNING":"",a.useVertexTexture?"#define BONE_TEXTURE":"",a.morphTargets?"#define USE_MORPHTARGETS":"",a.morphNormals&&!1===a.flatShading?"#define USE_MORPHNORMALS":"",a.doubleSided?"#define DOUBLE_SIDED":"",a.flipSided?"#define FLIP_SIDED":"",a.shadowMapEnabled?"#define USE_SHADOWMAP":"",a.shadowMapEnabled?"#define "+p:"",a.sizeAttenuation?"#define USE_SIZEATTENUATION":"",a.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",a.logarithmicDepthBuffer&&(o.isWebGL2||t.get("EXT_frag_depth"))?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#ifdef USE_COLOR","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(Ei).join("\n"),b=[E,"precision "+a.precision+" float;","precision "+a.precision+" int;","#define SHADER_NAME "+i.name,S,a.alphaTest?"#define ALPHATEST "+a.alphaTest+(a.alphaTest%1?"":".0"):"",// add '.0' if integer
"#define GAMMA_FACTOR "+M,a.useFog&&a.fog?"#define USE_FOG":"",a.useFog&&a.fogExp?"#define FOG_EXP2":"",a.map?"#define USE_MAP":"",a.matcap?"#define USE_MATCAP":"",a.envMap?"#define USE_ENVMAP":"",a.envMap?"#define "+m:"",a.envMap?"#define "+g:"",a.envMap?"#define "+v:"",a.lightMap?"#define USE_LIGHTMAP":"",a.aoMap?"#define USE_AOMAP":"",a.emissiveMap?"#define USE_EMISSIVEMAP":"",a.bumpMap?"#define USE_BUMPMAP":"",a.normalMap?"#define USE_NORMALMAP":"",a.normalMap&&a.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",a.specularMap?"#define USE_SPECULARMAP":"",a.roughnessMap?"#define USE_ROUGHNESSMAP":"",a.metalnessMap?"#define USE_METALNESSMAP":"",a.alphaMap?"#define USE_ALPHAMAP":"",a.vertexTangents?"#define USE_TANGENT":"",a.vertexColors?"#define USE_COLOR":"",a.gradientMap?"#define USE_GRADIENTMAP":"",a.flatShading?"#define FLAT_SHADED":"",a.doubleSided?"#define DOUBLE_SIDED":"",a.flipSided?"#define FLIP_SIDED":"",a.shadowMapEnabled?"#define USE_SHADOWMAP":"",a.shadowMapEnabled?"#define "+p:"",a.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",a.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",a.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",a.logarithmicDepthBuffer&&(o.isWebGL2||t.get("EXT_frag_depth"))?"#define USE_LOGDEPTHBUF_EXT":"",a.envMap&&(o.isWebGL2||t.get("EXT_shader_texture_lod"))?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;",a.toneMapping!==$?"#define TONE_MAPPING":"",a.toneMapping!==$?nn.tonemapping_pars_fragment:"",// this code is required here because it is used by the toneMapping() function defined below
a.toneMapping!==$?Mi("toneMapping",a.toneMapping):"",a.dithering?"#define DITHERING":"",a.outputEncoding||a.mapEncoding||a.matcapEncoding||a.envMapEncoding||a.emissiveMapEncoding?nn.encodings_pars_fragment:"",// this code is required here because it is used by the various encoding/decoding function defined below
a.mapEncoding?_i("mapTexelToLinear",a.mapEncoding):"",a.matcapEncoding?_i("matcapTexelToLinear",a.matcapEncoding):"",a.envMapEncoding?_i("envMapTexelToLinear",a.envMapEncoding):"",a.emissiveMapEncoding?_i("emissiveMapTexelToLinear",a.emissiveMapEncoding):"",a.outputEncoding?(x="linearToOutputTexel",w=a.outputEncoding,_=wi(w),"vec4 "+x+"( vec4 value ) { return LinearTo"+_[0]+_[1]+"; }"):"",a.depthPacking?"#define DEPTH_PACKING "+r.depthPacking:"","\n"].filter(Ei).join("\n")),h=Ti(h=Si(h=Ai(h),a),a),u=Ti(u=Si(u=Ai(u),a),a),h=Li(h),u=Li(u),o.isWebGL2&&!r.isRawShaderMaterial){var A=!1,L=/^\s*#version\s+300\s+es\s*\n/;r.isShaderMaterial&&null!==h.match(L)&&null!==u.match(L)&&(A=!0,h=h.replace(L,""),u=u.replace(L,"")),
// GLSL 3.0 conversion
y=["#version 300 es\n","#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+y,b=["#version 300 es\n","#define varying in",A?"":"out highp vec4 pc_fragColor;",A?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+b}var P,C,R=b+u,O=bi(c,35633,y+h,e.debug.checkShaderErrors),N=bi(c,35632,R,e.debug.checkShaderErrors);
// check for link errors
if(c.attachShader(T,O),c.attachShader(T,N),
// Force a particular attribute to index 0.
void 0!==r.index0AttributeName?c.bindAttribLocation(T,0,r.index0AttributeName):!0===a.morphTargets&&
// programs with morphTargets displace position out of attribute 0
c.bindAttribLocation(T,0,"position"),c.linkProgram(T),e.debug.checkShaderErrors){var I=c.getProgramInfoLog(T).trim(),D=c.getShaderInfoLog(O).trim(),z=c.getShaderInfoLog(N).trim(),k=!0,B=!0;
// console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );
// console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );
!1===c.getProgramParameter(T,35714)?(k=!1,console.error("THREE.WebGLProgram: shader error: ",c.getError(),"35715",c.getProgramParameter(T,35715),"gl.getProgramInfoLog",I,D,z)):""!==I?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",I):""!==D&&""!==z||(B=!1),B&&(this.diagnostics={runnable:k,material:r,programLog:I,vertexShader:{log:D,prefix:y},fragmentShader:{log:z,prefix:b}})}
// clean up
return c.deleteShader(O),c.deleteShader(N),this.getUniforms=function(){return void 0===P&&(P=new yi(c,T,s)),P},this.getAttributes=function(){return void 0===C&&(C=function(e,t){for(var n={},r=e.getProgramParameter(t,35721),i=0;i<r;i++){var a=e.getActiveAttrib(t,i).name;
// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );
n[a]=e.getAttribLocation(t,a)}return n}(c,T)),C},
// free resource
this.destroy=function(){c.deleteProgram(T),this.program=void 0},
// DEPRECATED
Object.defineProperties(this,{uniforms:{get:function(){return console.warn("THREE.WebGLProgram: .uniforms is now .getUniforms()."),this.getUniforms()}},attributes:{get:function(){return console.warn("THREE.WebGLProgram: .attributes is now .getAttributes()."),this.getAttributes()}}}),
//
this.name=i.name,this.id=xi++,this.code=n,this.usedTimes=1,this.program=T,this.vertexShader=O,this.fragmentShader=N,this}
/**
   * @author mrdoob / http://mrdoob.com/
   */function Ci(e,t,n,r){var i=[],a={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"phong",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},o=["precision","supportsVertexTextures","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","lightMap","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexTangents","fog","useFog","fogExp","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering"];function s(e,t){var n;return e?e.isTexture?n=e.encoding:e.isWebGLRenderTarget&&(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),n=e.texture.encoding):n=gt,
// add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.
n===gt&&t&&(n=yt),n}this.getParameters=function(t,r,i,o,c,l,h){var u=a[t.type],d=h.isSkinnedMesh?function(e){var t=e.skeleton.bones;if(n.floatVertexTextures)return 1024;
// default for when object is not specified
// ( for example when prebuilding shader to be used with multiple objects )
//
//  - leave some extra space for other uniforms
//  - limit here is ANGLE's 254 max uniform vectors
//    (up to 54 should be safe)
var r=n.maxVertexUniforms,i=Math.floor((r-20)/4),a=Math.min(i,t.length);return a<t.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+t.length+" bones. This GPU supports "+a+"."),0):a}(h):0,f=n.precision;
// heuristics to create shader parameters according to lights in the scene
// (not to blow over maxLights budget)
null!==t.precision&&(f=n.getMaxPrecision(t.precision))!==t.precision&&console.warn("THREE.WebGLProgram.getParameters:",t.precision,"not supported, using",f,"instead.");var p=e.getRenderTarget();return{shaderID:u,precision:f,supportsVertexTextures:n.vertexTextures,outputEncoding:s(p?p.texture:null,e.gammaOutput),map:!!t.map,mapEncoding:s(t.map,e.gammaInput),matcap:!!t.matcap,matcapEncoding:s(t.matcap,e.gammaInput),envMap:!!t.envMap,envMapMode:t.envMap&&t.envMap.mapping,envMapEncoding:s(t.envMap,e.gammaInput),envMapCubeUV:!!t.envMap&&(t.envMap.mapping===he||t.envMap.mapping===ue),lightMap:!!t.lightMap,aoMap:!!t.aoMap,emissiveMap:!!t.emissiveMap,emissiveMapEncoding:s(t.emissiveMap,e.gammaInput),bumpMap:!!t.bumpMap,normalMap:!!t.normalMap,objectSpaceNormalMap:t.normalMapType===Tt,displacementMap:!!t.displacementMap,roughnessMap:!!t.roughnessMap,metalnessMap:!!t.metalnessMap,specularMap:!!t.specularMap,alphaMap:!!t.alphaMap,gradientMap:!!t.gradientMap,combine:t.combine,vertexTangents:t.normalMap&&t.vertexTangents,vertexColors:t.vertexColors,fog:!!o,useFog:t.fog,fogExp:o&&o.isFogExp2,flatShading:t.flatShading,sizeAttenuation:t.sizeAttenuation,logarithmicDepthBuffer:n.logarithmicDepthBuffer,skinning:t.skinning&&d>0,maxBones:d,useVertexTexture:n.floatVertexTextures,morphTargets:t.morphTargets,morphNormals:t.morphNormals,maxMorphTargets:e.maxMorphTargets,maxMorphNormals:e.maxMorphNormals,numDirLights:r.directional.length,numPointLights:r.point.length,numSpotLights:r.spot.length,numRectAreaLights:r.rectArea.length,numHemiLights:r.hemi.length,numClippingPlanes:c,numClipIntersection:l,dithering:t.dithering,shadowMapEnabled:e.shadowMap.enabled&&h.receiveShadow&&i.length>0,shadowMapType:e.shadowMap.type,toneMapping:e.toneMapping,physicallyCorrectLights:e.physicallyCorrectLights,premultipliedAlpha:t.premultipliedAlpha,alphaTest:t.alphaTest,doubleSided:t.side===g,flipSided:t.side===m,depthPacking:void 0!==t.depthPacking&&t.depthPacking}},this.getProgramCode=function(t,n){var r=[];if(n.shaderID?r.push(n.shaderID):(r.push(t.fragmentShader),r.push(t.vertexShader)),void 0!==t.defines)for(var i in t.defines)r.push(i),r.push(t.defines[i]);for(var a=0;a<o.length;a++)r.push(n[o[a]]);return r.push(t.onBeforeCompile.toString()),r.push(e.gammaOutput),r.push(e.gammaFactor),r.join()},this.acquireProgram=function(a,o,s,c){
// Check if code has been already compiled
for(var l,h=0,u=i.length;h<u;h++){var d=i[h];if(d.code===c){++(l=d).usedTimes;break}}return void 0===l&&(l=new Pi(e,t,c,a,o,s,n,r),i.push(l)),l},this.releaseProgram=function(e){if(0==--e.usedTimes){
// Remove from unordered set
var t=i.indexOf(e);i[t]=i[i.length-1],i.pop(),
// Free WebGL resources
e.destroy()}},
// Exposed for resource monitoring & error feedback via renderer.info:
this.programs=i}
/**
   * @author fordacious / fordacious.github.io
   */function Ri(){var e=new WeakMap;return{get:function(t){var n=e.get(t);return void 0===n&&(n={},e.set(t,n)),n},remove:function(t){e.delete(t)},update:function(t,n,r){e.get(t)[n]=r},dispose:function(){e=new WeakMap}}}
/**
   * @author mrdoob / http://mrdoob.com/
   */function Oi(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.program!==t.program?e.program.id-t.program.id:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function Ni(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function Ii(){var e=[],t=0,n=[],r=[],i={id:-1};function a(n,r,a,o,s,c){var l=e[t];return void 0===l?(l={id:n.id,object:n,geometry:r,material:a,program:a.program||i,groupOrder:o,renderOrder:n.renderOrder,z:s,group:c},e[t]=l):(l.id=n.id,l.object=n,l.geometry=r,l.material=a,l.program=a.program||i,l.groupOrder=o,l.renderOrder=n.renderOrder,l.z=s,l.group=c),t++,l}return{opaque:n,transparent:r,init:function(){t=0,n.length=0,r.length=0},push:function(e,t,i,o,s,c){var l=a(e,t,i,o,s,c);(!0===i.transparent?r:n).push(l)},unshift:function(e,t,i,o,s,c){var l=a(e,t,i,o,s,c);(!0===i.transparent?r:n).unshift(l)},sort:function(){n.length>1&&n.sort(Oi),r.length>1&&r.sort(Ni)}}}function Di(){var e={};function t(n){var r=n.target;r.removeEventListener("dispose",t),delete e[r.id]}return{get:function(n,r){var i,a=e[n.id];return void 0===a?(i=new Ii,e[n.id]={},e[n.id][r.id]=i,n.addEventListener("dispose",t)):void 0===(i=a[r.id])&&(i=new Ii,a[r.id]=i),i},dispose:function(){e={}}}}
/**
   * @author mrdoob / http://mrdoob.com/
   */function zi(){var e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];var n;switch(t.type){case"DirectionalLight":n={direction:new Ct,color:new hn,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new Lt};break;case"SpotLight":n={position:new Ct,direction:new Ct,color:new hn,distance:0,coneCos:0,penumbraCos:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new Lt};break;case"PointLight":n={position:new Ct,color:new hn,distance:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new Lt,shadowCameraNear:1,shadowCameraFar:1e3};break;case"HemisphereLight":n={direction:new Ct,skyColor:new hn,groundColor:new hn};break;case"RectAreaLight":n={color:new hn,position:new Ct,halfWidth:new Ct,halfHeight:new Ct}}return e[t.id]=n,n}}}var ki=0;function Bi(){for(var e=new zi,t={id:ki++,hash:{stateID:-1,directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,shadowsLength:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],point:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]},n=0;n<9;n++)t.probe.push(new Ct);var r=new Ct,i=new tn,a=new tn;return{setup:function(n,o,s){for(var c=0,l=0,h=0,u=0;u<9;u++)t.probe[u].set(0,0,0);for(var d=0,f=0,p=0,m=0,g=0,v=s.matrixWorldInverse,y=(u=0,n.length);u<y;u++){var b=n[u],x=b.color,w=b.intensity,_=b.distance,M=b.shadow&&b.shadow.map?b.shadow.map.texture:null;if(b.isAmbientLight)c+=x.r*w,l+=x.g*w,h+=x.b*w;else if(b.isLightProbe)for(var E=0;E<9;E++)t.probe[E].addScaledVector(b.sh.coefficients[E],w);else if(b.isDirectionalLight){if((T=e.get(b)).color.copy(b.color).multiplyScalar(b.intensity),T.direction.setFromMatrixPosition(b.matrixWorld),r.setFromMatrixPosition(b.target.matrixWorld),T.direction.sub(r),T.direction.transformDirection(v),T.shadow=b.castShadow,b.castShadow){var S=b.shadow;T.shadowBias=S.bias,T.shadowRadius=S.radius,T.shadowMapSize=S.mapSize}t.directionalShadowMap[d]=M,t.directionalShadowMatrix[d]=b.shadow.matrix,t.directional[d]=T,d++}else if(b.isSpotLight)(T=e.get(b)).position.setFromMatrixPosition(b.matrixWorld),T.position.applyMatrix4(v),T.color.copy(x).multiplyScalar(w),T.distance=_,T.direction.setFromMatrixPosition(b.matrixWorld),r.setFromMatrixPosition(b.target.matrixWorld),T.direction.sub(r),T.direction.transformDirection(v),T.coneCos=Math.cos(b.angle),T.penumbraCos=Math.cos(b.angle*(1-b.penumbra)),T.decay=b.decay,T.shadow=b.castShadow,b.castShadow&&(S=b.shadow,T.shadowBias=S.bias,T.shadowRadius=S.radius,T.shadowMapSize=S.mapSize),t.spotShadowMap[p]=M,t.spotShadowMatrix[p]=b.shadow.matrix,t.spot[p]=T,p++;else if(b.isRectAreaLight)
// (a) intensity is the total visible light emitted
//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );
// (b) intensity is the brightness of the light
(T=e.get(b)).color.copy(x).multiplyScalar(w),T.position.setFromMatrixPosition(b.matrixWorld),T.position.applyMatrix4(v),
// extract local rotation of light to derive width/height half vectors
a.identity(),i.copy(b.matrixWorld),i.premultiply(v),a.extractRotation(i),T.halfWidth.set(.5*b.width,0,0),T.halfHeight.set(0,.5*b.height,0),T.halfWidth.applyMatrix4(a),T.halfHeight.applyMatrix4(a),
// TODO (abelnation): RectAreaLight distance?
// uniforms.distance = distance;
t.rectArea[m]=T,m++;else if(b.isPointLight)(T=e.get(b)).position.setFromMatrixPosition(b.matrixWorld),T.position.applyMatrix4(v),T.color.copy(b.color).multiplyScalar(b.intensity),T.distance=b.distance,T.decay=b.decay,T.shadow=b.castShadow,b.castShadow&&(S=b.shadow,T.shadowBias=S.bias,T.shadowRadius=S.radius,T.shadowMapSize=S.mapSize,T.shadowCameraNear=S.camera.near,T.shadowCameraFar=S.camera.far),t.pointShadowMap[f]=M,t.pointShadowMatrix[f]=b.shadow.matrix,t.point[f]=T,f++;else if(b.isHemisphereLight){var T;(T=e.get(b)).direction.setFromMatrixPosition(b.matrixWorld),T.direction.transformDirection(v),T.direction.normalize(),T.skyColor.copy(b.color).multiplyScalar(w),T.groundColor.copy(b.groundColor).multiplyScalar(w),t.hemi[g]=T,g++}}t.ambient[0]=c,t.ambient[1]=l,t.ambient[2]=h,t.directional.length=d,t.spot.length=p,t.rectArea.length=m,t.point.length=f,t.hemi.length=g,t.hash.stateID=t.id,t.hash.directionalLength=d,t.hash.pointLength=f,t.hash.spotLength=p,t.hash.rectAreaLength=m,t.hash.hemiLength=g,t.hash.shadowsLength=o.length},state:t}}
/**
   * @author Mugen87 / https://github.com/Mugen87
   */function Ui(){var e=new Bi,t=[],n=[];return{init:function(){t.length=0,n.length=0},state:{lightsArray:t,shadowsArray:n,lights:e},setupLights:function(r){e.setup(t,n,r)},pushLight:function(e){t.push(e)},pushShadow:function(e){n.push(e)}}}function Fi(){var e={};function t(n){var r=n.target;r.removeEventListener("dispose",t),delete e[r.id]}return{get:function(n,r){var i;return void 0===e[n.id]?(i=new Ui,e[n.id]={},e[n.id][r.id]=i,n.addEventListener("dispose",t)):void 0===e[n.id][r.id]?(i=new Ui,e[n.id][r.id]=i):i=e[n.id][r.id],i},dispose:function(){e={}}}}
/**
   * @author mrdoob / http://mrdoob.com/
   * @author alteredq / http://alteredqualia.com/
   * @author bhouston / https://clara.io
   * @author WestLangley / http://github.com/WestLangley
   *
   * parameters = {
   *
   *  opacity: <float>,
   *
   *  map: new THREE.Texture( <Image> ),
   *
   *  alphaMap: new THREE.Texture( <Image> ),
   *
   *  displacementMap: new THREE.Texture( <Image> ),
   *  displacementScale: <float>,
   *  displacementBias: <float>,
   *
   *  wireframe: <boolean>,
   *  wireframeLinewidth: <float>
   * }
   */function Gi(e){Yn.call(this),this.type="MeshDepthMaterial",this.depthPacking=Mt,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.setValues(e)}
/**
   * @author WestLangley / http://github.com/WestLangley
   *
   * parameters = {
   *
   *  referencePosition: <float>,
   *  nearDistance: <float>,
   *  farDistance: <float>,
   *
   *  skinning: <bool>,
   *  morphTargets: <bool>,
   *
   *  map: new THREE.Texture( <Image> ),
   *
   *  alphaMap: new THREE.Texture( <Image> ),
   *
   *  displacementMap: new THREE.Texture( <Image> ),
   *  displacementScale: <float>,
   *  displacementBias: <float>
   *
   * }
   */
function ji(e){Yn.call(this),this.type="MeshDistanceMaterial",this.referencePosition=new Ct,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.lights=!1,this.setValues(e)}
/**
   * @author alteredq / http://alteredqualia.com/
   * @author mrdoob / http://mrdoob.com/
   */
function Hi(e,t,n){
// init
for(var r=new en,i=new tn,a=new Lt,o=new Lt(n,n),s=new Ct,c=new Ct,l=1,h=2,u=1+(l|h),f=new Array(u),v=new Array(u),y={},b={0:m,1:p,2:g},w=[new Ct(1,0,0),new Ct(-1,0,0),new Ct(0,0,1),new Ct(0,0,-1),new Ct(0,1,0),new Ct(0,-1,0)],_=[new Ct(0,1,0),new Ct(0,1,0),new Ct(0,1,0),new Ct(0,1,0),new Ct(0,0,1),new Ct(0,0,-1)],M=[new qt,new qt,new qt,new qt,new qt,new qt],E=0;E!==u;++E){var S=0!=(E&l),T=0!=(E&h),A=new Gi({depthPacking:Et,morphTargets:S,skinning:T});f[E]=A;
//
var L=new ji({morphTargets:S,skinning:T});v[E]=L}
//
var P=this;function C(t,n,r,i,a,o){var s=t.geometry,c=null,u=f,d=t.customDepthMaterial;if(r&&(u=v,d=t.customDistanceMaterial),d)c=d;else{var p=!1;n.morphTargets&&(s&&s.isBufferGeometry?p=s.morphAttributes&&s.morphAttributes.position&&s.morphAttributes.position.length>0:s&&s.isGeometry&&(p=s.morphTargets&&s.morphTargets.length>0)),t.isSkinnedMesh&&!1===n.skinning&&console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",t);var m=t.isSkinnedMesh&&n.skinning,g=0;p&&(g|=l),m&&(g|=h),c=u[g]}if(e.localClippingEnabled&&!0===n.clipShadows&&0!==n.clippingPlanes.length){
// in this case we need a unique material instance reflecting the
// appropriate state
var x=c.uuid,w=n.uuid,_=y[x];void 0===_&&(_={},y[x]=_);var M=_[w];void 0===M&&(M=c.clone(),_[w]=M),c=M}return c.visible=n.visible,c.wireframe=n.wireframe,c.side=null!=n.shadowSide?n.shadowSide:b[n.side],c.clipShadows=n.clipShadows,c.clippingPlanes=n.clippingPlanes,c.clipIntersection=n.clipIntersection,c.wireframeLinewidth=n.wireframeLinewidth,c.linewidth=n.linewidth,r&&c.isMeshDistanceMaterial&&(c.referencePosition.copy(i),c.nearDistance=a,c.farDistance=o),c}function R(n,i,a,o){if(!1!==n.visible){if(n.layers.test(i.layers)&&(n.isMesh||n.isLine||n.isPoints)&&n.castShadow&&(!n.frustumCulled||r.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(a.matrixWorldInverse,n.matrixWorld);var s=t.update(n),l=n.material;if(Array.isArray(l))for(var h=s.groups,u=0,d=h.length;u<d;u++){var f=h[u],p=l[f.materialIndex];if(p&&p.visible){var m=C(n,p,o,c,a.near,a.far);e.renderBufferDirect(a,null,s,m,n,f)}}else if(l.visible){m=C(n,l,o,c,a.near,a.far);e.renderBufferDirect(a,null,s,m,n,null)}}for(var g=n.children,v=0,y=g.length;v<y;v++)R(g[v],i,a,o)}}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=d,this.render=function(t,n,l){if(!1!==P.enabled&&(!1!==P.autoUpdate||!1!==P.needsUpdate)&&0!==t.length){var h,u=e.getRenderTarget(),d=e.state;
// Set GL state for depth map.
d.setBlending(x),d.buffers.color.setClear(1,1,1,1),d.buffers.depth.setTest(!0),d.setScissorTest(!1);for(var f=0,p=t.length;f<p;f++){var m=t[f],g=m.shadow,v=m&&m.isPointLight;if(void 0!==g){var y=g.camera;if(a.copy(g.mapSize),a.min(o),v){var b=a.x,E=a.y;
// These viewports map a cube-map onto a 2D texture with the
// following orientation:
//
//  xzXZ
//   y Y
//
// X - Positive x direction
// x - Negative x direction
// Y - Positive y direction
// y - Negative y direction
// Z - Positive z direction
// z - Negative z direction
// positive X
M[0].set(2*b,E,b,E),
// negative X
M[1].set(0,E,b,E),
// positive Z
M[2].set(3*b,E,b,E),
// negative Z
M[3].set(b,E,b,E),
// positive Y
M[4].set(3*b,0,b,E),
// negative Y
M[5].set(b,0,b,E),a.x*=4,a.y*=2}if(null===g.map){var S={minFilter:me,magFilter:me,format:De};g.map=new Xt(a.x,a.y,S),g.map.texture.name=m.name+".shadowMap",y.updateProjectionMatrix()}g.isSpotLightShadow&&g.update(m);var T=g.map,A=g.matrix;c.setFromMatrixPosition(m.matrixWorld),y.position.copy(c),v?(h=6,
// for point lights we set the shadow matrix to be a translation-only matrix
// equal to inverse of the light's position
A.makeTranslation(-c.x,-c.y,-c.z)):(h=1,s.setFromMatrixPosition(m.target.matrixWorld),y.lookAt(s),y.updateMatrixWorld(),
// compute shadow matrix
A.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),A.multiply(y.projectionMatrix),A.multiply(y.matrixWorldInverse)),e.setRenderTarget(T),e.clear();
// render shadow map for each cube face (if omni-directional) or
// run a single pass if not
for(var L=0;L<h;L++){if(v){s.copy(y.position),s.add(w[L]),y.up.copy(_[L]),y.lookAt(s),y.updateMatrixWorld();var C=M[L];d.viewport(C)}
// update camera matrices and frustum
i.multiplyMatrices(y.projectionMatrix,y.matrixWorldInverse),r.setFromMatrix(i),
// set object matrices & frustum culling
R(n,l,y,v)}}else console.warn("THREE.WebGLShadowMap:",m,"has no shadow.")}P.needsUpdate=!1,e.setRenderTarget(u)}}}
/**
   * @author mrdoob / http://mrdoob.com/
   */function Vi(e,t,n,r){
//
var i=new function(){var t=!1,n=new qt,r=null,i=new qt(0,0,0,0);return{setMask:function(n){r===n||t||(e.colorMask(n,n,n,n),r=n)},setLocked:function(e){t=e},setClear:function(t,r,a,o,s){!0===s&&(t*=o,r*=o,a*=o),n.set(t,r,a,o),!1===i.equals(n)&&(e.clearColor(t,r,a,o),i.copy(n))},reset:function(){t=!1,r=null,i.set(-1,0,0,0)}}},a=new function(){var t=!1,n=null,r=null,i=null;return{setTest:function(e){e?ae(2929):oe(2929)},setMask:function(r){n===r||t||(e.depthMask(r),n=r)},setFunc:function(t){if(r!==t){if(t)switch(t){case j:e.depthFunc(512);break;case H:e.depthFunc(519);break;case V:e.depthFunc(513);break;case W:e.depthFunc(515);break;case q:e.depthFunc(514);break;case X:e.depthFunc(518);break;case Y:e.depthFunc(516);break;case Z:e.depthFunc(517);break;default:e.depthFunc(515)}else e.depthFunc(515);r=t}},setLocked:function(e){t=e},setClear:function(t){i!==t&&(e.clearDepth(t),i=t)},reset:function(){t=!1,n=null,r=null,i=null}}},o=new function(){var t=!1,n=null,r=null,i=null,a=null,o=null,s=null,c=null,l=null;return{setTest:function(e){e?ae(2960):oe(2960)},setMask:function(r){n===r||t||(e.stencilMask(r),n=r)},setFunc:function(t,n,o){r===t&&i===n&&a===o||(e.stencilFunc(t,n,o),r=t,i=n,a=o)},setOp:function(t,n,r){o===t&&s===n&&c===r||(e.stencilOp(t,n,r),o=t,s=n,c=r)},setLocked:function(e){t=e},setClear:function(t){l!==t&&(e.clearStencil(t),l=t)},reset:function(){t=!1,n=null,r=null,i=null,a=null,o=null,s=null,c=null,l=null}}},s=e.getParameter(34921),c=new Uint8Array(s),d=new Uint8Array(s),f=new Uint8Array(s),p={},v=null,y=null,b=null,A=null,L=null,P=null,C=null,R=null,O=null,N=null,I=!1,D=null,z=null,k=null,B=null,U=null,F=e.getParameter(35661),G=!1,J=0,Q=e.getParameter(7938);-1!==Q.indexOf("WebGL")?(J=parseFloat(/^WebGL\ ([0-9])/.exec(Q)[1]),G=J>=1):-1!==Q.indexOf("OpenGL ES")&&(J=parseFloat(/^OpenGL\ ES\ ([0-9])/.exec(Q)[1]),G=J>=2);var K=null,$={},ee=new qt,te=new qt;function ne(t,n,r){var i=new Uint8Array(4),a=e.createTexture();// 4 is required to match default unpack alignment of 4.
e.bindTexture(t,a),e.texParameteri(t,10241,9728),e.texParameteri(t,10240,9728);for(var o=0;o<r;o++)e.texImage2D(n+o,0,6408,1,1,0,6408,5121,i);return a}var re={};function ie(n,i){(c[n]=1,0===d[n]&&(e.enableVertexAttribArray(n),d[n]=1),f[n]!==i)&&((r.isWebGL2?e:t.get("ANGLE_instanced_arrays"))[r.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](n,i),f[n]=i)}function ae(t){!0!==p[t]&&(e.enable(t),p[t]=!0)}function oe(t){!1!==p[t]&&(e.disable(t),p[t]=!1)}function se(t,r,i,a,o,s,c,l){if(t!==x){if(b||(ae(3042),b=!0),t===S)
// custom blending
o=o||r,s=s||i,c=c||a,r===L&&o===R||(e.blendEquationSeparate(n.convert(r),n.convert(o)),L=r,R=o),i===P&&a===C&&s===O&&c===N||(e.blendFuncSeparate(n.convert(i),n.convert(a),n.convert(s),n.convert(c)),P=i,C=a,O=s,N=c),A=t,I=null;else if(t!==A||l!==I){if(L===T&&R===T||(e.blendEquation(32774),L=T,R=T),l)switch(t){case w:e.blendFuncSeparate(1,771,1,771);break;case _:e.blendFunc(1,1);break;case M:e.blendFuncSeparate(0,0,769,771);break;case E:e.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}else switch(t){case w:e.blendFuncSeparate(770,771,1,771);break;case _:e.blendFunc(770,1);break;case M:e.blendFunc(0,769);break;case E:e.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}P=null,C=null,O=null,N=null,A=t,I=l}}else b&&(oe(3042),b=!1)}
//
function ce(t){D!==t&&(t?e.frontFace(2304):e.frontFace(2305),D=t)}function le(t){t!==l?(ae(2884),t!==z&&(t===h?e.cullFace(1029):t===u?e.cullFace(1028):e.cullFace(1032))):oe(2884),z=t}function he(t,n,r){t?(ae(32823),B===n&&U===r||(e.polygonOffset(n,r),B=n,U=r)):oe(32823)}
// texture
function ue(t){void 0===t&&(t=33984+F-1),K!==t&&(e.activeTexture(t),K=t)}return re[3553]=ne(3553,3553,1),re[34067]=ne(34067,34069,6),
// init
i.setClear(0,0,0,1),a.setClear(1),o.setClear(0),ae(2929),a.setFunc(W),ce(!1),le(h),ae(2884),se(x),{buffers:{color:i,depth:a,stencil:o},initAttributes:
//
function(){for(var e=0,t=c.length;e<t;e++)c[e]=0},enableAttribute:function(e){ie(e,0)},enableAttributeAndDivisor:ie,disableUnusedAttributes:function(){for(var t=0,n=d.length;t!==n;++t)d[t]!==c[t]&&(e.disableVertexAttribArray(t),d[t]=0)},enable:ae,disable:oe,getCompressedTextureFormats:function(){if(null===v&&(v=[],t.get("WEBGL_compressed_texture_pvrtc")||t.get("WEBGL_compressed_texture_s3tc")||t.get("WEBGL_compressed_texture_etc1")||t.get("WEBGL_compressed_texture_astc")))for(var n=e.getParameter(34467),r=0;r<n.length;r++)v.push(n[r]);return v},useProgram:function(t){return y!==t&&(e.useProgram(t),y=t,!0)},setBlending:se,setMaterial:function(e,t){e.side===g?oe(2884):ae(2884);var n=e.side===m;t&&(n=!n),ce(n),e.blending===w&&!1===e.transparent?se(x):se(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),a.setFunc(e.depthFunc),a.setTest(e.depthTest),a.setMask(e.depthWrite),i.setMask(e.colorWrite),he(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits)},setFlipSided:ce,setCullFace:le,setLineWidth:function(t){t!==k&&(G&&e.lineWidth(t),k=t)},setPolygonOffset:he,setScissorTest:function(e){e?ae(3089):oe(3089)},activeTexture:ue,bindTexture:function(t,n){null===K&&ue();var r=$[K];void 0===r&&(r={type:void 0,texture:void 0},$[K]=r),r.type===t&&r.texture===n||(e.bindTexture(t,n||re[t]),r.type=t,r.texture=n)},compressedTexImage2D:function(){try{e.compressedTexImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage2D:function(){try{e.texImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage3D:function(){try{e.texImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}}
//
,scissor:function(t){!1===ee.equals(t)&&(e.scissor(t.x,t.y,t.z,t.w),ee.copy(t))},viewport:function(t){!1===te.equals(t)&&(e.viewport(t.x,t.y,t.z,t.w),te.copy(t))}
//
,reset:function(){for(var t=0;t<d.length;t++)1===d[t]&&(e.disableVertexAttribArray(t),d[t]=0);p={},v=null,K=null,$={},y=null,A=null,D=null,z=null,i.reset(),a.reset(),o.reset()}}}
/**
   * @author mrdoob / http://mrdoob.com/
   */function Wi(e,t,n,r,i,a,o){var s,c={},l="undefined"!=typeof OffscreenCanvas;function h(e,t){
// Use OffscreenCanvas when available. Specially needed in web workers
return l?new OffscreenCanvas(e,t):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function u(e,t,n,r){var i=1;
// handle case if texture exceeds max size
// only perform resize if necessary
if((e.width>r||e.height>r)&&(i=r/Math.max(e.width,e.height)),i<1||!0===t){
// only perform resize for certain image types
if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){var a=t?At.floorPowerOfTwo:Math.floor,o=a(i*e.width),c=a(i*e.height);void 0===s&&(s=h(o,c));
// cube textures can't reuse the same canvas
var l=n?h(o,c):s;return l.width=o,l.height=c,l.getContext("2d").drawImage(e,0,0,o,c),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+e.width+"x"+e.height+") to ("+o+"x"+c+")."),l}return"data"in e&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+e.width+"x"+e.height+")."),e}return e}function d(e){return At.isPowerOfTwo(e.width)&&At.isPowerOfTwo(e.height)}function f(e,t){return e.generateMipmaps&&t&&e.minFilter!==me&&e.minFilter!==ye}function p(t,n,i,a){e.generateMipmap(t),
// Note: Math.log( x ) * Math.LOG2E used instead of Math.log2( x ) which is not supported by IE11
r.get(n).__maxMipLevel=Math.log(Math.max(i,a))*Math.LOG2E}function m(e,n){if(!i.isWebGL2)return e;var r=e;return 6403===e&&(5126===n&&(r=33326),5131===n&&(r=33325),5121===n&&(r=33321)),6407===e&&(5126===n&&(r=34837),5131===n&&(r=34843),5121===n&&(r=32849)),6408===e&&(5126===n&&(r=34836),5131===n&&(r=34842),5121===n&&(r=32856)),33325===r||33326===r||34842===r||34836===r?t.get("EXT_color_buffer_float"):34843!==r&&34837!==r||console.warn("THREE.WebGLRenderer: Floating point textures with RGB format not supported. Please use RGBA instead."),r}
// Fallback filters for non-power-of-2 textures
function g(e){return e===me||e===ge||e===ve?9728:9729}
//
function v(t){var n=t.target;n.removeEventListener("dispose",v),
//
function(t){var n=r.get(t);if(void 0===n.__webglInit)return;e.deleteTexture(n.__webglTexture),r.remove(t)}(n),n.isVideoTexture&&delete c[n.id],o.memory.textures--}function y(t){var n=t.target;n.removeEventListener("dispose",y),function(t){var n=r.get(t),i=r.get(t.texture);if(!t)return;void 0!==i.__webglTexture&&e.deleteTexture(i.__webglTexture);t.depthTexture&&t.depthTexture.dispose();if(t.isWebGLRenderTargetCube)for(var a=0;a<6;a++)e.deleteFramebuffer(n.__webglFramebuffer[a]),n.__webglDepthbuffer&&e.deleteRenderbuffer(n.__webglDepthbuffer[a]);else e.deleteFramebuffer(n.__webglFramebuffer),n.__webglDepthbuffer&&e.deleteRenderbuffer(n.__webglDepthbuffer);r.remove(t.texture),r.remove(t)}
//
(n),o.memory.textures--}var b=0;
//
function x(e,t){var i=r.get(e);if(e.isVideoTexture&&function(e){var t=e.id,n=o.render.frame;
// Check the last frame we updated the VideoTexture
c[t]!==n&&(c[t]=n,e.update())}
// backwards compatibility
(e),e.version>0&&i.__version!==e.version){var a=e.image;if(void 0===a)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else{if(!1!==a.complete)return void S(i,e,t);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}n.activeTexture(33984+t),n.bindTexture(3553,i.__webglTexture)}function w(t,o){var s=r.get(t);if(6===t.image.length)if(t.version>0&&s.__version!==t.version){E(s,t),n.activeTexture(33984+o),n.bindTexture(34067,s.__webglTexture),e.pixelStorei(37440,t.flipY);for(var c=t&&t.isCompressedTexture,l=t.image[0]&&t.image[0].isDataTexture,h=[],g=0;g<6;g++)h[g]=c||l?l?t.image[g].image:t.image[g]:u(t.image[g],!1,!0,i.maxCubemapSize);var v=h[0],y=d(v)||i.isWebGL2,b=a.convert(t.format),x=a.convert(t.type),w=m(b,x);M(34067,t,y);for(g=0;g<6;g++)if(c)for(var _,S=h[g].mipmaps,T=0,A=S.length;T<A;T++)_=S[T],t.format!==De&&t.format!==Ie?n.getCompressedTextureFormats().indexOf(b)>-1?n.compressedTexImage2D(34069+g,T,w,_.width,_.height,0,_.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):n.texImage2D(34069+g,T,w,_.width,_.height,0,b,x,_.data);else l?n.texImage2D(34069+g,0,w,h[g].width,h[g].height,0,b,x,h[g].data):n.texImage2D(34069+g,0,w,b,x,h[g]);s.__maxMipLevel=c?S.length-1:0,f(t,y)&&
// We assume images for cube map have the same size.
p(34067,t,v.width,v.height),s.__version=t.version,t.onUpdate&&t.onUpdate(t)}else n.activeTexture(33984+o),n.bindTexture(34067,s.__webglTexture)}function _(e,t){n.activeTexture(33984+t),n.bindTexture(34067,r.get(e).__webglTexture)}function M(n,o,s){var c;if(s?(e.texParameteri(n,10242,a.convert(o.wrapS)),e.texParameteri(n,10243,a.convert(o.wrapT)),32879!==n&&35866!==n||e.texParameteri(n,32882,a.convert(o.wrapR)),e.texParameteri(n,10240,a.convert(o.magFilter)),e.texParameteri(n,10241,a.convert(o.minFilter))):(e.texParameteri(n,10242,33071),e.texParameteri(n,10243,33071),32879!==n&&35866!==n||e.texParameteri(n,32882,33071),o.wrapS===fe&&o.wrapT===fe||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),e.texParameteri(n,10240,g(o.magFilter)),e.texParameteri(n,10241,g(o.minFilter)),o.minFilter!==me&&o.minFilter!==ye&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),c=t.get("EXT_texture_filter_anisotropic")){if(o.type===Ae&&null===t.get("OES_texture_float_linear"))return;if(o.type===Le&&null===(i.isWebGL2||t.get("OES_texture_half_float_linear")))return;(o.anisotropy>1||r.get(o).__currentAnisotropy)&&(e.texParameterf(n,c.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(o.anisotropy,i.getMaxAnisotropy())),r.get(o).__currentAnisotropy=o.anisotropy)}}function E(t,n){void 0===t.__webglInit&&(t.__webglInit=!0,n.addEventListener("dispose",v),t.__webglTexture=e.createTexture(),o.memory.textures++)}function S(t,r,o){var s=3553;r.isDataTexture2DArray&&(s=35866),r.isDataTexture3D&&(s=32879),E(t,r),n.activeTexture(33984+o),n.bindTexture(s,t.__webglTexture),e.pixelStorei(37440,r.flipY),e.pixelStorei(37441,r.premultiplyAlpha),e.pixelStorei(3317,r.unpackAlignment);var c=function(e){return!i.isWebGL2&&(e.wrapS!==fe||e.wrapT!==fe||e.minFilter!==me&&e.minFilter!==ye)}(r)&&!1===d(r.image),l=u(r.image,c,!1,i.maxTextureSize),h=d(l)||i.isWebGL2,g=a.convert(r.format),v=a.convert(r.type),y=m(g,v);M(s,r,h);var b,x=r.mipmaps;if(r.isDepthTexture){if(
// populate depth texture with dummy data
y=6402,r.type===Ae){if(!i.isWebGL2)throw new Error("Float Depth Texture only supported in WebGL2.0");y=36012}else i.isWebGL2&&(
// WebGL 2.0 requires signed internalformat for glTexImage2D
y=33189);r.format===Ue&&6402===y&&r.type!==Ee&&r.type!==Te&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),r.type=Ee,v=a.convert(r.type)),
// Depth stencil textures need the DEPTH_STENCIL internal format
// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)
r.format===Fe&&(y=34041,
// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are
// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.
// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)
r.type!==Oe&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),r.type=Oe,v=a.convert(r.type))),n.texImage2D(3553,0,y,l.width,l.height,0,g,v,null)}else if(r.isDataTexture)
// use manually created mipmaps if available
// if there are no manual mipmaps
// set 0 level mipmap and then use GL to generate other mipmap levels
if(x.length>0&&h){for(var w=0,_=x.length;w<_;w++)b=x[w],n.texImage2D(3553,w,y,b.width,b.height,0,g,v,b.data);r.generateMipmaps=!1,t.__maxMipLevel=x.length-1}else n.texImage2D(3553,0,y,l.width,l.height,0,g,v,l.data),t.__maxMipLevel=0;else if(r.isCompressedTexture){for(w=0,_=x.length;w<_;w++)b=x[w],r.format!==De&&r.format!==Ie?n.getCompressedTextureFormats().indexOf(g)>-1?n.compressedTexImage2D(3553,w,y,b.width,b.height,0,b.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):n.texImage2D(3553,w,y,b.width,b.height,0,g,v,b.data);t.__maxMipLevel=x.length-1}else if(r.isDataTexture2DArray)n.texImage3D(35866,0,y,l.width,l.height,l.depth,0,g,v,l.data),t.__maxMipLevel=0;else if(r.isDataTexture3D)n.texImage3D(32879,0,y,l.width,l.height,l.depth,0,g,v,l.data),t.__maxMipLevel=0;else
// regular Texture (image, video, canvas)
// use manually created mipmaps if available
// if there are no manual mipmaps
// set 0 level mipmap and then use GL to generate other mipmap levels
if(x.length>0&&h){for(w=0,_=x.length;w<_;w++)b=x[w],n.texImage2D(3553,w,y,g,v,b);r.generateMipmaps=!1,t.__maxMipLevel=x.length-1}else n.texImage2D(3553,0,y,g,v,l),t.__maxMipLevel=0;f(r,h)&&p(3553,r,l.width,l.height),t.__version=r.version,r.onUpdate&&r.onUpdate(r)}
// Render targets
// Setup storage for target texture and bind it to correct framebuffer
function T(t,i,o,s){var c=a.convert(i.texture.format),l=a.convert(i.texture.type),h=m(c,l);n.texImage2D(s,0,h,i.width,i.height,0,c,l,null),e.bindFramebuffer(36160,t),e.framebufferTexture2D(36160,o,s,r.get(i.texture).__webglTexture,0),e.bindFramebuffer(36160,null)}
// Setup storage for internal depth/stencil buffers and bind to correct framebuffer
function A(t,n,r){if(e.bindRenderbuffer(36161,t),n.depthBuffer&&!n.stencilBuffer){if(r){var i=P(n);e.renderbufferStorageMultisample(36161,i,33189,n.width,n.height)}else e.renderbufferStorage(36161,33189,n.width,n.height);e.framebufferRenderbuffer(36160,36096,36161,t)}else if(n.depthBuffer&&n.stencilBuffer){if(r){i=P(n);e.renderbufferStorageMultisample(36161,i,34041,n.width,n.height)}else e.renderbufferStorage(36161,34041,n.width,n.height);e.framebufferRenderbuffer(36160,33306,36161,t)}else{var o=m(a.convert(n.texture.format),a.convert(n.texture.type));if(r){i=P(n);e.renderbufferStorageMultisample(36161,i,o,n.width,n.height)}else e.renderbufferStorage(36161,o,n.width,n.height)}e.bindRenderbuffer(36161,null)}
// Setup resources for a Depth Texture for a FBO (needs an extension)
// Setup GL resources for a non-texture depth buffer
function L(t){var n=r.get(t),i=!0===t.isWebGLRenderTargetCube;if(t.depthTexture){if(i)throw new Error("target.depthTexture not supported in Cube render targets");!function(t,n){if(n&&n.isWebGLRenderTargetCube)throw new Error("Depth Texture with cube render targets is not supported");if(e.bindFramebuffer(36160,t),!n.depthTexture||!n.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");
// upload an empty depth texture with framebuffer size
r.get(n.depthTexture).__webglTexture&&n.depthTexture.image.width===n.width&&n.depthTexture.image.height===n.height||(n.depthTexture.image.width=n.width,n.depthTexture.image.height=n.height,n.depthTexture.needsUpdate=!0),x(n.depthTexture,0);var i=r.get(n.depthTexture).__webglTexture;if(n.depthTexture.format===Ue)e.framebufferTexture2D(36160,36096,3553,i,0);else{if(n.depthTexture.format!==Fe)throw new Error("Unknown depthTexture format");e.framebufferTexture2D(36160,33306,3553,i,0)}}(n.__webglFramebuffer,t)}else if(i){n.__webglDepthbuffer=[];for(var a=0;a<6;a++)e.bindFramebuffer(36160,n.__webglFramebuffer[a]),n.__webglDepthbuffer[a]=e.createRenderbuffer(),A(n.__webglDepthbuffer[a],t)}else e.bindFramebuffer(36160,n.__webglFramebuffer),n.__webglDepthbuffer=e.createRenderbuffer(),A(n.__webglDepthbuffer,t);e.bindFramebuffer(36160,null)}
// Set up GL resources for the render target
function P(e){return i.isWebGL2&&e.isWebGLMultisampleRenderTarget?Math.min(i.maxSamples,e.samples):0}var C=!1,R=!1;
//
this.allocateTextureUnit=function(){var e=b;return e>=i.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+e+" texture units while this GPU supports only "+i.maxTextures),b+=1,e},this.resetTextureUnits=function(){b=0},this.setTexture2D=x,this.setTexture2DArray=function(e,t){var i=r.get(e);e.version>0&&i.__version!==e.version?S(i,e,t):(n.activeTexture(33984+t),n.bindTexture(35866,i.__webglTexture))},this.setTexture3D=function(e,t){var i=r.get(e);e.version>0&&i.__version!==e.version?S(i,e,t):(n.activeTexture(33984+t),n.bindTexture(32879,i.__webglTexture))},this.setTextureCube=w,this.setTextureCubeDynamic=_,this.setupRenderTarget=function(t){var s=r.get(t),c=r.get(t.texture);t.addEventListener("dispose",y),c.__webglTexture=e.createTexture(),o.memory.textures++;var l=!0===t.isWebGLRenderTargetCube,h=!0===t.isWebGLMultisampleRenderTarget,u=d(t)||i.isWebGL2;
// Setup framebuffer
if(l){s.__webglFramebuffer=[];for(var g=0;g<6;g++)s.__webglFramebuffer[g]=e.createFramebuffer()}else if(s.__webglFramebuffer=e.createFramebuffer(),h)if(i.isWebGL2){s.__webglMultisampledFramebuffer=e.createFramebuffer(),s.__webglColorRenderbuffer=e.createRenderbuffer(),e.bindRenderbuffer(36161,s.__webglColorRenderbuffer);var v=m(a.convert(t.texture.format),a.convert(t.texture.type)),b=P(t);e.renderbufferStorageMultisample(36161,b,v,t.width,t.height),e.bindFramebuffer(36160,s.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(36160,36064,36161,s.__webglColorRenderbuffer),e.bindRenderbuffer(36161,null),t.depthBuffer&&(s.__webglDepthRenderbuffer=e.createRenderbuffer(),A(s.__webglDepthRenderbuffer,t,!0)),e.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");
// Setup color buffer
if(l){for(n.bindTexture(34067,c.__webglTexture),M(34067,t.texture,u),g=0;g<6;g++)T(s.__webglFramebuffer[g],t,36064,34069+g);f(t.texture,u)&&p(34067,t.texture,t.width,t.height),n.bindTexture(34067,null)}else n.bindTexture(3553,c.__webglTexture),M(3553,t.texture,u),T(s.__webglFramebuffer,t,36064,3553),f(t.texture,u)&&p(3553,t.texture,t.width,t.height),n.bindTexture(3553,null);
// Setup depth and stencil buffers
t.depthBuffer&&L(t)},this.updateRenderTargetMipmap=function(e){var t=e.texture;if(f(t,d(e)||i.isWebGL2)){var a=e.isWebGLRenderTargetCube?34067:3553,o=r.get(t).__webglTexture;n.bindTexture(a,o),p(a,t,e.width,e.height),n.bindTexture(a,null)}},this.updateMultisampleRenderTarget=function(t){if(t.isWebGLMultisampleRenderTarget)if(i.isWebGL2){var n=r.get(t);e.bindFramebuffer(36008,n.__webglMultisampledFramebuffer),e.bindFramebuffer(36009,n.__webglFramebuffer);var a=t.width,o=t.height,s=16384;t.depthBuffer&&(s|=256),t.stencilBuffer&&(s|=1024),e.blitFramebuffer(0,0,a,o,0,0,a,o,s,9728)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")},this.safeSetTexture2D=function(e,t){e&&e.isWebGLRenderTarget&&(!1===C&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),C=!0),e=e.texture),x(e,t)},this.safeSetTextureCube=function(e,t){e&&e.isWebGLRenderTargetCube&&(!1===R&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),R=!0),e=e.texture),
// currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture
// TODO: unify these code paths
e&&e.isCubeTexture||Array.isArray(e.image)&&6===e.image.length?
// CompressedTexture can have Array in image :/
// this function alone should take care of cube textures
w(e,t):
// assumed: texture property of THREE.WebGLRenderTargetCube
_(e,t)}}
/**
   * @author thespite / http://www.twitter.com/thespite
   */function qi(e,t,n){return{convert:function(e){var r;if(e===de)return 10497;if(e===fe)return 33071;if(e===pe)return 33648;if(e===me)return 9728;if(e===ge)return 9984;if(e===ve)return 9986;if(e===ye)return 9729;if(e===be)return 9985;if(e===xe)return 9987;if(e===we)return 5121;if(e===Pe)return 32819;if(e===Ce)return 32820;if(e===Re)return 33635;if(e===_e)return 5120;if(e===Me)return 5122;if(e===Ee)return 5123;if(e===Se)return 5124;if(e===Te)return 5125;if(e===Ae)return 5126;if(e===Le){if(n.isWebGL2)return 5131;if(null!==(r=t.get("OES_texture_half_float")))return r.HALF_FLOAT_OES}if(e===Ne)return 6406;if(e===Ie)return 6407;if(e===De)return 6408;if(e===ze)return 6409;if(e===ke)return 6410;if(e===Ue)return 6402;if(e===Fe)return 34041;if(e===Ge)return 6403;if(e===T)return 32774;if(e===A)return 32778;if(e===L)return 32779;if(e===R)return 0;if(e===O)return 1;if(e===N)return 768;if(e===I)return 769;if(e===D)return 770;if(e===z)return 771;if(e===k)return 772;if(e===B)return 773;if(e===U)return 774;if(e===F)return 775;if(e===G)return 776;if((e===je||e===He||e===Ve||e===We)&&null!==(r=t.get("WEBGL_compressed_texture_s3tc"))){if(e===je)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===He)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===Ve)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===We)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}if((e===qe||e===Xe||e===Ye||e===Ze)&&null!==(r=t.get("WEBGL_compressed_texture_pvrtc"))){if(e===qe)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===Xe)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===Ye)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===Ze)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(e===Je&&null!==(r=t.get("WEBGL_compressed_texture_etc1")))return r.COMPRESSED_RGB_ETC1_WEBGL;if((e===Qe||e===Ke||e===$e||e===et||e===tt||e===nt||e===rt||e===it||e===at||e===ot||e===st||e===ct||e===lt||e===ht)&&null!==(r=t.get("WEBGL_compressed_texture_astc")))return e;if(e===P||e===C){if(n.isWebGL2){if(e===P)return 32775;if(e===C)return 32776}if(null!==(r=t.get("EXT_blend_minmax"))){if(e===P)return r.MIN_EXT;if(e===C)return r.MAX_EXT}}if(e===Oe){if(n.isWebGL2)return 34042;if(null!==(r=t.get("WEBGL_depth_texture")))return r.UNSIGNED_INT_24_8_WEBGL}return 0}}}
/**
   * @author mrdoob / http://mrdoob.com/
   */function Xi(){En.call(this),this.type="Group"}
/**
   * @author mrdoob / http://mrdoob.com/
   * @author mikael emtinger / http://gomo.se/
   * @author WestLangley / http://github.com/WestLangley
  */
function Yi(){En.call(this),this.type="Camera",this.matrixWorldInverse=new tn,this.projectionMatrix=new tn,this.projectionMatrixInverse=new tn}
/**
   * @author mrdoob / http://mrdoob.com/
   * @author greggman / http://games.greggman.com/
   * @author zz85 / http://www.lab4games.net/zz85/blog
   * @author tschw
   */
function Zi(e,t,n,r){Yi.call(this),this.type="PerspectiveCamera",this.fov=void 0!==e?e:50,this.zoom=1,this.near=void 0!==n?n:.1,this.far=void 0!==r?r:2e3,this.focus=10,this.aspect=void 0!==t?t:1,this.view=null,this.filmGauge=35,// width of the film (default in millimeters)
this.filmOffset=0,// horizontal film offset (same unit as gauge)
this.updateProjectionMatrix()}
/**
   * @author mrdoob / http://mrdoob.com/
   */
function Ji(e){Zi.call(this),this.cameras=e||[]}Gi.prototype=Object.create(Yn.prototype),Gi.prototype.constructor=Gi,Gi.prototype.isMeshDepthMaterial=!0,Gi.prototype.copy=function(e){return Yn.prototype.copy.call(this,e),this.depthPacking=e.depthPacking,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this},ji.prototype=Object.create(Yn.prototype),ji.prototype.constructor=ji,ji.prototype.isMeshDistanceMaterial=!0,ji.prototype.copy=function(e){return Yn.prototype.copy.call(this,e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this},Xi.prototype=Object.assign(Object.create(En.prototype),{constructor:Xi,isGroup:!0}),Yi.prototype=Object.assign(Object.create(En.prototype),{constructor:Yi,isCamera:!0,copy:function(e,t){return En.prototype.copy.call(this,e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this},getWorldDirection:function(e){void 0===e&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),e=new Ct),this.updateMatrixWorld(!0);var t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()},updateMatrixWorld:function(e){En.prototype.updateMatrixWorld.call(this,e),this.matrixWorldInverse.getInverse(this.matrixWorld)},clone:function(){return(new this.constructor).copy(this)}}),Zi.prototype=Object.assign(Object.create(Yi.prototype),{constructor:Zi,isPerspectiveCamera:!0,copy:function(e,t){return Yi.prototype.copy.call(this,e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this},
/**
  	 * Sets the FOV by focal length in respect to the current .filmGauge.
  	 *
  	 * The default film gauge is 35, so that the focal length can be specified for
  	 * a 35mm (full frame) camera.
  	 *
  	 * Values for focal length and film gauge must have the same unit.
  	 */
setFocalLength:function(e){
// see http://www.bobatkins.com/photography/technical/field_of_view.html
var t=.5*this.getFilmHeight()/e;this.fov=2*At.RAD2DEG*Math.atan(t),this.updateProjectionMatrix()},
/**
  	 * Calculates the focal length from the current .fov and .filmGauge.
  	 */
getFocalLength:function(){var e=Math.tan(.5*At.DEG2RAD*this.fov);return.5*this.getFilmHeight()/e},getEffectiveFOV:function(){return 2*At.RAD2DEG*Math.atan(Math.tan(.5*At.DEG2RAD*this.fov)/this.zoom)},getFilmWidth:function(){
// film not completely covered in portrait format (aspect < 1)
return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){
// film not completely covered in landscape format (aspect > 1)
return this.filmGauge/Math.max(this.aspect,1)},
/**
  	 * Sets an offset in a larger frustum. This is useful for multi-window or
  	 * multi-monitor/multi-machine setups.
  	 *
  	 * For example, if you have 3x2 monitors and each monitor is 1920x1080 and
  	 * the monitors are in grid like this
  	 *
  	 *   +---+---+---+
  	 *   | A | B | C |
  	 *   +---+---+---+
  	 *   | D | E | F |
  	 *   +---+---+---+
  	 *
  	 * then for each monitor you would call it like this
  	 *
  	 *   var w = 1920;
  	 *   var h = 1080;
  	 *   var fullWidth = w * 3;
  	 *   var fullHeight = h * 2;
  	 *
  	 *   --A--
  	 *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );
  	 *   --B--
  	 *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );
  	 *   --C--
  	 *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );
  	 *   --D--
  	 *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );
  	 *   --E--
  	 *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );
  	 *   --F--
  	 *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );
  	 *
  	 *   Note there is no reason monitors have to be the same size or in a grid.
  	 */
setViewOffset:function(e,t,n,r,i,a){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=r,this.view.width=i,this.view.height=a,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){var e=this.near,t=e*Math.tan(.5*At.DEG2RAD*this.fov)/this.zoom,n=2*t,r=this.aspect*n,i=-.5*r,a=this.view;if(null!==this.view&&this.view.enabled){var o=a.fullWidth,s=a.fullHeight;i+=a.offsetX*r/o,t-=a.offsetY*n/s,r*=a.width/o,n*=a.height/s}var c=this.filmOffset;0!==c&&(i+=e*c/this.getFilmWidth()),this.projectionMatrix.makePerspective(i,i+r,t,t-n,e,this.far),this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(e){var t=En.prototype.toJSON.call(this,e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}),Ji.prototype=Object.assign(Object.create(Zi.prototype),{constructor:Ji,isArrayCamera:!0});
/**
   * @author jsantell / https://www.jsantell.com/
   * @author mrdoob / http://mrdoob.com/
   */
var Qi,Ki,$i,ea,ta,na,ra=new Ct,ia=new Ct;
/**
   * Assumes 2 cameras that are parallel and share an X-axis, and that
   * the cameras' projection and world matrices have already been set.
   * And that near and far planes are identical for both cameras.
   * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765
   */
function aa(e,t,n){ra.setFromMatrixPosition(t.matrixWorld),ia.setFromMatrixPosition(n.matrixWorld);var r=ra.distanceTo(ia),i=t.projectionMatrix.elements,a=n.projectionMatrix.elements,o=i[14]/(i[10]-1),s=i[14]/(i[10]+1),c=(i[9]+1)/i[5],l=(i[9]-1)/i[5],h=(i[8]-1)/i[0],u=(a[8]+1)/a[0],d=o*h,f=o*u,p=r/(-h+u),m=p*-h;
// TODO: Better way to apply this offset?
t.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(m),e.translateZ(p),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.getInverse(e.matrixWorld);
// Find the union of the frustum values of the cameras and scale
// the values so that the near plane's position does not change in world space,
// although must now be relative to the new union camera.
var g=o+p,v=s+p,y=d-m,b=f+(r-m),x=c*s/v*g,w=l*s/v*g;e.projectionMatrix.makePerspective(y,b,x,w,g,v)}
/**
   * @author mrdoob / http://mrdoob.com/
   */function oa(e){var t=this,n=null,r=null,i=null,a=[],o=new tn,s=new tn,c=1,l="stage";"undefined"!=typeof window&&"VRFrameData"in window&&(r=new window.VRFrameData,window.addEventListener("vrdisplaypresentchange",b,!1));var h=new tn,u=new Pt,d=new Ct,f=new Zi;f.bounds=new qt(0,0,.5,1),f.layers.enable(1);var p=new Zi;p.bounds=new qt(.5,0,.5,1),p.layers.enable(2);var m=new Ji([f,p]);
//
function g(){return null!==n&&!0===n.isPresenting}m.layers.enable(1),m.layers.enable(2);var v,y=new Lt;function b(){if(g()){var r=n.getEyeParameters("left"),i=r.renderWidth*c,a=r.renderHeight*c;v=e.getPixelRatio(),e.getSize(y),e.setDrawingBufferSize(2*i,a,1),_.start()}else t.enabled&&e.setDrawingBufferSize(y.width,y.height,v),_.stop()}
//
var x=[];function w(e){for(var t=navigator.getGamepads&&navigator.getGamepads(),n=0,r=0,i=t.length;n<i;n++){var a=t[n];if(a&&("Daydream Controller"===a.id||"Gear VR Controller"===a.id||"Oculus Go Controller"===a.id||"OpenVR Gamepad"===a.id||a.id.startsWith("Oculus Touch")||a.id.startsWith("Spatial Controller"))){if(r===e)return a;r++}}}
//
this.enabled=!1,this.getController=function(e){var t=a[e];return void 0===t&&((t=new Xi).matrixAutoUpdate=!1,t.visible=!1,a[e]=t),t},this.getDevice=function(){return n},this.setDevice=function(e){void 0!==e&&(n=e),_.setContext(e)},this.setFramebufferScaleFactor=function(e){c=e},this.setFrameOfReferenceType=function(e){l=e},this.setPoseTarget=function(e){void 0!==e&&(i=e)},this.getCamera=function(e){var t="stage"===l?1.6:0;if(!1===g())return e.position.set(0,t,0),e.rotation.set(0,0,0),e;
//
if(n.depthNear=e.near,n.depthFar=e.far,n.getFrameData(r),"stage"===l){var c=n.stageParameters;c?o.fromArray(c.sittingToStandingTransform):o.makeTranslation(0,t,0)}var v=r.pose,y=null!==i?i:e;
// We want to manipulate poseObject by its position and quaternion components since users may rely on them.
y.matrix.copy(o),y.matrix.decompose(y.position,y.quaternion,y.scale),null!==v.orientation&&(u.fromArray(v.orientation),y.quaternion.multiply(u)),null!==v.position&&(u.setFromRotationMatrix(o),d.fromArray(v.position),d.applyQuaternion(u),y.position.add(d)),y.updateMatrixWorld(),
//
f.near=e.near,p.near=e.near,f.far=e.far,p.far=e.far,f.matrixWorldInverse.fromArray(r.leftViewMatrix),p.matrixWorldInverse.fromArray(r.rightViewMatrix),
// TODO (mrdoob) Double check this code
s.getInverse(o),"stage"===l&&(f.matrixWorldInverse.multiply(s),p.matrixWorldInverse.multiply(s));var b=y.parent;null!==b&&(h.getInverse(b.matrixWorld),f.matrixWorldInverse.multiply(h),p.matrixWorldInverse.multiply(h)),
// envMap and Mirror needs camera.matrixWorld
f.matrixWorld.getInverse(f.matrixWorldInverse),p.matrixWorld.getInverse(p.matrixWorldInverse),f.projectionMatrix.fromArray(r.leftProjectionMatrix),p.projectionMatrix.fromArray(r.rightProjectionMatrix),aa(m,f,p);
//
var _=n.getLayers();if(_.length){var M=_[0];null!==M.leftBounds&&4===M.leftBounds.length&&f.bounds.fromArray(M.leftBounds),null!==M.rightBounds&&4===M.rightBounds.length&&p.bounds.fromArray(M.rightBounds)}return function(){for(var e=0;e<a.length;e++){var t=a[e],n=w(e);if(void 0!==n&&void 0!==n.pose){if(null===n.pose)return;
// Pose
var r=n.pose;!1===r.hasPosition&&t.position.set(.2,-.6,-.05),null!==r.position&&t.position.fromArray(r.position),null!==r.orientation&&t.quaternion.fromArray(r.orientation),t.matrix.compose(t.position,t.quaternion,t.scale),t.matrix.premultiply(o),t.matrix.decompose(t.position,t.quaternion,t.scale),t.matrixWorldNeedsUpdate=!0,t.visible=!0;
// Trigger
var i="Daydream Controller"===n.id?0:1;x[e]!==n.buttons[i].pressed&&(x[e]=n.buttons[i].pressed,!0===x[e]?t.dispatchEvent({type:"selectstart"}):(t.dispatchEvent({type:"selectend"}),t.dispatchEvent({type:"select"})))}else t.visible=!1}}(),m},this.getStandingMatrix=function(){return o},this.isPresenting=g;
// Animation Loop
var _=new pn;this.setAnimationLoop=function(e){_.setAnimationLoop(e),g()&&_.start()},this.submitFrame=function(){g()&&n.submitFrame()},this.dispose=function(){"undefined"!=typeof window&&window.removeEventListener("vrdisplaypresentchange",b)}}
/**
   * @author mrdoob / http://mrdoob.com/
   */function sa(e){var t=e.context,n=null,r=null,i=1,a=null,o="stage",s=null,c=[],l=[];function h(){return null!==r&&null!==a}
//
var u=new Zi;u.layers.enable(1),u.viewport=new qt;var d=new Zi;d.layers.enable(2),d.viewport=new qt;var f=new Ji([u,d]);
//
function p(e){var t=c[l.indexOf(e.inputSource)];t&&t.dispatchEvent({type:e.type})}function m(){e.setFramebuffer(null),e.setRenderTarget(e.getRenderTarget()),// Hack #15830
y.stop()}function g(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.getInverse(e.matrixWorld)}f.layers.enable(1),f.layers.enable(2),
//
this.enabled=!1,this.getController=function(e){var t=c[e];return void 0===t&&((t=new Xi).matrixAutoUpdate=!1,t.visible=!1,c[e]=t),t},this.getDevice=function(){return n},this.setDevice=function(e){void 0!==e&&(n=e),e instanceof XRDevice&&t.setCompatibleXRDevice(e)},this.setFramebufferScaleFactor=function(e){i=e},this.setFrameOfReferenceType=function(e){o=e},this.setSession=function(n){null!==(r=n)&&(r.addEventListener("select",p),r.addEventListener("selectstart",p),r.addEventListener("selectend",p),r.addEventListener("end",m),r.baseLayer=new XRWebGLLayer(r,t,{framebufferScaleFactor:i}),r.requestFrameOfReference(o).then(function(t){a=t,e.setFramebuffer(r.baseLayer.framebuffer),y.setContext(r),y.start()}),
//
l=r.getInputSources(),r.addEventListener("inputsourceschange",function(){l=r.getInputSources(),console.log(l);for(var e=0;e<c.length;e++){c[e].userData.inputSource=l[e]}}))},this.getCamera=function(e){if(h()){var t=e.parent,n=f.cameras;g(f,t);for(var r=0;r<n.length;r++)g(n[r],t);
// update camera and its children
e.matrixWorld.copy(f.matrixWorld);for(var i=e.children,a=(r=0,i.length);r<a;r++)i[r].updateMatrixWorld(!0);return aa(f,u,d),f}return e},this.isPresenting=h;
// Animation Loop
var v=null;var y=new pn;y.setAnimationLoop(function(e,t){if(null!==(s=t.getDevicePose(a)))for(var n=r.baseLayer,i=t.views,o=0;o<i.length;o++){var h=i[o],u=n.getViewport(h),d=s.getViewMatrix(h),p=f.cameras[o];p.matrix.fromArray(d).getInverse(p.matrix),p.projectionMatrix.fromArray(h.projectionMatrix),p.viewport.set(u.x,u.y,u.width,u.height),0===o&&f.matrix.copy(p.matrix)}
//
for(o=0;o<c.length;o++){var m=c[o],g=l[o];if(g){var y=t.getInputPose(g,a);if(null!==y){"targetRay"in y?m.matrix.elements=y.targetRay.transformMatrix:"pointerMatrix"in y&&(
// DEPRECATED
m.matrix.elements=y.pointerMatrix),m.matrix.decompose(m.position,m.rotation,m.scale),m.visible=!0;continue}}m.visible=!1}v&&v(e)}),this.setAnimationLoop=function(e){v=e},this.dispose=function(){},
// DEPRECATED
this.getStandingMatrix=function(){return console.warn("THREE.WebXRManager: getStandingMatrix() is no longer needed."),new tn},this.submitFrame=function(){}}
/**
   * @author supereggbert / http://www.paulbrunt.co.uk/
   * @author mrdoob / http://mrdoob.com/
   * @author alteredq / http://alteredqualia.com/
   * @author szimek / https://github.com/szimek/
   * @author tschw
   */function ca(e){console.log("THREE.WebGLRenderer",s);var t=void 0!==(e=e||{}).canvas?e.canvas:document.createElementNS("http://www.w3.org/1999/xhtml","canvas"),n=void 0!==e.context?e.context:null,r=void 0!==e.alpha&&e.alpha,i=void 0===e.depth||e.depth,a=void 0===e.stencil||e.stencil,o=void 0!==e.antialias&&e.antialias,c=void 0===e.premultipliedAlpha||e.premultipliedAlpha,l=void 0!==e.preserveDrawingBuffer&&e.preserveDrawingBuffer,h=void 0!==e.powerPreference?e.powerPreference:"default",u=null,d=null;
// public properties
this.domElement=t,this.context=null,
// Debug configuration container
this.debug={
/**
  		 * Enables error checking and reporting when shader programs are being compiled
  		 * @type {boolean}
  		 */
checkShaderErrors:!1},
// clearing
this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,
// scene graph
this.sortObjects=!0,
// user-defined clipping
this.clippingPlanes=[],this.localClippingEnabled=!1,
// physically based shading
this.gammaFactor=2,// for backwards compatibility
this.gammaInput=!1,this.gammaOutput=!1,
// physical lights
this.physicallyCorrectLights=!1,
// tone mapping
this.toneMapping=ee,this.toneMappingExposure=1,this.toneMappingWhitePoint=1,
// morphs
this.maxMorphTargets=8,this.maxMorphNormals=4;
// internal properties
var f,p,g,v,y,b,x,w,_,M,E,S,T,A,L,P,C,R,O=this,N=!1,
// internal state cache
I=null,D=null,z=null,k=-1,
// geometry and program caching
B={geometry:null,program:null,wireframe:!1},U=null,F=null,G=new qt,j=new qt,H=null,
//
V=t.width,W=t.height,q=1,X=new qt(0,0,V,W),Y=new qt(0,0,V,W),Z=!1,
// frustum
J=new en,
// clipping
Q=new vr,K=!1,$=!1,
// camera matrices cache
te=new tn,ne=new Ct;function re(){return null===D?q:1}
// initialize
try{var ie={alpha:r,depth:i,stencil:a,antialias:o,premultipliedAlpha:c,preserveDrawingBuffer:l,powerPreference:h};
// event listeners must be registered before WebGL context is created, see #12753
if(t.addEventListener("webglcontextlost",ce,!1),t.addEventListener("webglcontextrestored",le,!1),null===(f=n||t.getContext("webgl",ie)||t.getContext("experimental-webgl",ie)))throw null!==t.getContext("webgl")?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.");
// Some experimental-webgl implementations do not have getShaderPrecisionFormat
void 0===f.getShaderPrecisionFormat&&(f.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(e){throw console.error("THREE.WebGLRenderer: "+e.message),e}function ae(){p=new yr(f),(g=new gr(f,p,e)).isWebGL2||(p.get("WEBGL_depth_texture"),p.get("OES_texture_float"),p.get("OES_texture_half_float"),p.get("OES_texture_half_float_linear"),p.get("OES_standard_derivatives"),p.get("OES_element_index_uint"),p.get("ANGLE_instanced_arrays")),p.get("OES_texture_float_linear"),R=new qi(f,p,g),(v=new Vi(f,p,R,g)).scissor(j.copy(Y).multiplyScalar(q)),v.viewport(G.copy(X).multiplyScalar(q)),y=new wr(f),b=new Ri,x=new Wi(f,p,v,b,g,R,y),w=new mn(f),_=new br(f,w,y),M=new Er(_,y),L=new Mr(f),E=new Ci(O,p,g,x),S=new Di,T=new Fi,A=new pr(O,v,M,c),P=new mr(f,p,y,g),C=new xr(f,p,y,g),y.programs=E.programs,O.context=f,O.capabilities=g,O.extensions=p,O.properties=b,O.renderLists=S,O.state=v,O.info=y}ae();
// vr
var oe="undefined"!=typeof navigator&&"xr"in navigator?new sa(O):new oa(O);this.vr=oe;
// shadow map
var se=new Hi(O,M,g.maxTextureSize);
// Events
function ce(e){e.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),N=!0}function le(){console.log("THREE.WebGLRenderer: Context Restored."),N=!1,ae()}function he(e){var t=e.target;t.removeEventListener("dispose",he),
// Buffer deallocation
function(e){ue(e),b.remove(e)}(t)}function ue(e){var t=b.get(e).program;e.program=void 0,void 0!==t&&E.releaseProgram(t)}
// Buffer rendering
this.shadowMap=se,
// API
this.getContext=function(){return f},this.getContextAttributes=function(){return f.getContextAttributes()},this.forceContextLoss=function(){var e=p.get("WEBGL_lose_context");e&&e.loseContext()},this.forceContextRestore=function(){var e=p.get("WEBGL_lose_context");e&&e.restoreContext()},this.getPixelRatio=function(){return q},this.setPixelRatio=function(e){void 0!==e&&(q=e,this.setSize(V,W,!1))},this.getSize=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),e=new Lt),e.set(V,W)},this.setSize=function(e,n,r){oe.isPresenting()?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(V=e,W=n,t.width=e*q,t.height=n*q,!1!==r&&(t.style.width=e+"px",t.style.height=n+"px"),this.setViewport(0,0,e,n))},this.getDrawingBufferSize=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),e=new Lt),e.set(V*q,W*q)},this.setDrawingBufferSize=function(e,n,r){V=e,W=n,q=r,t.width=e*r,t.height=n*r,this.setViewport(0,0,e,n)},this.getCurrentViewport=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),e=new qt),e.copy(G)},this.getViewport=function(e){return e.copy(X)},this.setViewport=function(e,t,n,r){e.isVector4?X.set(e.x,e.y,e.z,e.w):X.set(e,t,n,r),v.viewport(G.copy(X).multiplyScalar(q))},this.getScissor=function(e){return e.copy(Y)},this.setScissor=function(e,t,n,r){e.isVector4?Y.set(e.x,e.y,e.z,e.w):Y.set(e,t,n,r),v.scissor(j.copy(Y).multiplyScalar(q))},this.getScissorTest=function(){return Z},this.setScissorTest=function(e){v.setScissorTest(Z=e)},
// Clearing
this.getClearColor=function(){return A.getClearColor()},this.setClearColor=function(){A.setClearColor.apply(A,arguments)},this.getClearAlpha=function(){return A.getClearAlpha()},this.setClearAlpha=function(){A.setClearAlpha.apply(A,arguments)},this.clear=function(e,t,n){var r=0;(void 0===e||e)&&(r|=16384),(void 0===t||t)&&(r|=256),(void 0===n||n)&&(r|=1024),f.clear(r)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},
//
this.dispose=function(){t.removeEventListener("webglcontextlost",ce,!1),t.removeEventListener("webglcontextrestored",le,!1),S.dispose(),T.dispose(),b.dispose(),M.dispose(),oe.dispose(),fe.stop()},this.renderBufferImmediate=function(e,t){v.initAttributes();var n=b.get(e);e.hasPositions&&!n.position&&(n.position=f.createBuffer()),e.hasNormals&&!n.normal&&(n.normal=f.createBuffer()),e.hasUvs&&!n.uv&&(n.uv=f.createBuffer()),e.hasColors&&!n.color&&(n.color=f.createBuffer());var r=t.getAttributes();e.hasPositions&&(f.bindBuffer(34962,n.position),f.bufferData(34962,e.positionArray,35048),v.enableAttribute(r.position),f.vertexAttribPointer(r.position,3,5126,!1,0,0)),e.hasNormals&&(f.bindBuffer(34962,n.normal),f.bufferData(34962,e.normalArray,35048),v.enableAttribute(r.normal),f.vertexAttribPointer(r.normal,3,5126,!1,0,0)),e.hasUvs&&(f.bindBuffer(34962,n.uv),f.bufferData(34962,e.uvArray,35048),v.enableAttribute(r.uv),f.vertexAttribPointer(r.uv,2,5126,!1,0,0)),e.hasColors&&(f.bindBuffer(34962,n.color),f.bufferData(34962,e.colorArray,35048),v.enableAttribute(r.color),f.vertexAttribPointer(r.color,3,5126,!1,0,0)),v.disableUnusedAttributes(),f.drawArrays(4,0,e.count),e.count=0},this.renderBufferDirect=function(e,t,n,r,i,a){var o=i.isMesh&&i.matrixWorld.determinant()<0;v.setMaterial(r,o);var s=ve(e,t,r,i),c=!1;B.geometry===n.id&&B.program===s.id&&B.wireframe===(!0===r.wireframe)||(B.geometry=n.id,B.program=s.id,B.wireframe=!0===r.wireframe,c=!0),i.morphTargetInfluences&&(L.update(i,n,r,s),c=!0);
//
var l,h=n.index,u=n.attributes.position,d=1;!0===r.wireframe&&(h=_.getWireframeAttribute(n),d=2);var m=P;null!==h&&(l=w.get(h),(m=C).setIndex(l)),c&&(!function(e,t,n){if(n&&n.isInstancedBufferGeometry&&!g.isWebGL2&&null===p.get("ANGLE_instanced_arrays"))return void console.error("THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");v.initAttributes();var r=n.attributes,i=t.getAttributes(),a=e.defaultAttributeValues;for(var o in i){var s=i[o];if(s>=0){var c=r[o];if(void 0!==c){var l=c.normalized,h=c.itemSize,u=w.get(c);
// TODO Attribute may not be available on context restore
if(void 0===u)continue;var d=u.buffer,m=u.type,y=u.bytesPerElement;if(c.isInterleavedBufferAttribute){var b=c.data,x=b.stride,_=c.offset;b&&b.isInstancedInterleavedBuffer?(v.enableAttributeAndDivisor(s,b.meshPerAttribute),void 0===n.maxInstancedCount&&(n.maxInstancedCount=b.meshPerAttribute*b.count)):v.enableAttribute(s),f.bindBuffer(34962,d),f.vertexAttribPointer(s,h,m,l,x*y,_*y)}else c.isInstancedBufferAttribute?(v.enableAttributeAndDivisor(s,c.meshPerAttribute),void 0===n.maxInstancedCount&&(n.maxInstancedCount=c.meshPerAttribute*c.count)):v.enableAttribute(s),f.bindBuffer(34962,d),f.vertexAttribPointer(s,h,m,l,0,0)}else if(void 0!==a){var M=a[o];if(void 0!==M)switch(M.length){case 2:f.vertexAttrib2fv(s,M);break;case 3:f.vertexAttrib3fv(s,M);break;case 4:f.vertexAttrib4fv(s,M);break;default:f.vertexAttrib1fv(s,M)}}}}v.disableUnusedAttributes()}
// Compile
(r,s,n),null!==h&&f.bindBuffer(34963,l.buffer));
//
var y=1/0;null!==h?y=h.count:void 0!==u&&(y=u.count);var b=n.drawRange.start*d,x=n.drawRange.count*d,M=null!==a?a.start*d:0,E=null!==a?a.count*d:1/0,S=Math.max(b,M),T=Math.min(y,b+x,M+E)-1,A=Math.max(0,T-S+1);if(0!==A){
//
if(i.isMesh)if(!0===r.wireframe)v.setLineWidth(r.wireframeLinewidth*re()),m.setMode(1);else switch(i.drawMode){case ft:m.setMode(4);break;case pt:m.setMode(5);break;case mt:m.setMode(6)}else if(i.isLine){var R=r.linewidth;void 0===R&&(R=1),// Not using Line*Material
v.setLineWidth(R*re()),i.isLineSegments?m.setMode(1):i.isLineLoop?m.setMode(2):m.setMode(3)}else i.isPoints?m.setMode(0):i.isSprite&&m.setMode(4);n&&n.isInstancedBufferGeometry?n.maxInstancedCount>0&&m.renderInstances(n,S,A):m.render(S,A)}},this.compile=function(e,t){(d=T.get(e,t)).init(),e.traverse(function(e){e.isLight&&(d.pushLight(e),e.castShadow&&d.pushShadow(e))}),d.setupLights(t),e.traverse(function(t){if(t.material)if(Array.isArray(t.material))for(var n=0;n<t.material.length;n++)ge(t.material[n],e.fog,t);else ge(t.material,e.fog,t)})};
// Animation Loop
var de=null;var fe=new pn;function pe(e,t,n,r){for(var i=0,a=e.length;i<a;i++){var o=e[i],s=o.object,c=o.geometry,l=void 0===r?o.material:r,h=o.group;if(n.isArrayCamera){F=n;for(var u=n.cameras,f=0,p=u.length;f<p;f++){var m=u[f];if(s.layers.test(m.layers)){if("viewport"in m)// XR
v.viewport(G.copy(m.viewport));else{var g=m.bounds,y=g.x*V,b=g.y*W,x=g.z*V,w=g.w*W;v.viewport(G.set(y,b,x,w).multiplyScalar(q))}d.setupLights(m),me(s,t,m,c,l,h)}}}else F=null,me(s,t,n,c,l,h)}}function me(e,t,n,r,i,a){if(e.onBeforeRender(O,t,n,r,i,a),d=T.get(t,F||n),e.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),e.isImmediateRenderObject){v.setMaterial(i);var o=ve(n,t.fog,i,e);B.geometry=null,B.program=null,B.wireframe=!1,function(e,t){e.render(function(e){O.renderBufferImmediate(e,t)})}(e,o)}else O.renderBufferDirect(n,t.fog,r,i,e,a);e.onAfterRender(O,t,n,r,i,a),d=T.get(t,F||n)}function ge(e,t,n){var r=b.get(e),i=d.state.lights,a=d.state.shadowsArray,o=r.lightsHash,s=i.state.hash,c=E.getParameters(e,i.state,a,t,Q.numPlanes,Q.numIntersection,n),l=E.getProgramCode(e,c),h=r.program,u=!0;if(void 0===h)
// new material
e.addEventListener("dispose",he);else if(h.code!==l)
// changed glsl or parameters
ue(e);else if(o.stateID!==s.stateID||o.directionalLength!==s.directionalLength||o.pointLength!==s.pointLength||o.spotLength!==s.spotLength||o.rectAreaLength!==s.rectAreaLength||o.hemiLength!==s.hemiLength||o.shadowsLength!==s.shadowsLength)o.stateID=s.stateID,o.directionalLength=s.directionalLength,o.pointLength=s.pointLength,o.spotLength=s.spotLength,o.rectAreaLength=s.rectAreaLength,o.hemiLength=s.hemiLength,o.shadowsLength=s.shadowsLength,u=!1;else{if(void 0!==c.shaderID)
// same glsl and uniform list
return;
// only rebuild uniform list
u=!1}if(u){if(c.shaderID){var f=fn[c.shaderID];r.shader={name:e.type,uniforms:rn(f.uniforms),vertexShader:f.vertexShader,fragmentShader:f.fragmentShader}}else r.shader={name:e.type,uniforms:e.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader};e.onBeforeCompile(r.shader,O),
// Computing code again as onBeforeCompile may have changed the shaders
l=E.getProgramCode(e,c),h=E.acquireProgram(e,r.shader,c,l),r.program=h,e.program=h}var p=h.getAttributes();if(e.morphTargets){e.numSupportedMorphTargets=0;for(var m=0;m<O.maxMorphTargets;m++)p["morphTarget"+m]>=0&&e.numSupportedMorphTargets++}if(e.morphNormals){e.numSupportedMorphNormals=0;for(m=0;m<O.maxMorphNormals;m++)p["morphNormal"+m]>=0&&e.numSupportedMorphNormals++}var g=r.shader.uniforms;(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(r.numClippingPlanes=Q.numPlanes,r.numIntersection=Q.numIntersection,g.clippingPlanes=Q.uniform),r.fog=t,
// store the light setup it was created for
void 0===o&&(r.lightsHash=o={}),o.stateID=s.stateID,o.directionalLength=s.directionalLength,o.pointLength=s.pointLength,o.spotLength=s.spotLength,o.rectAreaLength=s.rectAreaLength,o.hemiLength=s.hemiLength,o.shadowsLength=s.shadowsLength,e.lights&&(
// wire up the material to this renderer's lighting state
g.ambientLightColor.value=i.state.ambient,g.lightProbe.value=i.state.probe,g.directionalLights.value=i.state.directional,g.spotLights.value=i.state.spot,g.rectAreaLights.value=i.state.rectArea,g.pointLights.value=i.state.point,g.hemisphereLights.value=i.state.hemi,g.directionalShadowMap.value=i.state.directionalShadowMap,g.directionalShadowMatrix.value=i.state.directionalShadowMatrix,g.spotShadowMap.value=i.state.spotShadowMap,g.spotShadowMatrix.value=i.state.spotShadowMatrix,g.pointShadowMap.value=i.state.pointShadowMap,g.pointShadowMatrix.value=i.state.pointShadowMatrix);var v=r.program.getUniforms(),y=yi.seqWithValue(v.seq,g);r.uniformsList=y}function ve(e,t,n,r){x.resetTextureUnits();var i=b.get(n),a=d.state.lights,o=i.lightsHash,s=a.state.hash;if(K&&($||e!==U)){var c=e===U&&n.id===k;
// we might want to call this function with some ClippingGroup
// object instead of the material, once it becomes feasible
// (#8465, #8379)
Q.setState(n.clippingPlanes,n.clipIntersection,n.clipShadows,e,i,c)}!1===n.needsUpdate&&(void 0===i.program?n.needsUpdate=!0:n.fog&&i.fog!==t?n.needsUpdate=!0:(!n.lights||o.stateID===s.stateID&&o.directionalLength===s.directionalLength&&o.pointLength===s.pointLength&&o.spotLength===s.spotLength&&o.rectAreaLength===s.rectAreaLength&&o.hemiLength===s.hemiLength&&o.shadowsLength===s.shadowsLength)&&(void 0===i.numClippingPlanes||i.numClippingPlanes===Q.numPlanes&&i.numIntersection===Q.numIntersection)||(n.needsUpdate=!0)),n.needsUpdate&&(ge(n,t,r),n.needsUpdate=!1);var l,h,u=!1,p=!1,y=!1,w=i.program,_=w.getUniforms(),M=i.shader.uniforms;if(v.useProgram(w.program)&&(u=!0,p=!0,y=!0),n.id!==k&&(k=n.id,p=!0),u||U!==e){
// load material specific uniforms
// (shader material also gets them for the sake of genericity)
if(_.setValue(f,"projectionMatrix",e.projectionMatrix),g.logarithmicDepthBuffer&&_.setValue(f,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2)),U!==e&&(U=e,
// lighting uniforms depend on the camera so enforce an update
// now, in case this material supports lights - or later, when
// the next material that does gets activated:
p=!0,// set to true on material change
y=!0),n.isShaderMaterial||n.isMeshPhongMaterial||n.isMeshStandardMaterial||n.envMap){var E=_.map.cameraPosition;void 0!==E&&E.setValue(f,ne.setFromMatrixPosition(e.matrixWorld))}(n.isMeshPhongMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial||n.skinning)&&_.setValue(f,"viewMatrix",e.matrixWorldInverse)}
// skinning uniforms must be set even if material didn't change
// auto-setting of texture unit for bone texture must go before other textures
// not sure why, but otherwise weird things happen
if(n.skinning){_.setOptional(f,r,"bindMatrix"),_.setOptional(f,r,"bindMatrixInverse");var S=r.skeleton;if(S){var T=S.bones;if(g.floatVertexTextures){if(void 0===S.boneTexture){
// layout (1 matrix = 4 pixels)
//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)
//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)
//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)
//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)
//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)
var A=Math.sqrt(4*T.length);// 4 pixels needed for 1 matrix
A=At.ceilPowerOfTwo(A),A=Math.max(A,4);var L=new Float32Array(A*A*4);// 4 floats per RGBA pixel
L.set(S.boneMatrices);// copy current values
var P=new Jt(L,A,A,De,Ae);P.needsUpdate=!0,S.boneMatrices=L,S.boneTexture=P,S.boneTextureSize=A}_.setValue(f,"boneTexture",S.boneTexture,x),_.setValue(f,"boneTextureSize",S.boneTextureSize)}else _.setOptional(f,S,"boneMatrices")}}return p&&(_.setValue(f,"toneMappingExposure",O.toneMappingExposure),_.setValue(f,"toneMappingWhitePoint",O.toneMappingWhitePoint),n.lights&&(
// the current material requires lighting info
// note: all lighting uniforms are always set correctly
// they simply reference the renderer's state for their
// values
//
// use the current material's .needsUpdate flags to set
// the GL state when required
h=y,(l=M).ambientLightColor.needsUpdate=h,l.lightProbe.needsUpdate=h,l.directionalLights.needsUpdate=h,l.pointLights.needsUpdate=h,l.spotLights.needsUpdate=h,l.rectAreaLights.needsUpdate=h,l.hemisphereLights.needsUpdate=h),
// refresh uniforms common to several materials
t&&n.fog&&function(e,t){e.fogColor.value.copy(t.color),t.isFog?(e.fogNear.value=t.near,e.fogFar.value=t.far):t.isFogExp2&&(e.fogDensity.value=t.density)}(M,t),n.isMeshBasicMaterial?ye(M,n):n.isMeshLambertMaterial?(ye(M,n),function(e,t){t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap)}(M,n)):n.isMeshPhongMaterial?(ye(M,n),n.isMeshToonMaterial?function(e,t){be(e,t),t.gradientMap&&(e.gradientMap.value=t.gradientMap)}(M,n):be(M,n)):n.isMeshStandardMaterial?(ye(M,n),n.isMeshPhysicalMaterial?function(e,t){xe(e,t),e.reflectivity.value=t.reflectivity,// also part of uniforms common
e.clearCoat.value=t.clearCoat,e.clearCoatRoughness.value=t.clearCoatRoughness}(M,n):xe(M,n)):n.isMeshMatcapMaterial?(ye(M,n),function(e,t){t.matcap&&(e.matcap.value=t.matcap);t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===m&&(e.bumpScale.value*=-1));t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===m&&e.normalScale.value.negate());t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(M,n)):n.isMeshDepthMaterial?(ye(M,n),function(e,t){t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(M,n)):n.isMeshDistanceMaterial?(ye(M,n),function(e,t){t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias);e.referencePosition.value.copy(t.referencePosition),e.nearDistance.value=t.nearDistance,e.farDistance.value=t.farDistance}(M,n)):n.isMeshNormalMaterial?(ye(M,n),function(e,t){t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===m&&(e.bumpScale.value*=-1));t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===m&&e.normalScale.value.negate());t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}
// If uniforms are marked as clean, they don't need to be loaded to the GPU.
(M,n)):n.isLineBasicMaterial?(function(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity}(M,n),n.isLineDashedMaterial&&function(e,t){e.dashSize.value=t.dashSize,e.totalSize.value=t.dashSize+t.gapSize,e.scale.value=t.scale}(M,n)):n.isPointsMaterial?function(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.size.value=t.size*q,e.scale.value=.5*W,e.map.value=t.map,null!==t.map&&(!0===t.map.matrixAutoUpdate&&t.map.updateMatrix(),e.uvTransform.value.copy(t.map.matrix))}(M,n):n.isSpriteMaterial?function(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.rotation.value=t.rotation,e.map.value=t.map,null!==t.map&&(!0===t.map.matrixAutoUpdate&&t.map.updateMatrix(),e.uvTransform.value.copy(t.map.matrix))}(M,n):n.isShadowMaterial&&(M.color.value.copy(n.color),M.opacity.value=n.opacity),
// RectAreaLight Texture
// TODO (mrdoob): Find a nicer implementation
void 0!==M.ltc_1&&(M.ltc_1.value=dn.LTC_1),void 0!==M.ltc_2&&(M.ltc_2.value=dn.LTC_2),yi.upload(f,i.uniformsList,M,x)),n.isShaderMaterial&&!0===n.uniformsNeedUpdate&&(yi.upload(f,i.uniformsList,M,x),n.uniformsNeedUpdate=!1),n.isSpriteMaterial&&_.setValue(f,"center",r.center),
// common matrices
_.setValue(f,"modelViewMatrix",r.modelViewMatrix),_.setValue(f,"normalMatrix",r.normalMatrix),_.setValue(f,"modelMatrix",r.matrixWorld),w}
// Uniforms (refresh uniforms objects)
function ye(e,t){
// uv repeat and offset setting priorities
// 1. color map
// 2. specular map
// 3. normal map
// 4. bump map
// 5. alpha map
// 6. emissive map
var n;e.opacity.value=t.opacity,t.color&&e.diffuse.value.copy(t.color),t.emissive&&e.emissive.value.copy(t.emissive).multiplyScalar(t.emissiveIntensity),t.map&&(e.map.value=t.map),t.alphaMap&&(e.alphaMap.value=t.alphaMap),t.specularMap&&(e.specularMap.value=t.specularMap),t.envMap&&(e.envMap.value=t.envMap,
// don't flip CubeTexture envMaps, flip everything else:
//  WebGLRenderTargetCube will be flipped for backwards compatibility
//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture
// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future
e.flipEnvMap.value=t.envMap.isCubeTexture?-1:1,e.reflectivity.value=t.reflectivity,e.refractionRatio.value=t.refractionRatio,e.maxMipLevel.value=b.get(t.envMap).__maxMipLevel),t.lightMap&&(e.lightMap.value=t.lightMap,e.lightMapIntensity.value=t.lightMapIntensity),t.aoMap&&(e.aoMap.value=t.aoMap,e.aoMapIntensity.value=t.aoMapIntensity),t.map?n=t.map:t.specularMap?n=t.specularMap:t.displacementMap?n=t.displacementMap:t.normalMap?n=t.normalMap:t.bumpMap?n=t.bumpMap:t.roughnessMap?n=t.roughnessMap:t.metalnessMap?n=t.metalnessMap:t.alphaMap?n=t.alphaMap:t.emissiveMap&&(n=t.emissiveMap),void 0!==n&&(
// backwards compatibility
n.isWebGLRenderTarget&&(n=n.texture),!0===n.matrixAutoUpdate&&n.updateMatrix(),e.uvTransform.value.copy(n.matrix))}function be(e,t){e.specular.value.copy(t.specular),e.shininess.value=Math.max(t.shininess,1e-4),// to prevent pow( 0.0, 0.0 )
t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===m&&(e.bumpScale.value*=-1)),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===m&&e.normalScale.value.negate()),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}function xe(e,t){e.roughness.value=t.roughness,e.metalness.value=t.metalness,t.roughnessMap&&(e.roughnessMap.value=t.roughnessMap),t.metalnessMap&&(e.metalnessMap.value=t.metalnessMap),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===m&&(e.bumpScale.value*=-1)),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===m&&e.normalScale.value.negate()),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias),t.envMap&&(
//uniforms.envMap.value = material.envMap; // part of uniforms common
e.envMapIntensity.value=t.envMapIntensity)}fe.setAnimationLoop(function(e){oe.isPresenting()||de&&de(e)}),"undefined"!=typeof window&&fe.setContext(window),this.setAnimationLoop=function(e){de=e,oe.setAnimationLoop(e),fe.start()},
// Rendering
this.render=function(e,t){var n,r;if(void 0!==arguments[2]&&(console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),n=arguments[2]),void 0!==arguments[3]&&(console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),r=arguments[3]),t&&t.isCamera){if(!N){
// reset caching for this frame
B.geometry=null,B.program=null,B.wireframe=!1,k=-1,U=null,
// update scene graph
!0===e.autoUpdate&&e.updateMatrixWorld(),
// update camera matrices and frustum
null===t.parent&&t.updateMatrixWorld(),oe.enabled&&(t=oe.getCamera(t)),(
//
d=T.get(e,t)).init(),e.onBeforeRender(O,e,t,n||D),te.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),J.setFromMatrix(te),$=this.localClippingEnabled,K=Q.init(this.clippingPlanes,$,t),(u=S.get(e,t)).init(),function e(t,n,r,i){if(!1===t.visible)return;var a=t.layers.test(n.layers);if(a)if(t.isGroup)r=t.renderOrder;else if(t.isLight)d.pushLight(t),t.castShadow&&d.pushShadow(t);else if(t.isSprite){if(!t.frustumCulled||J.intersectsSprite(t)){i&&ne.setFromMatrixPosition(t.matrixWorld).applyMatrix4(te);var o=M.update(t),s=t.material;s.visible&&u.push(t,o,s,r,ne.z,null)}}else if(t.isImmediateRenderObject)i&&ne.setFromMatrixPosition(t.matrixWorld).applyMatrix4(te),u.push(t,null,t.material,r,ne.z,null);else if((t.isMesh||t.isLine||t.isPoints)&&(t.isSkinnedMesh&&t.skeleton.update(),!t.frustumCulled||J.intersectsObject(t))){i&&ne.setFromMatrixPosition(t.matrixWorld).applyMatrix4(te);var o=M.update(t),s=t.material;if(Array.isArray(s))for(var c=o.groups,l=0,h=c.length;l<h;l++){var f=c[l],p=s[f.materialIndex];p&&p.visible&&u.push(t,o,p,r,ne.z,f)}else s.visible&&u.push(t,o,s,r,ne.z,null)}var m=t.children;for(var l=0,h=m.length;l<h;l++)e(m[l],n,r,i)}(e,t,0,O.sortObjects),!0===O.sortObjects&&u.sort(),
//
K&&Q.beginShadows();var i=d.state.shadowsArray;se.render(i,e,t),d.setupLights(t),K&&Q.endShadows(),
//
this.info.autoReset&&this.info.reset(),void 0!==n&&this.setRenderTarget(n),
//
A.render(u,e,t,r);
// render scene
var a=u.opaque,o=u.transparent;if(e.overrideMaterial){var s=e.overrideMaterial;a.length&&pe(a,e,t,s),o.length&&pe(o,e,t,s)}else
// opaque pass (front-to-back order)
a.length&&pe(a,e,t),
// transparent pass (back-to-front order)
o.length&&pe(o,e,t);
//
e.onAfterRender(O,e,t),
//
null!==D&&(
// Generate mipmap if we're using any kind of mipmap filtering
x.updateRenderTargetMipmap(D),
// resolve multisample renderbuffers to a single-sample texture if necessary
x.updateMultisampleRenderTarget(D)),
// Ensure depth buffer writing is enabled so it can be cleared on next render
v.buffers.depth.setTest(!0),v.buffers.depth.setMask(!0),v.buffers.color.setMask(!0),v.setPolygonOffset(!1),oe.enabled&&oe.submitFrame(),
// _gl.finish();
u=null,d=null}}else console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.")},
//
this.setFramebuffer=function(e){I=e},this.getRenderTarget=function(){return D},this.setRenderTarget=function(e,t,n){D=e,e&&void 0===b.get(e).__webglFramebuffer&&x.setupRenderTarget(e);var r=I,i=!1;if(e){var a=b.get(e).__webglFramebuffer;e.isWebGLRenderTargetCube?(r=a[t||0],i=!0):r=e.isWebGLMultisampleRenderTarget?b.get(e).__webglMultisampledFramebuffer:a,G.copy(e.viewport),j.copy(e.scissor),H=e.scissorTest}else G.copy(X).multiplyScalar(q),j.copy(Y).multiplyScalar(q),H=Z;if(z!==r&&(f.bindFramebuffer(36160,r),z=r),v.viewport(G),v.scissor(j),v.setScissorTest(H),i){var o=b.get(e.texture);f.framebufferTexture2D(36160,36064,34069+(t||0),o.__webglTexture,n||0)}},this.readRenderTargetPixels=function(e,t,n,r,i,a){if(e&&e.isWebGLRenderTarget){var o=b.get(e).__webglFramebuffer;if(o){var s=!1;o!==z&&(f.bindFramebuffer(36160,o),s=!0);try{var c=e.texture,l=c.format,h=c.type;if(l!==De&&R.convert(l)!==f.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");if(!(h===we||R.convert(h)===f.getParameter(35738)||h===Ae&&(g.isWebGL2||p.get("OES_texture_float")||p.get("WEBGL_color_buffer_float"))||h===Le&&(g.isWebGL2?p.get("EXT_color_buffer_float"):p.get("EXT_color_buffer_half_float"))))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");36053===f.checkFramebufferStatus(36160)?
// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)
t>=0&&t<=e.width-r&&n>=0&&n<=e.height-i&&f.readPixels(t,n,r,i,R.convert(l),R.convert(h),a):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{s&&f.bindFramebuffer(36160,z)}}}else console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.")},this.copyFramebufferToTexture=function(e,t,n){var r=t.image.width,i=t.image.height,a=R.convert(t.format);x.setTexture2D(t,0),f.copyTexImage2D(3553,n||0,a,e.x,e.y,r,i,0)},this.copyTextureToTexture=function(e,t,n,r){var i=t.image.width,a=t.image.height,o=R.convert(n.format),s=R.convert(n.type);x.setTexture2D(n,0),t.isDataTexture?f.texSubImage2D(3553,r||0,e.x,e.y,i,a,o,s,t.image.data):f.texSubImage2D(3553,r||0,e.x,e.y,o,s,t.image)}}
/**
   * @author mrdoob / http://mrdoob.com/
   * @author alteredq / http://alteredqualia.com/
   */function la(e,t){this.name="",this.color=new hn(e),this.density=void 0!==t?t:25e-5}
/**
   * @author mrdoob / http://mrdoob.com/
   * @author alteredq / http://alteredqualia.com/
   */
function ha(e,t,n){this.name="",this.color=new hn(e),this.near=void 0!==t?t:1,this.far=void 0!==n?n:1e3}
/**
   * @author mrdoob / http://mrdoob.com/
   */
function ua(){En.call(this),this.type="Scene",this.background=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0}
/**
   * @author benaadams / https://twitter.com/ben_a_adams
   */
function da(e,t){this.array=e,this.stride=t,this.count=void 0!==e?e.length/t:0,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.version=0}
/**
   * @author benaadams / https://twitter.com/ben_a_adams
   */
function fa(e,t,n,r){this.data=e,this.itemSize=t,this.offset=n,this.normalized=!0===r}
/**
   * @author alteredq / http://alteredqualia.com/
   *
   * parameters = {
   *  color: <hex>,
   *  map: new THREE.Texture( <Image> ),
   *  rotation: <float>,
   *  sizeAttenuation: <bool>
   * }
   */
function pa(e){Yn.call(this),this.type="SpriteMaterial",this.color=new hn(16777215),this.map=null,this.rotation=0,this.sizeAttenuation=!0,this.lights=!1,this.transparent=!0,this.setValues(e)}function ma(e){if(En.call(this),this.type="Sprite",void 0===Qi){Qi=new jn;var t=new da(new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),5);Qi.setIndex([0,1,2,0,2,3]),Qi.addAttribute("position",new fa(t,3,0,!1)),Qi.addAttribute("uv",new fa(t,2,3,!1))}this.geometry=Qi,this.material=void 0!==e?e:new pa,this.center=new Lt(.5,.5)}
/**
   * @author mikael emtinger / http://gomo.se/
   * @author alteredq / http://alteredqualia.com/
   * @author mrdoob / http://mrdoob.com/
   */
function ga(){En.call(this),this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}})}
/**
   * @author mikael emtinger / http://gomo.se/
   * @author alteredq / http://alteredqualia.com/
   * @author ikerr / http://verold.com
   */
function va(e,t){e&&e.isGeometry&&console.error("THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead."),fr.call(this,e,t),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new tn,this.bindMatrixInverse=new tn}
/**
   * @author mikael emtinger / http://gomo.se/
   * @author alteredq / http://alteredqualia.com/
   * @author michael guerrero / http://realitymeltdown.com
   * @author ikerr / http://verold.com
   */
function ya(e,t){
// use the supplied bone inverses or calculate the inverses
if(
// copy the bone array
e=e||[],this.bones=e.slice(0),this.boneMatrices=new Float32Array(16*this.bones.length),void 0===t)this.calculateInverses();else if(this.bones.length===t.length)this.boneInverses=t.slice(0);else{console.warn("THREE.Skeleton boneInverses is the wrong length."),this.boneInverses=[];for(var n=0,r=this.bones.length;n<r;n++)this.boneInverses.push(new tn)}}
/**
   * @author mikael emtinger / http://gomo.se/
   * @author alteredq / http://alteredqualia.com/
   * @author ikerr / http://verold.com
   */
function ba(){En.call(this),this.type="Bone"}
/**
   * @author mrdoob / http://mrdoob.com/
   * @author alteredq / http://alteredqualia.com/
   *
   * parameters = {
   *  color: <hex>,
   *  opacity: <float>,
   *
   *  linewidth: <float>,
   *  linecap: "round",
   *  linejoin: "round"
   * }
   */
function xa(e){Yn.call(this),this.type="LineBasicMaterial",this.color=new hn(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.lights=!1,this.setValues(e)}
/**
   * @author mrdoob / http://mrdoob.com/
   */
function wa(e,t,n){1===n&&console.error("THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead."),En.call(this),this.type="Line",this.geometry=void 0!==e?e:new jn,this.material=void 0!==t?t:new xa({color:16777215*Math.random()})}
/**
   * @author mrdoob / http://mrdoob.com/
   */
function _a(e,t){wa.call(this,e,t),this.type="LineSegments"}
/**
   * @author mgreter / http://github.com/mgreter
   */
function Ma(e,t){wa.call(this,e,t),this.type="LineLoop"}
/**
   * @author mrdoob / http://mrdoob.com/
   * @author alteredq / http://alteredqualia.com/
   *
   * parameters = {
   *  color: <hex>,
   *  opacity: <float>,
   *  map: new THREE.Texture( <Image> ),
   *
   *  size: <float>,
   *  sizeAttenuation: <bool>
   *
   *  morphTargets: <bool>
   * }
   */
function Ea(e){Yn.call(this),this.type="PointsMaterial",this.color=new hn(16777215),this.map=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.lights=!1,this.setValues(e)}
/**
   * @author alteredq / http://alteredqualia.com/
   */
function Sa(e,t){En.call(this),this.type="Points",this.geometry=void 0!==e?e:new jn,this.material=void 0!==t?t:new Ea({color:16777215*Math.random()})}
/**
   * @author mrdoob / http://mrdoob.com/
   */
function Ta(e,t,n,r,i,a,o,s,c){Wt.call(this,e,t,n,r,i,a,o,s,c),this.format=void 0!==o?o:Ie,this.minFilter=void 0!==a?a:ye,this.magFilter=void 0!==i?i:ye,this.generateMipmaps=!1}
/**
   * @author alteredq / http://alteredqualia.com/
   */
function Aa(e,t,n,r,i,a,o,s,c,l,h,u){Wt.call(this,null,a,o,s,c,l,r,i,h,u),this.image={width:t,height:n},this.mipmaps=e,
// no flipping for cube textures
// (also flipping doesn't work for compressed textures )
this.flipY=!1,
// can't generate mipmaps for compressed textures
// mips must be embedded in DDS files
this.generateMipmaps=!1}
/**
   * @author mrdoob / http://mrdoob.com/
   */
function La(e,t,n,r,i,a,o,s,c){Wt.call(this,e,t,n,r,i,a,o,s,c),this.needsUpdate=!0}
/**
   * @author Matt DesLauriers / @mattdesl
   * @author atix / arthursilber.de
   */
function Pa(e,t,n,r,i,a,o,s,c,l){if((l=void 0!==l?l:Ue)!==Ue&&l!==Fe)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===n&&l===Ue&&(n=Ee),void 0===n&&l===Fe&&(n=Oe),Wt.call(this,null,r,i,a,o,s,l,n,c),this.image={width:e,height:t},this.magFilter=void 0!==o?o:me,this.minFilter=void 0!==s?s:me,this.flipY=!1,this.generateMipmaps=!1}
/**
   * @author mrdoob / http://mrdoob.com/
   * @author Mugen87 / https://github.com/Mugen87
   */
function Ca(e){jn.call(this),this.type="WireframeGeometry";
// buffer
var t,n,r,i,a,o,s,c,l,h,u=[],d=[0,0],f={},p=["a","b","c"];
// helper variables
// different logic for Geometry and BufferGeometry
if(e&&e.isGeometry){
// create a data structure that contains all edges without duplicates
var m=e.faces;for(t=0,r=m.length;t<r;t++){var g=m[t];for(n=0;n<3;n++)s=g[p[n]],c=g[p[(n+1)%3]],d[0]=Math.min(s,c),// sorting prevents duplicates
d[1]=Math.max(s,c),void 0===f[l=d[0]+","+d[1]]&&(f[l]={index1:d[0],index2:d[1]})}
// generate vertices
for(l in f)o=f[l],h=e.vertices[o.index1],u.push(h.x,h.y,h.z),h=e.vertices[o.index2],u.push(h.x,h.y,h.z)}else if(e&&e.isBufferGeometry){var v,y,b,x,w,_,M;if(h=new Ct,null!==e.index){
// create a data structure that contains all eges without duplicates
for(
// indexed BufferGeometry
v=e.attributes.position,y=e.index,0===(b=e.groups).length&&(b=[{start:0,count:y.count,materialIndex:0}]),i=0,a=b.length;i<a;++i)for(t=w=(x=b[i]).start,r=w+x.count;t<r;t+=3)for(n=0;n<3;n++)s=y.getX(t+n),c=y.getX(t+(n+1)%3),d[0]=Math.min(s,c),// sorting prevents duplicates
d[1]=Math.max(s,c),void 0===f[l=d[0]+","+d[1]]&&(f[l]={index1:d[0],index2:d[1]});
// generate vertices
for(l in f)o=f[l],h.fromBufferAttribute(v,o.index1),u.push(h.x,h.y,h.z),h.fromBufferAttribute(v,o.index2),u.push(h.x,h.y,h.z)}else for(
// non-indexed BufferGeometry
t=0,r=(v=e.attributes.position).count/3;t<r;t++)for(n=0;n<3;n++)
// three edges per triangle, an edge is represented as (index1, index2)
// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)
_=3*t+n,h.fromBufferAttribute(v,_),u.push(h.x,h.y,h.z),M=3*t+(n+1)%3,h.fromBufferAttribute(v,M),u.push(h.x,h.y,h.z)}
// build geometry
this.addAttribute("position",new kn(u,3))}
/**
   * @author zz85 / https://github.com/zz85
   * @author Mugen87 / https://github.com/Mugen87
   *
   * Parametric Surfaces Geometry
   * based on the brilliant article by @prideout http://prideout.net/blog/?p=44
   */
// ParametricGeometry
function Ra(e,t,n){Ln.call(this),this.type="ParametricGeometry",this.parameters={func:e,slices:t,stacks:n},this.fromBufferGeometry(new Oa(e,t,n)),this.mergeVertices()}
// ParametricBufferGeometry
function Oa(e,t,n){jn.call(this),this.type="ParametricBufferGeometry",this.parameters={func:e,slices:t,stacks:n};
// buffers
var r,i,a=[],o=[],s=[],c=[],l=new Ct,h=new Ct,u=new Ct,d=new Ct,f=new Ct;e.length<3&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");
// generate vertices, normals and uvs
var p=t+1;for(r=0;r<=n;r++){var m=r/n;for(i=0;i<=t;i++){var g=i/t;
// vertex
e(g,m,h),o.push(h.x,h.y,h.z),
// normal
// approximate tangent vectors via finite differences
g-1e-5>=0?(e(g-1e-5,m,u),d.subVectors(h,u)):(e(g+1e-5,m,u),d.subVectors(u,h)),m-1e-5>=0?(e(g,m-1e-5,u),f.subVectors(h,u)):(e(g,m+1e-5,u),f.subVectors(u,h)),
// cross product of tangent vectors returns surface normal
l.crossVectors(d,f).normalize(),s.push(l.x,l.y,l.z),
// uv
c.push(g,m)}}
// generate indices
for(r=0;r<n;r++)for(i=0;i<t;i++){var v=r*p+i,y=r*p+i+1,b=(r+1)*p+i+1,x=(r+1)*p+i;
// faces one and two
a.push(v,y,x),a.push(y,b,x)}
// build geometry
this.setIndex(a),this.addAttribute("position",new kn(o,3)),this.addAttribute("normal",new kn(s,3)),this.addAttribute("uv",new kn(c,2))}
/**
   * @author clockworkgeek / https://github.com/clockworkgeek
   * @author timothypratley / https://github.com/timothypratley
   * @author WestLangley / http://github.com/WestLangley
   * @author Mugen87 / https://github.com/Mugen87
   */
// PolyhedronGeometry
function Na(e,t,n,r){Ln.call(this),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:r},this.fromBufferGeometry(new Ia(e,t,n,r)),this.mergeVertices()}
// PolyhedronBufferGeometry
function Ia(e,t,n,r){jn.call(this),this.type="PolyhedronBufferGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:r},n=n||1;
// default buffer data
var i=[],a=[];function o(e,t,n,r){var i,a,o=Math.pow(2,r),c=[];
// we use this multidimensional array as a data structure for creating the subdivision
// construct all of the vertices for this subdivision
for(i=0;i<=o;i++){c[i]=[];var l=e.clone().lerp(n,i/o),h=t.clone().lerp(n,i/o),u=o-i;for(a=0;a<=u;a++)c[i][a]=0===a&&i===o?l:l.clone().lerp(h,a/u)}
// construct all of the faces
for(i=0;i<o;i++)for(a=0;a<2*(o-i)-1;a++){var d=Math.floor(a/2);a%2==0?(s(c[i][d+1]),s(c[i+1][d]),s(c[i][d])):(s(c[i][d+1]),s(c[i+1][d+1]),s(c[i+1][d]))}}function s(e){i.push(e.x,e.y,e.z)}function c(t,n){var r=3*t;n.x=e[r+0],n.y=e[r+1],n.z=e[r+2]}function l(e,t,n,r){r<0&&1===e.x&&(a[t]=e.x-1),0===n.x&&0===n.z&&(a[t]=r/2/Math.PI+.5)}
// Angle around the Y axis, counter-clockwise when looking from above.
function h(e){return Math.atan2(e.z,-e.x)}
// Angle above the XZ plane.
function u(e){return Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))}
// the subdivision creates the vertex buffer data
!
// helper functions
function(e){
// iterate over all faces and apply a subdivison with the given detail value
for(var n=new Ct,r=new Ct,i=new Ct,a=0;a<t.length;a+=3)
// get the vertices of the face
c(t[a+0],n),c(t[a+1],r),c(t[a+2],i),
// perform subdivision
o(n,r,i,e)}(r=r||0),
// all vertices should lie on a conceptual sphere with a given radius
function(e){
// iterate over the entire buffer and apply the radius to each vertex
for(var t=new Ct,n=0;n<i.length;n+=3)t.x=i[n+0],t.y=i[n+1],t.z=i[n+2],t.normalize().multiplyScalar(e),i[n+0]=t.x,i[n+1]=t.y,i[n+2]=t.z}(n),
// finally, create the uv data
function(){for(var e=new Ct,t=0;t<i.length;t+=3){e.x=i[t+0],e.y=i[t+1],e.z=i[t+2];var n=h(e)/2/Math.PI+.5,r=u(e)/Math.PI+.5;a.push(n,1-r)}(function(){for(var e=new Ct,t=new Ct,n=new Ct,r=new Ct,o=new Lt,s=new Lt,c=new Lt,u=0,d=0;u<i.length;u+=9,d+=6){e.set(i[u+0],i[u+1],i[u+2]),t.set(i[u+3],i[u+4],i[u+5]),n.set(i[u+6],i[u+7],i[u+8]),o.set(a[d+0],a[d+1]),s.set(a[d+2],a[d+3]),c.set(a[d+4],a[d+5]),r.copy(e).add(t).add(n).divideScalar(3);var f=h(r);l(o,d+0,e,f),l(s,d+2,t,f),l(c,d+4,n,f)}})(),function(){
// handle case when face straddles the seam, see #3269
for(var e=0;e<a.length;e+=6){
// uv data of a single face
var t=a[e+0],n=a[e+2],r=a[e+4],i=Math.max(t,n,r),o=Math.min(t,n,r);
// 0.9 is somewhat arbitrary
i>.9&&o<.1&&(t<.2&&(a[e+0]+=1),n<.2&&(a[e+2]+=1),r<.2&&(a[e+4]+=1))}}()}(),
// build non-indexed geometry
this.addAttribute("position",new kn(i,3)),this.addAttribute("normal",new kn(i.slice(),3)),this.addAttribute("uv",new kn(a,2)),0===r?this.computeVertexNormals():this.normalizeNormals()}
/**
   * @author timothypratley / https://github.com/timothypratley
   * @author Mugen87 / https://github.com/Mugen87
   */
// TetrahedronGeometry
function Da(e,t){Ln.call(this),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new za(e,t)),this.mergeVertices()}
// TetrahedronBufferGeometry
function za(e,t){Ia.call(this,[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],e,t),this.type="TetrahedronBufferGeometry",this.parameters={radius:e,detail:t}}
/**
   * @author timothypratley / https://github.com/timothypratley
   * @author Mugen87 / https://github.com/Mugen87
   */
// OctahedronGeometry
function ka(e,t){Ln.call(this),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new Ba(e,t)),this.mergeVertices()}
// OctahedronBufferGeometry
function Ba(e,t){Ia.call(this,[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],e,t),this.type="OctahedronBufferGeometry",this.parameters={radius:e,detail:t}}
/**
   * @author timothypratley / https://github.com/timothypratley
   * @author Mugen87 / https://github.com/Mugen87
   */
// IcosahedronGeometry
function Ua(e,t){Ln.call(this),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new Fa(e,t)),this.mergeVertices()}
// IcosahedronBufferGeometry
function Fa(e,t){var n=(1+Math.sqrt(5))/2,r=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1];Ia.call(this,r,[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],e,t),this.type="IcosahedronBufferGeometry",this.parameters={radius:e,detail:t}}
/**
   * @author Abe Pazos / https://hamoid.com
   * @author Mugen87 / https://github.com/Mugen87
   */
// DodecahedronGeometry
function Ga(e,t){Ln.call(this),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new ja(e,t)),this.mergeVertices()}
// DodecahedronBufferGeometry
function ja(e,t){var n=(1+Math.sqrt(5))/2,r=1/n,i=[
// (±1, ±1, ±1)
-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,
// (0, ±1/φ, ±φ)
0,-r,-n,0,-r,n,0,r,-n,0,r,n,
// (±1/φ, ±φ, 0)
-r,-n,0,-r,n,0,r,-n,0,r,n,0,
// (±φ, 0, ±1/φ)
-n,0,-r,n,0,-r,-n,0,r,n,0,r];Ia.call(this,i,[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],e,t),this.type="DodecahedronBufferGeometry",this.parameters={radius:e,detail:t}}
/**
   * @author oosmoxiecode / https://github.com/oosmoxiecode
   * @author WestLangley / https://github.com/WestLangley
   * @author zz85 / https://github.com/zz85
   * @author miningold / https://github.com/miningold
   * @author jonobr1 / https://github.com/jonobr1
   * @author Mugen87 / https://github.com/Mugen87
   *
   */
// TubeGeometry
function Ha(e,t,n,r,i,a){Ln.call(this),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:r,closed:i},void 0!==a&&console.warn("THREE.TubeGeometry: taper has been removed.");var o=new Va(e,t,n,r,i);
// expose internals
this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals,
// create geometry
this.fromBufferGeometry(o),this.mergeVertices()}
// TubeBufferGeometry
function Va(e,t,n,r,i){jn.call(this),this.type="TubeBufferGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:r,closed:i},t=t||64,n=n||1,r=r||8,i=i||!1;var a=e.computeFrenetFrames(t,i);
// expose internals
this.tangents=a.tangents,this.normals=a.normals,this.binormals=a.binormals;
// helper variables
var o,s,c=new Ct,l=new Ct,h=new Lt,u=new Ct,d=[],f=[],p=[],m=[];function g(i){
// we use getPointAt to sample evenly distributed points from the given path
u=e.getPointAt(i/t,u);
// retrieve corresponding normal and binormal
var o=a.normals[i],h=a.binormals[i];
// generate normals and vertices for the current segment
for(s=0;s<=r;s++){var p=s/r*Math.PI*2,m=Math.sin(p),g=-Math.cos(p);
// normal
l.x=g*o.x+m*h.x,l.y=g*o.y+m*h.y,l.z=g*o.z+m*h.z,l.normalize(),f.push(l.x,l.y,l.z),
// vertex
c.x=u.x+n*l.x,c.y=u.y+n*l.y,c.z=u.z+n*l.z,d.push(c.x,c.y,c.z)}}
// create buffer data
!
// functions
function(){for(o=0;o<t;o++)g(o);
// if the geometry is not closed, generate the last row of vertices and normals
// at the regular position on the given path
//
// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)
g(!1===i?t:0),
// uvs are generated in a separate function.
// this makes it easy compute correct values for closed geometries
function(){for(o=0;o<=t;o++)for(s=0;s<=r;s++)h.x=o/t,h.y=s/r,p.push(h.x,h.y)}(),
// finally create faces
function(){for(s=1;s<=t;s++)for(o=1;o<=r;o++){var e=(r+1)*(s-1)+(o-1),n=(r+1)*s+(o-1),i=(r+1)*s+o,a=(r+1)*(s-1)+o;
// faces
m.push(e,n,a),m.push(n,i,a)}}()}(),
// build geometry
this.setIndex(m),this.addAttribute("position",new kn(d,3)),this.addAttribute("normal",new kn(f,3)),this.addAttribute("uv",new kn(p,2))}
/**
   * @author oosmoxiecode
   * @author Mugen87 / https://github.com/Mugen87
   *
   * based on http://www.blackpawn.com/texts/pqtorus/
   */
// TorusKnotGeometry
function Wa(e,t,n,r,i,a,o){Ln.call(this),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:r,p:i,q:a},void 0!==o&&console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."),this.fromBufferGeometry(new qa(e,t,n,r,i,a)),this.mergeVertices()}
// TorusKnotBufferGeometry
function qa(e,t,n,r,i,a){jn.call(this),this.type="TorusKnotBufferGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:r,p:i,q:a},e=e||1,t=t||.4,n=Math.floor(n)||64,r=Math.floor(r)||8,i=i||2,a=a||3;
// buffers
var o,s,c=[],l=[],h=[],u=[],d=new Ct,f=new Ct,p=new Ct,m=new Ct,g=new Ct,v=new Ct,y=new Ct;
// generate vertices, normals and uvs
for(o=0;o<=n;++o){
// the radian "u" is used to calculate the position on the torus curve of the current tubular segement
var b=o/n*i*Math.PI*2;
// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.
// these points are used to create a special "coordinate space", which is necessary to calculate the correct vertex positions
for(A(b,i,a,e,p),A(b+.01,i,a,e,m),
// calculate orthonormal basis
v.subVectors(m,p),y.addVectors(m,p),g.crossVectors(v,y),y.crossVectors(g,v),
// normalize B, N. T can be ignored, we don't use it
g.normalize(),y.normalize(),s=0;s<=r;++s){
// now calculate the vertices. they are nothing more than an extrusion of the torus curve.
// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.
var x=s/r*Math.PI*2,w=-t*Math.cos(x),_=t*Math.sin(x);
// now calculate the final vertex position.
// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve
d.x=p.x+(w*y.x+_*g.x),d.y=p.y+(w*y.y+_*g.y),d.z=p.z+(w*y.z+_*g.z),l.push(d.x,d.y,d.z),
// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)
f.subVectors(d,p).normalize(),h.push(f.x,f.y,f.z),
// uv
u.push(o/n),u.push(s/r)}}
// generate indices
for(s=1;s<=n;s++)for(o=1;o<=r;o++){
// indices
var M=(r+1)*(s-1)+(o-1),E=(r+1)*s+(o-1),S=(r+1)*s+o,T=(r+1)*(s-1)+o;
// faces
c.push(M,E,T),c.push(E,S,T)}
// build geometry
// this function calculates the current position on the torus curve
function A(e,t,n,r,i){var a=Math.cos(e),o=Math.sin(e),s=n/t*e,c=Math.cos(s);i.x=r*(2+c)*.5*a,i.y=r*(2+c)*o*.5,i.z=r*Math.sin(s)*.5}this.setIndex(c),this.addAttribute("position",new kn(l,3)),this.addAttribute("normal",new kn(h,3)),this.addAttribute("uv",new kn(u,2))}
/**
   * @author oosmoxiecode
   * @author mrdoob / http://mrdoob.com/
   * @author Mugen87 / https://github.com/Mugen87
   */
// TorusGeometry
function Xa(e,t,n,r,i){Ln.call(this),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:r,arc:i},this.fromBufferGeometry(new Ya(e,t,n,r,i)),this.mergeVertices()}
// TorusBufferGeometry
function Ya(e,t,n,r,i){jn.call(this),this.type="TorusBufferGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:r,arc:i},e=e||1,t=t||.4,n=Math.floor(n)||8,r=Math.floor(r)||6,i=i||2*Math.PI;
// buffers
var a,o,s=[],c=[],l=[],h=[],u=new Ct,d=new Ct,f=new Ct;
// generate vertices, normals and uvs
for(a=0;a<=n;a++)for(o=0;o<=r;o++){var p=o/r*i,m=a/n*Math.PI*2;
// vertex
d.x=(e+t*Math.cos(m))*Math.cos(p),d.y=(e+t*Math.cos(m))*Math.sin(p),d.z=t*Math.sin(m),c.push(d.x,d.y,d.z),
// normal
u.x=e*Math.cos(p),u.y=e*Math.sin(p),f.subVectors(d,u).normalize(),l.push(f.x,f.y,f.z),
// uv
h.push(o/r),h.push(a/n)}
// generate indices
for(a=1;a<=n;a++)for(o=1;o<=r;o++){
// indices
var g=(r+1)*a+o-1,v=(r+1)*(a-1)+o-1,y=(r+1)*(a-1)+o,b=(r+1)*a+o;
// faces
s.push(g,v,b),s.push(v,y,b)}
// build geometry
this.setIndex(s),this.addAttribute("position",new kn(c,3)),this.addAttribute("normal",new kn(l,3)),this.addAttribute("uv",new kn(h,2))}Object.assign(la.prototype,{isFogExp2:!0,clone:function(){return new la(this.color,this.density)},toJSON:function(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}),Object.assign(ha.prototype,{isFog:!0,clone:function(){return new ha(this.color,this.near,this.far)},toJSON:function(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}),ua.prototype=Object.assign(Object.create(En.prototype),{constructor:ua,isScene:!0,copy:function(e,t){return En.prototype.copy.call(this,e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.fog&&(this.fog=e.fog.clone()),null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this},toJSON:function(e){var t=En.prototype.toJSON.call(this,e);return null!==this.background&&(t.object.background=this.background.toJSON(e)),null!==this.fog&&(t.object.fog=this.fog.toJSON()),t},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Object.defineProperty(da.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}}),Object.assign(da.prototype,{isInterleavedBuffer:!0,onUploadCallback:function(){},setArray:function(e){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");return this.count=void 0!==e?e.length/this.stride:0,this.array=e,this},setDynamic:function(e){return this.dynamic=e,this},copy:function(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.dynamic=e.dynamic,this},copyAt:function(e,t,n){e*=this.stride,n*=t.stride;for(var r=0,i=this.stride;r<i;r++)this.array[e+r]=t.array[n+r];return this},set:function(e,t){return void 0===t&&(t=0),this.array.set(e,t),this},clone:function(){return(new this.constructor).copy(this)},onUpload:function(e){return this.onUploadCallback=e,this}}),Object.defineProperties(fa.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}}}),Object.assign(fa.prototype,{isInterleavedBufferAttribute:!0,setX:function(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this},setY:function(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this},setZ:function(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this},setW:function(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this},getX:function(e){return this.data.array[e*this.data.stride+this.offset]},getY:function(e){return this.data.array[e*this.data.stride+this.offset+1]},getZ:function(e){return this.data.array[e*this.data.stride+this.offset+2]},getW:function(e){return this.data.array[e*this.data.stride+this.offset+3]},setXY:function(e,t,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this},setXYZ:function(e,t,n,r){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=r,this},setXYZW:function(e,t,n,r,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=r,this.data.array[e+3]=i,this}}),pa.prototype=Object.create(Yn.prototype),pa.prototype.constructor=pa,pa.prototype.isSpriteMaterial=!0,pa.prototype.copy=function(e){return Yn.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this},ma.prototype=Object.assign(Object.create(En.prototype),{constructor:ma,isSprite:!0,raycast:function(){var e=new Ct,t=new Ct,n=new Ct,r=new Lt,i=new Lt,a=new tn,o=new Ct,s=new Ct,c=new Ct,l=new Lt,h=new Lt,u=new Lt;function d(e,t,n,o,s,c){
// compute position in camera space
r.subVectors(e,n).addScalar(.5).multiply(o),
// to check if rotation is not zero
void 0!==s?(i.x=c*r.x-s*r.y,i.y=s*r.x+c*r.y):i.copy(r),e.copy(t),e.x+=i.x,e.y+=i.y,
// transform to world space
e.applyMatrix4(a)}return function(r,i){t.setFromMatrixScale(this.matrixWorld),a.getInverse(this.modelViewMatrix).premultiply(this.matrixWorld),n.setFromMatrixPosition(this.modelViewMatrix);var f,p,m=this.material.rotation;0!==m&&(p=Math.cos(m),f=Math.sin(m));var g=this.center;d(o.set(-.5,-.5,0),n,g,t,f,p),d(s.set(.5,-.5,0),n,g,t,f,p),d(c.set(.5,.5,0),n,g,t,f,p),l.set(0,0),h.set(1,0),u.set(1,1);
// check first triangle
var v=r.ray.intersectTriangle(o,s,c,!1,e);if(null!==v||(
// check second triangle
d(s.set(-.5,.5,0),n,g,t,f,p),h.set(0,1),null!==(v=r.ray.intersectTriangle(o,c,s,!1,e)))){var y=r.ray.origin.distanceTo(e);y<r.near||y>r.far||i.push({distance:y,point:e.clone(),uv:ur.getUV(e,o,s,c,l,h,u,new Lt),face:null,object:this})}}}(),clone:function(){return new this.constructor(this.material).copy(this)},copy:function(e){return En.prototype.copy.call(this,e),void 0!==e.center&&this.center.copy(e.center),this}}),ga.prototype=Object.assign(Object.create(En.prototype),{constructor:ga,isLOD:!0,copy:function(e){En.prototype.copy.call(this,e,!1);for(var t=e.levels,n=0,r=t.length;n<r;n++){var i=t[n];this.addLevel(i.object.clone(),i.distance)}return this},addLevel:function(e,t){void 0===t&&(t=0),t=Math.abs(t);for(var n=this.levels,r=0;r<n.length&&!(t<n[r].distance);r++);return n.splice(r,0,{distance:t,object:e}),this.add(e),this},getObjectForDistance:function(e){for(var t=this.levels,n=1,r=t.length;n<r&&!(e<t[n].distance);n++);return t[n-1].object},raycast:(Ki=new Ct,function(e,t){Ki.setFromMatrixPosition(this.matrixWorld);var n=e.ray.origin.distanceTo(Ki);this.getObjectForDistance(n).raycast(e,t)}),update:function(){var e=new Ct,t=new Ct;return function(n){var r=this.levels;if(r.length>1){e.setFromMatrixPosition(n.matrixWorld),t.setFromMatrixPosition(this.matrixWorld);var i=e.distanceTo(t);r[0].object.visible=!0;for(var a=1,o=r.length;a<o&&i>=r[a].distance;a++)r[a-1].object.visible=!1,r[a].object.visible=!0;for(;a<o;a++)r[a].object.visible=!1}}}(),toJSON:function(e){var t=En.prototype.toJSON.call(this,e);t.object.levels=[];for(var n=this.levels,r=0,i=n.length;r<i;r++){var a=n[r];t.object.levels.push({object:a.object.uuid,distance:a.distance})}return t}}),va.prototype=Object.assign(Object.create(fr.prototype),{constructor:va,isSkinnedMesh:!0,bind:function(e,t){this.skeleton=e,void 0===t&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.getInverse(t)},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){for(var e=new qt,t=this.geometry.attributes.skinWeight,n=0,r=t.count;n<r;n++){e.x=t.getX(n),e.y=t.getY(n),e.z=t.getZ(n),e.w=t.getW(n);var i=1/e.manhattanLength();i!==1/0?e.multiplyScalar(i):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}},updateMatrixWorld:function(e){fr.prototype.updateMatrixWorld.call(this,e),"attached"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):"detached"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),Object.assign(ya.prototype,{calculateInverses:function(){this.boneInverses=[];for(var e=0,t=this.bones.length;e<t;e++){var n=new tn;this.bones[e]&&n.getInverse(this.bones[e].matrixWorld),this.boneInverses.push(n)}},pose:function(){var e,t,n;
// recover the bind-time world matrices
for(t=0,n=this.bones.length;t<n;t++)(e=this.bones[t])&&e.matrixWorld.getInverse(this.boneInverses[t]);
// compute the local matrices, positions, rotations and scales
for(t=0,n=this.bones.length;t<n;t++)(e=this.bones[t])&&(e.parent&&e.parent.isBone?(e.matrix.getInverse(e.parent.matrixWorld),e.matrix.multiply(e.matrixWorld)):e.matrix.copy(e.matrixWorld),e.matrix.decompose(e.position,e.quaternion,e.scale))},update:($i=new tn,ea=new tn,function(){
// flatten bone matrices to array
for(var e=this.bones,t=this.boneInverses,n=this.boneMatrices,r=this.boneTexture,i=0,a=e.length;i<a;i++){
// compute the offset between the current and the original transform
var o=e[i]?e[i].matrixWorld:ea;$i.multiplyMatrices(o,t[i]),$i.toArray(n,16*i)}void 0!==r&&(r.needsUpdate=!0)}),clone:function(){return new ya(this.bones,this.boneInverses)},getBoneByName:function(e){for(var t=0,n=this.bones.length;t<n;t++){var r=this.bones[t];if(r.name===e)return r}}}),ba.prototype=Object.assign(Object.create(En.prototype),{constructor:ba,isBone:!0}),xa.prototype=Object.create(Yn.prototype),xa.prototype.constructor=xa,xa.prototype.isLineBasicMaterial=!0,xa.prototype.copy=function(e){return Yn.prototype.copy.call(this,e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this},wa.prototype=Object.assign(Object.create(En.prototype),{constructor:wa,isLine:!0,computeLineDistances:(ta=new Ct,na=new Ct,function(){var e=this.geometry;if(e.isBufferGeometry)
// we assume non-indexed geometry
if(null===e.index){for(var t=e.attributes.position,n=[0],r=1,i=t.count;r<i;r++)ta.fromBufferAttribute(t,r-1),na.fromBufferAttribute(t,r),n[r]=n[r-1],n[r]+=ta.distanceTo(na);e.addAttribute("lineDistance",new kn(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(e.isGeometry){var a=e.vertices;for((n=e.lineDistances)[0]=0,r=1,i=a.length;r<i;r++)n[r]=n[r-1],n[r]+=a[r-1].distanceTo(a[r])}return this}),raycast:function(){var e=new tn,t=new hr,n=new Kt;return function(r,i){var a=r.linePrecision,o=this.geometry,s=this.matrixWorld;if(
// Checking boundingSphere distance to ray
null===o.boundingSphere&&o.computeBoundingSphere(),n.copy(o.boundingSphere),n.applyMatrix4(s),n.radius+=a,!1!==r.ray.intersectsSphere(n)){
//
e.getInverse(s),t.copy(r.ray).applyMatrix4(e);var c=a/((this.scale.x+this.scale.y+this.scale.z)/3),l=c*c,h=new Ct,u=new Ct,d=new Ct,f=new Ct,p=this&&this.isLineSegments?2:1;if(o.isBufferGeometry){var m=o.index,g=o.attributes.position.array;if(null!==m)for(var v=m.array,y=0,b=v.length-1;y<b;y+=p){var x=v[y],w=v[y+1];if(h.fromArray(g,3*x),u.fromArray(g,3*w),!(t.distanceSqToSegment(h,u,f,d)>l))f.applyMatrix4(this.matrixWorld),(E=r.ray.origin.distanceTo(f))<r.near||E>r.far||i.push({distance:E,
// What do we want? intersection point on the ray or on the segment??
// point: raycaster.ray.at( distance ),
point:d.clone().applyMatrix4(this.matrixWorld),index:y,face:null,faceIndex:null,object:this})}else for(y=0,b=g.length/3-1;y<b;y+=p){if(h.fromArray(g,3*y),u.fromArray(g,3*y+3),!(t.distanceSqToSegment(h,u,f,d)>l))f.applyMatrix4(this.matrixWorld),(E=r.ray.origin.distanceTo(f))<r.near||E>r.far||i.push({distance:E,
// What do we want? intersection point on the ray or on the segment??
// point: raycaster.ray.at( distance ),
point:d.clone().applyMatrix4(this.matrixWorld),index:y,face:null,faceIndex:null,object:this})}}else if(o.isGeometry){var _=o.vertices,M=_.length;for(y=0;y<M-1;y+=p){var E;if(!(t.distanceSqToSegment(_[y],_[y+1],f,d)>l))f.applyMatrix4(this.matrixWorld),(E=r.ray.origin.distanceTo(f))<r.near||E>r.far||i.push({distance:E,
// What do we want? intersection point on the ray or on the segment??
// point: raycaster.ray.at( distance ),
point:d.clone().applyMatrix4(this.matrixWorld),index:y,face:null,faceIndex:null,object:this})}}}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),_a.prototype=Object.assign(Object.create(wa.prototype),{constructor:_a,isLineSegments:!0,computeLineDistances:function(){var e=new Ct,t=new Ct;return function(){var n=this.geometry;if(n.isBufferGeometry)
// we assume non-indexed geometry
if(null===n.index){for(var r=n.attributes.position,i=[],a=0,o=r.count;a<o;a+=2)e.fromBufferAttribute(r,a),t.fromBufferAttribute(r,a+1),i[a]=0===a?0:i[a-1],i[a+1]=i[a]+e.distanceTo(t);n.addAttribute("lineDistance",new kn(i,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(n.isGeometry){var s=n.vertices;for(i=n.lineDistances,a=0,o=s.length;a<o;a+=2)e.copy(s[a]),t.copy(s[a+1]),i[a]=0===a?0:i[a-1],i[a+1]=i[a]+e.distanceTo(t)}return this}}()}),Ma.prototype=Object.assign(Object.create(wa.prototype),{constructor:Ma,isLineLoop:!0}),Ea.prototype=Object.create(Yn.prototype),Ea.prototype.constructor=Ea,Ea.prototype.isPointsMaterial=!0,Ea.prototype.copy=function(e){return Yn.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.morphTargets=e.morphTargets,this},Sa.prototype=Object.assign(Object.create(En.prototype),{constructor:Sa,isPoints:!0,raycast:function(){var e=new tn,t=new hr,n=new Kt;return function(r,i){var a=this,o=this.geometry,s=this.matrixWorld,c=r.params.Points.threshold;if(
// Checking boundingSphere distance to ray
null===o.boundingSphere&&o.computeBoundingSphere(),n.copy(o.boundingSphere),n.applyMatrix4(s),n.radius+=c,!1!==r.ray.intersectsSphere(n)){
//
e.getInverse(s),t.copy(r.ray).applyMatrix4(e);var l=c/((this.scale.x+this.scale.y+this.scale.z)/3),h=l*l,u=new Ct,d=new Ct;if(o.isBufferGeometry){var f=o.index,p=o.attributes.position.array;if(null!==f)for(var m=f.array,g=0,v=m.length;g<v;g++){var y=m[g];u.fromArray(p,3*y),w(u,y)}else{g=0;for(var b=p.length/3;g<b;g++)u.fromArray(p,3*g),w(u,g)}}else{var x=o.vertices;for(g=0,b=x.length;g<b;g++)w(x[g],g)}}function w(e,n){var o=t.distanceSqToPoint(e);if(o<h){t.closestPointToPoint(e,d),d.applyMatrix4(s);var c=r.ray.origin.distanceTo(d);if(c<r.near||c>r.far)return;i.push({distance:c,distanceToRay:Math.sqrt(o),point:d.clone(),index:n,face:null,object:a})}}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),Ta.prototype=Object.assign(Object.create(Wt.prototype),{constructor:Ta,isVideoTexture:!0,update:function(){var e=this.image;e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}),Aa.prototype=Object.create(Wt.prototype),Aa.prototype.constructor=Aa,Aa.prototype.isCompressedTexture=!0,La.prototype=Object.create(Wt.prototype),La.prototype.constructor=La,La.prototype.isCanvasTexture=!0,Pa.prototype=Object.create(Wt.prototype),Pa.prototype.constructor=Pa,Pa.prototype.isDepthTexture=!0,Ca.prototype=Object.create(jn.prototype),Ca.prototype.constructor=Ca,Ra.prototype=Object.create(Ln.prototype),Ra.prototype.constructor=Ra,Oa.prototype=Object.create(jn.prototype),Oa.prototype.constructor=Oa,Na.prototype=Object.create(Ln.prototype),Na.prototype.constructor=Na,Ia.prototype=Object.create(jn.prototype),Ia.prototype.constructor=Ia,Da.prototype=Object.create(Ln.prototype),Da.prototype.constructor=Da,za.prototype=Object.create(Ia.prototype),za.prototype.constructor=za,ka.prototype=Object.create(Ln.prototype),ka.prototype.constructor=ka,Ba.prototype=Object.create(Ia.prototype),Ba.prototype.constructor=Ba,Ua.prototype=Object.create(Ln.prototype),Ua.prototype.constructor=Ua,Fa.prototype=Object.create(Ia.prototype),Fa.prototype.constructor=Fa,Ga.prototype=Object.create(Ln.prototype),Ga.prototype.constructor=Ga,ja.prototype=Object.create(Ia.prototype),ja.prototype.constructor=ja,Ha.prototype=Object.create(Ln.prototype),Ha.prototype.constructor=Ha,Va.prototype=Object.create(jn.prototype),Va.prototype.constructor=Va,Va.prototype.toJSON=function(){var e=jn.prototype.toJSON.call(this);return e.path=this.parameters.path.toJSON(),e},Wa.prototype=Object.create(Ln.prototype),Wa.prototype.constructor=Wa,qa.prototype=Object.create(jn.prototype),qa.prototype.constructor=qa,Xa.prototype=Object.create(Ln.prototype),Xa.prototype.constructor=Xa,Ya.prototype=Object.create(jn.prototype),Ya.prototype.constructor=Ya;
/**
   * @author Mugen87 / https://github.com/Mugen87
   * Port from https://github.com/mapbox/earcut (v2.1.2)
   */
var Za=function(e,t,n){n=n||2;var r,i,a,o,s,c,l,h=t&&t.length,u=h?t[0]*n:e.length,d=Ja(e,0,u,n,!0),f=[];if(!d)return f;
// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox
if(h&&(d=
// link every hole into the outer loop, producing a single-ring polygon without holes
function(e,t,n,r){var i,a,o,s,c,l=[];for(i=0,a=t.length;i<a;i++)o=t[i]*r,s=i<a-1?t[i+1]*r:e.length,(c=Ja(e,o,s,r,!1))===c.next&&(c.steiner=!0),l.push(oo(c));
// process holes from left to right
for(l.sort(ro),i=0;i<l.length;i++)io(l[i],n),n=Qa(n,n.next);return n}(e,t,d,n)),e.length>80*n){r=a=e[0],i=o=e[1];for(var p=n;p<u;p+=n)(s=e[p])<r&&(r=s),(c=e[p+1])<i&&(i=c),s>a&&(a=s),c>o&&(o=c);
// minX, minY and invSize are later used to transform coords into integers for z-order calculation
l=0!==(l=Math.max(a-r,o-i))?1/l:0}return Ka(d,f,n,r,i,l),f};
// create a circular doubly linked list from polygon points in the specified winding order
function Ja(e,t,n,r,i){var a,o;if(i===function(e,t,n,r){for(var i=0,a=t,o=n-r;a<n;a+=r)i+=(e[o]-e[a])*(e[a+1]+e[o+1]),o=a;return i}
/**
   * @author zz85 / http://www.lab4games.net/zz85/blog
   */(e,t,n,r)>0)for(a=t;a<n;a+=r)o=mo(a,e[a],e[a+1],o);else for(a=n-r;a>=t;a-=r)o=mo(a,e[a],e[a+1],o);return o&&ho(o,o.next)&&(go(o),o=o.next),o}
// eliminate colinear or duplicate points
function Qa(e,t){if(!e)return e;t||(t=e);var n,r=e;do{if(n=!1,r.steiner||!ho(r,r.next)&&0!==lo(r.prev,r,r.next))r=r.next;else{if(go(r),(r=t=r.prev)===r.next)break;n=!0}}while(n||r!==t);return t}
// main ear slicing loop which triangulates a polygon (given as a linked list)
function Ka(e,t,n,r,i,a,o){if(e){
// interlink polygon nodes in z-order
!o&&a&&
// interlink polygon nodes in z-order
function(e,t,n,r){var i=e;do{null===i.z&&(i.z=ao(i.x,i.y,t,n,r)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next}while(i!==e);i.prevZ.nextZ=null,i.prevZ=null,
// Simon Tatham's linked list merge sort algorithm
// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html
function(e){var t,n,r,i,a,o,s,c,l=1;do{for(n=e,e=null,a=null,o=0;n;){for(o++,r=n,s=0,t=0;t<l&&(s++,r=r.nextZ);t++);for(c=l;s>0||c>0&&r;)0!==s&&(0===c||!r||n.z<=r.z)?(i=n,n=n.nextZ,s--):(i=r,r=r.nextZ,c--),a?a.nextZ=i:e=i,i.prevZ=a,a=i;n=r}a.nextZ=null,l*=2}while(o>1)}
// z-order of a point given coords and inverse of the longer side of data bbox
(i)}(e,r,i,a);
// iterate through ears, slicing them one by one
for(var s,c,l=e;e.prev!==e.next;)if(s=e.prev,c=e.next,a?eo(e,r,i,a):$a(e))
// cut off the triangle
t.push(s.i/n),t.push(e.i/n),t.push(c.i/n),go(e),
// skipping the next vertice leads to less sliver triangles
e=c.next,l=c.next;else
// if we looped through the whole remaining polygon and can't find any more ears
if((e=c)===l){
// try filtering points and slicing again
o?1===o?Ka(e=to(e,t,n),t,n,r,i,a,2):2===o&&no(e,t,n,r,i,a):Ka(Qa(e),t,n,r,i,a,1);break}}}
// check whether a polygon node forms a valid ear with adjacent nodes
function $a(e){var t=e.prev,n=e,r=e.next;if(lo(t,n,r)>=0)return!1;// reflex, can't be an ear
// now make sure we don't have other points inside the potential ear
for(var i=e.next.next;i!==e.prev;){if(so(t.x,t.y,n.x,n.y,r.x,r.y,i.x,i.y)&&lo(i.prev,i,i.next)>=0)return!1;i=i.next}return!0}function eo(e,t,n,r){var i=e.prev,a=e,o=e.next;if(lo(i,a,o)>=0)return!1;// reflex, can't be an ear
// triangle bbox; min & max are calculated like this for speed
for(var s=i.x<a.x?i.x<o.x?i.x:o.x:a.x<o.x?a.x:o.x,c=i.y<a.y?i.y<o.y?i.y:o.y:a.y<o.y?a.y:o.y,l=i.x>a.x?i.x>o.x?i.x:o.x:a.x>o.x?a.x:o.x,h=i.y>a.y?i.y>o.y?i.y:o.y:a.y>o.y?a.y:o.y,u=ao(s,c,t,n,r),d=ao(l,h,t,n,r),f=e.nextZ
// z-order range for the current triangle bbox;
;f&&f.z<=d;){if(f!==e.prev&&f!==e.next&&so(i.x,i.y,a.x,a.y,o.x,o.y,f.x,f.y)&&lo(f.prev,f,f.next)>=0)return!1;f=f.nextZ}
// then look for points in decreasing z-order
for(f=e.prevZ;f&&f.z>=u;){if(f!==e.prev&&f!==e.next&&so(i.x,i.y,a.x,a.y,o.x,o.y,f.x,f.y)&&lo(f.prev,f,f.next)>=0)return!1;f=f.prevZ}return!0}
// go through all polygon nodes and cure small local self-intersections
function to(e,t,n){var r=e;do{var i=r.prev,a=r.next.next;!ho(i,a)&&uo(i,r,r.next,a)&&fo(i,a)&&fo(a,i)&&(t.push(i.i/n),t.push(r.i/n),t.push(a.i/n),
// remove two nodes involved
go(r),go(r.next),r=e=a),r=r.next}while(r!==e);return r}
// try splitting polygon into two and triangulate them independently
function no(e,t,n,r,i,a){
// look for a valid diagonal that divides the polygon into two
var o=e;do{for(var s=o.next.next;s!==o.prev;){if(o.i!==s.i&&co(o,s)){
// split the polygon in two by the diagonal
var c=po(o,s);
// filter colinear points around the cuts
return o=Qa(o,o.next),c=Qa(c,c.next),
// run earcut on each half
Ka(o,t,n,r,i,a),void Ka(c,t,n,r,i,a)}s=s.next}o=o.next}while(o!==e)}function ro(e,t){return e.x-t.x}
// find a bridge between vertices that connects hole with an outer ring and and link it
function io(e,t){if(t=
// David Eberly's algorithm for finding a bridge between hole and outer polygon
function(e,t){var n,r=t,i=e.x,a=e.y,o=-1/0;
// find a segment intersected by a ray from the hole's leftmost point to the left;
// segment's endpoint with lesser x will be potential connection point
do{if(a<=r.y&&a>=r.next.y&&r.next.y!==r.y){var s=r.x+(a-r.y)*(r.next.x-r.x)/(r.next.y-r.y);if(s<=i&&s>o){if(o=s,s===i){if(a===r.y)return r;if(a===r.next.y)return r.next}n=r.x<r.next.x?r:r.next}}r=r.next}while(r!==t);if(!n)return null;if(i===o)return n.prev;// hole touches outer segment; pick lower endpoint
// look for points inside the triangle of hole point, segment intersection and endpoint;
// if there are no points found, we have a valid connection;
// otherwise choose the point of the minimum angle with the ray as connection point
var c,l=n,h=n.x,u=n.y,d=1/0;r=n.next;for(;r!==l;)i>=r.x&&r.x>=h&&i!==r.x&&so(a<u?i:o,a,h,u,a<u?o:i,a,r.x,r.y)&&((c=Math.abs(a-r.y)/(i-r.x))<d||c===d&&r.x>n.x)&&fo(r,e)&&(n=r,d=c),r=r.next;return n}(e,t)){var n=po(t,e);Qa(n,n.next)}}function ao(e,t,n,r,i){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((
// coords are transformed into non-negative 15-bit integer range
e=32767*(e-n)*i)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-r)*i)|t<<8))|t<<4))|t<<2))|t<<1))<<1}
// find the leftmost node of a polygon ring
function oo(e){var t=e,n=e;do{t.x<n.x&&(n=t),t=t.next}while(t!==e);return n}
// check if a point lies within a convex triangle
function so(e,t,n,r,i,a,o,s){return(i-o)*(t-s)-(e-o)*(a-s)>=0&&(e-o)*(r-s)-(n-o)*(t-s)>=0&&(n-o)*(a-s)-(i-o)*(r-s)>=0}
// check if a diagonal between two polygon nodes is valid (lies in polygon interior)
function co(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!
// check if a polygon diagonal intersects any polygon segments
function(e,t){var n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&uo(n,n.next,e,t))return!0;n=n.next}while(n!==e);return!1}
// check if a polygon diagonal is locally inside the polygon
(e,t)&&fo(e,t)&&fo(t,e)&&
// check if the middle point of a polygon diagonal is inside the polygon
function(e,t){var n=e,r=!1,i=(e.x+t.x)/2,a=(e.y+t.y)/2;do{n.y>a!=n.next.y>a&&n.next.y!==n.y&&i<(n.next.x-n.x)*(a-n.y)/(n.next.y-n.y)+n.x&&(r=!r),n=n.next}while(n!==e);return r}
// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;
// if one belongs to the outer ring and another to a hole, it merges it into a single ring
(e,t)}
// signed area of a triangle
function lo(e,t,n){return(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y)}
// check if two points are equal
function ho(e,t){return e.x===t.x&&e.y===t.y}
// check if two segments intersect
function uo(e,t,n,r){return!!(ho(e,t)&&ho(n,r)||ho(e,r)&&ho(n,t))||lo(e,t,n)>0!=lo(e,t,r)>0&&lo(n,r,e)>0!=lo(n,r,t)>0}function fo(e,t){return lo(e.prev,e,e.next)<0?lo(e,t,e.next)>=0&&lo(e,e.prev,t)>=0:lo(e,t,e.prev)<0||lo(e,e.next,t)<0}function po(e,t){var n=new vo(e.i,e.x,e.y),r=new vo(t.i,t.x,t.y),i=e.next,a=t.prev;return e.next=t,t.prev=e,n.next=i,i.prev=n,r.next=n,n.prev=r,a.next=r,r.prev=a,r}
// create a node and optionally link it with previous one (in a circular doubly linked list)
function mo(e,t,n,r){var i=new vo(e,t,n);return r?(i.next=r.next,i.prev=r,r.next.prev=i,r.next=i):(i.prev=i,i.next=i),i}function go(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function vo(e,t,n){
// vertice index in coordinates array
this.i=e,
// vertex coordinates
this.x=t,this.y=n,
// previous and next vertice nodes in a polygon ring
this.prev=null,this.next=null,
// z-order curve value
this.z=null,
// previous and next nodes in z-order
this.prevZ=null,this.nextZ=null,
// indicates whether this is a steiner point
this.steiner=!1}var yo={
// calculate area of the contour polygon
area:function(e){for(var t=e.length,n=0,r=t-1,i=0;i<t;r=i++)n+=e[r].x*e[i].y-e[i].x*e[r].y;return.5*n},isClockWise:function(e){return yo.area(e)<0},triangulateShape:function(e,t){var n=[],r=[],i=[];// flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]
// final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]
bo(e),xo(n,e);
//
var a=e.length;t.forEach(bo);for(var o=0;o<t.length;o++)r.push(a),a+=t[o].length,xo(n,t[o]);
//
var s=Za(n,r);
//
for(o=0;o<s.length;o+=3)i.push(s.slice(o,o+3));return i}};function bo(e){var t=e.length;t>2&&e[t-1].equals(e[0])&&e.pop()}function xo(e,t){for(var n=0;n<t.length;n++)e.push(t[n].x),e.push(t[n].y)}
/**
   * @author zz85 / http://www.lab4games.net/zz85/blog
   *
   * Creates extruded geometry from a path shape.
   *
   * parameters = {
   *
   *  curveSegments: <int>, // number of points on the curves
   *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too
   *  depth: <float>, // Depth to extrude the shape
   *
   *  bevelEnabled: <bool>, // turn on bevel
   *  bevelThickness: <float>, // how deep into the original shape bevel goes
   *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel
   *  bevelOffset: <float>, // how far from shape outline does bevel start
   *  bevelSegments: <int>, // number of bevel layers
   *
   *  extrudePath: <THREE.Curve> // curve to extrude shape along
   *
   *  UVGenerator: <Object> // object that provides UV generator functions
   *
   * }
   */
// ExtrudeGeometry
function wo(e,t){Ln.call(this),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},this.fromBufferGeometry(new _o(e,t)),this.mergeVertices()}
// ExtrudeBufferGeometry
function _o(e,t){jn.call(this),this.type="ExtrudeBufferGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];for(var n=this,r=[],i=[],a=0,o=e.length;a<o;a++){s(e[a])}
// build geometry
// functions
function s(e){var a=[],o=void 0!==t.curveSegments?t.curveSegments:12,s=void 0!==t.steps?t.steps:1,c=void 0!==t.depth?t.depth:100,l=void 0===t.bevelEnabled||t.bevelEnabled,h=void 0!==t.bevelThickness?t.bevelThickness:6,u=void 0!==t.bevelSize?t.bevelSize:h-2,d=void 0!==t.bevelOffset?t.bevelOffset:0,f=void 0!==t.bevelSegments?t.bevelSegments:3,p=t.extrudePath,m=void 0!==t.UVGenerator?t.UVGenerator:Mo;
// options
// deprecated options
void 0!==t.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),c=t.amount);
//
var g,v,y,b,x,w,_,M,E=!1;p&&(g=p.getSpacedPoints(s),E=!0,l=!1,// bevels not supported for path extrusion
// SETUP TNB variables
// TODO1 - have a .isClosed in spline?
v=p.computeFrenetFrames(s,!1),
// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);
y=new Ct,b=new Ct,x=new Ct),
// Safeguards if bevels are not enabled
l||(f=0,h=0,u=0,d=0);// looping of holes
var S=e.extractPoints(o),T=S.shape,A=S.holes;if(!yo.isClockWise(T))
// Maybe we should also check if holes are in the opposite direction, just to be safe ...
for(T=T.reverse(),_=0,M=A.length;_<M;_++)w=A[_],yo.isClockWise(w)&&(A[_]=w.reverse());var L=yo.triangulateShape(T,A),P=T;
/* Vertices */ // vertices has all points but contour has only points of circumference
for(_=0,M=A.length;_<M;_++)w=A[_],T=T.concat(w);function C(e,t,n){return t||console.error("THREE.ExtrudeGeometry: vec does not exist"),t.clone().multiplyScalar(n).add(e)}var R,O,N,I,D,z,k=T.length,B=L.length;
// Find directions for point movement
function U(e,t,n){
// computes for inPt the corresponding point inPt' on a new contour
//   shifted by 1 unit (length of normalized vector) to the left
// if we walk along contour clockwise, this new contour is outside the old one
//
// inPt' is the intersection of the two lines parallel to the two
//  adjacent edges of inPt at a distance of 1 unit on the left side.
var r,i,a,o=e.x-t.x,s=e.y-t.y,c=n.x-e.x,l=n.y-e.y,h=o*o+s*s,u=o*l-s*c;// resulting translation vector for inPt
// good reading for geometry algorithms (here: line-line intersection)
// http://geomalgorithms.com/a05-_intersect-1.html
if(Math.abs(u)>Number.EPSILON){
// not collinear
// length of vectors for normalizing
var d=Math.sqrt(h),f=Math.sqrt(c*c+l*l),p=t.x-s/d,m=t.y+o/d,g=((n.x-l/f-p)*l-(n.y+c/f-m)*c)/(o*l-s*c),v=(
// vector from inPt to intersection point
r=p+o*g-e.x)*r+(i=m+s*g-e.y)*i;if(v<=2)return new Lt(r,i);a=Math.sqrt(v/2)}else{
// handle special case of collinear edges
var y=!1;// assumes: opposite
o>Number.EPSILON?c>Number.EPSILON&&(y=!0):o<-Number.EPSILON?c<-Number.EPSILON&&(y=!0):Math.sign(s)===Math.sign(l)&&(y=!0),y?(
// console.log("Warning: lines are a straight sequence");
r=-s,i=o,a=Math.sqrt(h)):(
// console.log("Warning: lines are a straight spike");
r=o,i=s,a=Math.sqrt(h/2))}return new Lt(r/a,i/a)}for(var F=[],G=0,j=P.length,H=j-1,V=G+1;G<j;G++,H++,V++)H===j&&(H=0),V===j&&(V=0),
//  (j)---(i)---(k)
// console.log('i,j,k', i, j , k)
F[G]=U(P[G],P[H],P[V]);var W,q,X=[],Y=F.concat();for(_=0,M=A.length;_<M;_++){for(w=A[_],W=[],G=0,H=(j=w.length)-1,V=G+1;G<j;G++,H++,V++)H===j&&(H=0),V===j&&(V=0),
//  (j)---(i)---(k)
W[G]=U(w[G],w[H],w[V]);X.push(W),Y=Y.concat(W)}
// Loop bevelSegments, 1 for the front, 1 for the back
for(R=0;R<f;R++){
// contract shape
for(
//for ( b = bevelSegments; b > 0; b -- ) {
N=R/f,I=h*Math.cos(N*Math.PI/2),O=u*Math.sin(N*Math.PI/2)+d,G=0,j=P.length;G<j;G++)J((D=C(P[G],F[G],O)).x,D.y,-I);
// expand holes
for(_=0,M=A.length;_<M;_++)for(w=A[_],W=X[_],G=0,j=w.length;G<j;G++)J((D=C(w[G],W[G],O)).x,D.y,-I)}
// Back facing vertices
for(O=u+d,G=0;G<k;G++)D=l?C(T[G],Y[G],O):T[G],E?(
// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );
b.copy(v.normals[0]).multiplyScalar(D.x),y.copy(v.binormals[0]).multiplyScalar(D.y),x.copy(g[0]).add(b).add(y),J(x.x,x.y,x.z)):J(D.x,D.y,0);
// Add stepped vertices...
// Including front facing vertices
for(q=1;q<=s;q++)for(G=0;G<k;G++)D=l?C(T[G],Y[G],O):T[G],E?(
// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );
b.copy(v.normals[q]).multiplyScalar(D.x),y.copy(v.binormals[q]).multiplyScalar(D.y),x.copy(g[q]).add(b).add(y),J(x.x,x.y,x.z)):J(D.x,D.y,c/s*q);
// Add bevel segments planes
//for ( b = 1; b <= bevelSegments; b ++ ) {
for(R=f-1;R>=0;R--){
// contract shape
for(N=R/f,I=h*Math.cos(N*Math.PI/2),O=u*Math.sin(N*Math.PI/2)+d,G=0,j=P.length;G<j;G++)J((D=C(P[G],F[G],O)).x,D.y,c+I);
// expand holes
for(_=0,M=A.length;_<M;_++)for(w=A[_],W=X[_],G=0,j=w.length;G<j;G++)D=C(w[G],W[G],O),E?J(D.x,D.y+g[s-1].y,g[s-1].x+I):J(D.x,D.y,c+I)}
/* Faces */
// Top and bottom faces
function Z(e,t){var n,r;for(G=e.length;--G>=0;){n=G,(r=G-1)<0&&(r=e.length-1);
//console.log('b', i,j, i-1, k,vertices.length);
var i=0,a=s+2*f;for(i=0;i<a;i++){var o=k*i,c=k*(i+1);K(t+n+o,t+r+o,t+r+c,t+n+c)}}}function J(e,t,n){a.push(e),a.push(t),a.push(n)}function Q(e,t,i){$(e),$(t),$(i);var a=r.length/3,o=m.generateTopUV(n,r,a-3,a-2,a-1);ee(o[0]),ee(o[1]),ee(o[2])}function K(e,t,i,a){$(e),$(t),$(a),$(t),$(i),$(a);var o=r.length/3,s=m.generateSideWallUV(n,r,o-6,o-3,o-2,o-1);ee(s[0]),ee(s[1]),ee(s[3]),ee(s[1]),ee(s[2]),ee(s[3])}function $(e){r.push(a[3*e+0]),r.push(a[3*e+1]),r.push(a[3*e+2])}function ee(e){i.push(e.x),i.push(e.y)}!
/////  Internal functions
function(){var e=r.length/3;if(l){var t=0,i=k*t;// steps + 1
// Bottom faces
for(G=0;G<B;G++)Q((z=L[G])[2]+i,z[1]+i,z[0]+i);
// Top faces
for(i=k*(t=s+2*f),G=0;G<B;G++)Q((z=L[G])[0]+i,z[1]+i,z[2]+i)}else{
// Bottom faces
for(G=0;G<B;G++)Q((z=L[G])[2],z[1],z[0]);
// Top faces
for(G=0;G<B;G++)Q((z=L[G])[0]+k*s,z[1]+k*s,z[2]+k*s)}n.addGroup(e,r.length/3-e,0)}
// Create faces for the z-sides of the shape
(),
// Sides faces
function(){var e=r.length/3,t=0;for(Z(P,t),t+=P.length,_=0,M=A.length;_<M;_++)Z(w=A[_],t),
//, true
t+=w.length;n.addGroup(e,r.length/3-e,1)}()}this.addAttribute("position",new kn(r,3)),this.addAttribute("uv",new kn(i,2)),this.computeVertexNormals()}wo.prototype=Object.create(Ln.prototype),wo.prototype.constructor=wo,wo.prototype.toJSON=function(){var e=Ln.prototype.toJSON.call(this);return Eo(this.parameters.shapes,this.parameters.options,e)},_o.prototype=Object.create(jn.prototype),_o.prototype.constructor=_o,_o.prototype.toJSON=function(){var e=jn.prototype.toJSON.call(this);return Eo(this.parameters.shapes,this.parameters.options,e)};
//
var Mo={generateTopUV:function(e,t,n,r,i){var a=t[3*n],o=t[3*n+1],s=t[3*r],c=t[3*r+1],l=t[3*i],h=t[3*i+1];return[new Lt(a,o),new Lt(s,c),new Lt(l,h)]},generateSideWallUV:function(e,t,n,r,i,a){var o=t[3*n],s=t[3*n+1],c=t[3*n+2],l=t[3*r],h=t[3*r+1],u=t[3*r+2],d=t[3*i],f=t[3*i+1],p=t[3*i+2],m=t[3*a],g=t[3*a+1],v=t[3*a+2];return Math.abs(s-h)<.01?[new Lt(o,1-c),new Lt(l,1-u),new Lt(d,1-p),new Lt(m,1-v)]:[new Lt(s,1-c),new Lt(h,1-u),new Lt(f,1-p),new Lt(g,1-v)]}};function Eo(e,t,n){if(
//
n.shapes=[],Array.isArray(e))for(var r=0,i=e.length;r<i;r++){var a=e[r];n.shapes.push(a.uuid)}else n.shapes.push(e.uuid);
//
return void 0!==t.extrudePath&&(n.options.extrudePath=t.extrudePath.toJSON()),n}
/**
   * @author zz85 / http://www.lab4games.net/zz85/blog
   * @author alteredq / http://alteredqualia.com/
   *
   * Text = 3D Text
   *
   * parameters = {
   *  font: <THREE.Font>, // font
   *
   *  size: <float>, // size of the text
   *  height: <float>, // thickness to extrude text
   *  curveSegments: <int>, // number of points on the curves
   *
   *  bevelEnabled: <bool>, // turn on bevel
   *  bevelThickness: <float>, // how deep into text bevel goes
   *  bevelSize: <float>, // how far from text outline (including bevelOffset) is bevel
   *  bevelOffset: <float> // how far from text outline does bevel start
   * }
   */
// TextGeometry
function So(e,t){Ln.call(this),this.type="TextGeometry",this.parameters={text:e,parameters:t},this.fromBufferGeometry(new To(e,t)),this.mergeVertices()}
// TextBufferGeometry
function To(e,t){var n=(t=t||{}).font;if(!n||!n.isFont)return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new Ln;var r=n.generateShapes(e,t.size);
// translate parameters to ExtrudeGeometry API
t.depth=void 0!==t.height?t.height:50,
// defaults
void 0===t.bevelThickness&&(t.bevelThickness=10),void 0===t.bevelSize&&(t.bevelSize=8),void 0===t.bevelEnabled&&(t.bevelEnabled=!1),_o.call(this,r,t),this.type="TextBufferGeometry"}
/**
   * @author mrdoob / http://mrdoob.com/
   * @author benaadams / https://twitter.com/ben_a_adams
   * @author Mugen87 / https://github.com/Mugen87
   */
// SphereGeometry
function Ao(e,t,n,r,i,a,o){Ln.call(this),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:r,phiLength:i,thetaStart:a,thetaLength:o},this.fromBufferGeometry(new Lo(e,t,n,r,i,a,o)),this.mergeVertices()}
// SphereBufferGeometry
function Lo(e,t,n,r,i,a,o){jn.call(this),this.type="SphereBufferGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:r,phiLength:i,thetaStart:a,thetaLength:o},e=e||1,t=Math.max(3,Math.floor(t)||8),n=Math.max(2,Math.floor(n)||6),r=void 0!==r?r:0,i=void 0!==i?i:2*Math.PI;var s,c,l=(a=void 0!==a?a:0)+(o=void 0!==o?o:Math.PI),h=0,u=[],d=new Ct,f=new Ct,p=[],m=[],g=[],v=[];
// generate vertices, normals and uvs
for(c=0;c<=n;c++){var y=[],b=c/n,x=0==c?.5/t:c==n?-.5/t:0;for(s=0;s<=t;s++){var w=s/t;
// vertex
d.x=-e*Math.cos(r+w*i)*Math.sin(a+b*o),d.y=e*Math.cos(a+b*o),d.z=e*Math.sin(r+w*i)*Math.sin(a+b*o),m.push(d.x,d.y,d.z),
// normal
f.copy(d).normalize(),g.push(f.x,f.y,f.z),
// uv
v.push(w+x,1-b),y.push(h++)}u.push(y)}
// indices
for(c=0;c<n;c++)for(s=0;s<t;s++){var _=u[c][s+1],M=u[c][s],E=u[c+1][s],S=u[c+1][s+1];(0!==c||a>0)&&p.push(_,M,S),(c!==n-1||l<Math.PI)&&p.push(M,E,S)}
// build geometry
this.setIndex(p),this.addAttribute("position",new kn(m,3)),this.addAttribute("normal",new kn(g,3)),this.addAttribute("uv",new kn(v,2))}
/**
   * @author Kaleb Murphy
   * @author Mugen87 / https://github.com/Mugen87
   */
// RingGeometry
function Po(e,t,n,r,i,a){Ln.call(this),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:r,thetaStart:i,thetaLength:a},this.fromBufferGeometry(new Co(e,t,n,r,i,a)),this.mergeVertices()}
// RingBufferGeometry
function Co(e,t,n,r,i,a){jn.call(this),this.type="RingBufferGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:r,thetaStart:i,thetaLength:a},e=e||.5,t=t||1,i=void 0!==i?i:0,a=void 0!==a?a:2*Math.PI,n=void 0!==n?Math.max(3,n):8;
// buffers
var o,s,c,l=[],h=[],u=[],d=[],f=e,p=(t-e)/(r=void 0!==r?Math.max(1,r):1),m=new Ct,g=new Lt;
// generate vertices, normals and uvs
for(s=0;s<=r;s++){for(c=0;c<=n;c++)
// values are generate from the inside of the ring to the outside
o=i+c/n*a,
// vertex
m.x=f*Math.cos(o),m.y=f*Math.sin(o),h.push(m.x,m.y,m.z),
// normal
u.push(0,0,1),
// uv
g.x=(m.x/t+1)/2,g.y=(m.y/t+1)/2,d.push(g.x,g.y);
// increase the radius for next row of vertices
f+=p}
// indices
for(s=0;s<r;s++){var v=s*(n+1);for(c=0;c<n;c++){var y=o=c+v,b=o+n+1,x=o+n+2,w=o+1;
// faces
l.push(y,b,w),l.push(b,x,w)}}
// build geometry
this.setIndex(l),this.addAttribute("position",new kn(h,3)),this.addAttribute("normal",new kn(u,3)),this.addAttribute("uv",new kn(d,2))}
/**
   * @author zz85 / https://github.com/zz85
   * @author bhouston / http://clara.io
   * @author Mugen87 / https://github.com/Mugen87
   */
// LatheGeometry
function Ro(e,t,n,r){Ln.call(this),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:r},this.fromBufferGeometry(new Oo(e,t,n,r)),this.mergeVertices()}
// LatheBufferGeometry
function Oo(e,t,n,r){jn.call(this),this.type="LatheBufferGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:r},t=Math.floor(t)||12,n=n||0,r=r||2*Math.PI,
// clamp phiLength so it's in range of [ 0, 2PI ]
r=At.clamp(r,0,2*Math.PI);
// buffers
var i,a,o,s=[],c=[],l=[],h=1/t,u=new Ct,d=new Lt;
// generate vertices and uvs
for(a=0;a<=t;a++){var f=n+a*h*r,p=Math.sin(f),m=Math.cos(f);for(o=0;o<=e.length-1;o++)
// vertex
u.x=e[o].x*p,u.y=e[o].y,u.z=e[o].x*m,c.push(u.x,u.y,u.z),
// uv
d.x=a/t,d.y=o/(e.length-1),l.push(d.x,d.y)}
// indices
for(a=0;a<t;a++)for(o=0;o<e.length-1;o++){var g=i=o+a*e.length,v=i+e.length,y=i+e.length+1,b=i+1;
// faces
s.push(g,v,b),s.push(v,y,b)}
// build geometry
// if the geometry is closed, we need to average the normals along the seam.
// because the corresponding vertices are identical (but still have different UVs).
if(this.setIndex(s),this.addAttribute("position",new kn(c,3)),this.addAttribute("uv",new kn(l,2)),
// generate normals
this.computeVertexNormals(),r===2*Math.PI){var x=this.attributes.normal.array,w=new Ct,_=new Ct,M=new Ct;for(
// this is the buffer offset for the last line of vertices
i=t*e.length*3,a=0,o=0;a<e.length;a++,o+=3)
// select the normal of the vertex in the first line
w.x=x[o+0],w.y=x[o+1],w.z=x[o+2],
// select the normal of the vertex in the last line
_.x=x[i+o+0],_.y=x[i+o+1],_.z=x[i+o+2],
// average normals
M.addVectors(w,_).normalize(),
// assign the new values to both normals
x[o+0]=x[i+o+0]=M.x,x[o+1]=x[i+o+1]=M.y,x[o+2]=x[i+o+2]=M.z}}
/**
   * @author jonobr1 / http://jonobr1.com
   * @author Mugen87 / https://github.com/Mugen87
   */
// ShapeGeometry
function No(e,t){Ln.call(this),this.type="ShapeGeometry","object"==typeof t&&(console.warn("THREE.ShapeGeometry: Options parameter has been removed."),t=t.curveSegments),this.parameters={shapes:e,curveSegments:t},this.fromBufferGeometry(new Io(e,t)),this.mergeVertices()}
// ShapeBufferGeometry
function Io(e,t){jn.call(this),this.type="ShapeBufferGeometry",this.parameters={shapes:e,curveSegments:t},t=t||12;
// buffers
var n=[],r=[],i=[],a=[],o=0,s=0;
// allow single and array values for "shapes" parameter
if(!1===Array.isArray(e))l(e);else for(var c=0;c<e.length;c++)l(e[c]),this.addGroup(o,s,c),// enables MultiMaterial support
o+=s,s=0;
// build geometry
// helper functions
function l(e){var o,c,l,h=r.length/3,u=e.extractPoints(t),d=u.shape,f=u.holes;for(
// check direction of vertices
!1===yo.isClockWise(d)&&(d=d.reverse()),o=0,c=f.length;o<c;o++)l=f[o],!0===yo.isClockWise(l)&&(f[o]=l.reverse());var p=yo.triangulateShape(d,f);
// join vertices of inner and outer paths to a single array
for(o=0,c=f.length;o<c;o++)l=f[o],d=d.concat(l);
// vertices, normals, uvs
for(o=0,c=d.length;o<c;o++){var m=d[o];r.push(m.x,m.y,0),i.push(0,0,1),a.push(m.x,m.y)}
// incides
for(o=0,c=p.length;o<c;o++){var g=p[o],v=g[0]+h,y=g[1]+h,b=g[2]+h;n.push(v,y,b),s+=3}}this.setIndex(n),this.addAttribute("position",new kn(r,3)),this.addAttribute("normal",new kn(i,3)),this.addAttribute("uv",new kn(a,2))}
//
function Do(e,t){if(t.shapes=[],Array.isArray(e))for(var n=0,r=e.length;n<r;n++){var i=e[n];t.shapes.push(i.uuid)}else t.shapes.push(e.uuid);return t}
/**
   * @author WestLangley / http://github.com/WestLangley
   * @author Mugen87 / https://github.com/Mugen87
   */function zo(e,t){jn.call(this),this.type="EdgesGeometry",this.parameters={thresholdAngle:t},t=void 0!==t?t:1;
// buffer
var n,r,i,a,o=[],s=Math.cos(At.DEG2RAD*t),c=[0,0],l={},h=["a","b","c"];
// helper variables
e.isBufferGeometry?(a=new Ln).fromBufferGeometry(e):a=e.clone(),a.mergeVertices(),a.computeFaceNormals();
// now create a data structure where each entry represents an edge with its adjoining faces
for(var u=a.vertices,d=a.faces,f=0,p=d.length;f<p;f++)for(var m=d[f],g=0;g<3;g++)n=m[h[g]],r=m[h[(g+1)%3]],c[0]=Math.min(n,r),c[1]=Math.max(n,r),void 0===l[i=c[0]+","+c[1]]?l[i]={index1:c[0],index2:c[1],face1:f,face2:void 0}:l[i].face2=f;
// generate vertices
for(i in l){var v=l[i];
// an edge is only rendered if the angle (in degrees) between the face normals of the adjoining faces exceeds this value. default = 1 degree.
if(void 0===v.face2||d[v.face1].normal.dot(d[v.face2].normal)<=s){var y=u[v.index1];o.push(y.x,y.y,y.z),y=u[v.index2],o.push(y.x,y.y,y.z)}}
// build geometry
this.addAttribute("position",new kn(o,3))}
/**
   * @author mrdoob / http://mrdoob.com/
   * @author Mugen87 / https://github.com/Mugen87
   */
// CylinderGeometry
function ko(e,t,n,r,i,a,o,s){Ln.call(this),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:r,heightSegments:i,openEnded:a,thetaStart:o,thetaLength:s},this.fromBufferGeometry(new Bo(e,t,n,r,i,a,o,s)),this.mergeVertices()}
// CylinderBufferGeometry
function Bo(e,t,n,r,i,a,o,s){jn.call(this),this.type="CylinderBufferGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:r,heightSegments:i,openEnded:a,thetaStart:o,thetaLength:s};var c=this;e=void 0!==e?e:1,t=void 0!==t?t:1,n=n||1,r=Math.floor(r)||8,i=Math.floor(i)||1,a=void 0!==a&&a,o=void 0!==o?o:0,s=void 0!==s?s:2*Math.PI;
// buffers
var l=[],h=[],u=[],d=[],f=0,p=[],m=n/2,g=0;function v(n){var i,a,p,v=new Lt,y=new Ct,b=0,x=!0===n?e:t,w=!0===n?1:-1;
// first we generate the center vertex data of the cap.
// because the geometry needs one set of uvs per face,
// we must generate a center vertex per face/segment
for(
// save the index of the first center vertex
a=f,i=1;i<=r;i++)
// vertex
h.push(0,m*w,0),
// normal
u.push(0,w,0),
// uv
d.push(.5,.5),
// increase index
f++;
// save the index of the last center vertex
// now we generate the surrounding vertices, normals and uvs
for(p=f,i=0;i<=r;i++){var _=i/r*s+o,M=Math.cos(_),E=Math.sin(_);
// vertex
y.x=x*E,y.y=m*w,y.z=x*M,h.push(y.x,y.y,y.z),
// normal
u.push(0,w,0),
// uv
v.x=.5*M+.5,v.y=.5*E*w+.5,d.push(v.x,v.y),
// increase index
f++}
// generate indices
for(i=0;i<r;i++){var S=a+i,T=p+i;!0===n?
// face top
l.push(T,T+1,S):
// face bottom
l.push(T+1,T,S),b+=3}
// add a group to the geometry. this will ensure multi material support
c.addGroup(g,b,!0===n?1:2),
// calculate new start value for groups
g+=b}
// generate geometry
!function(){var a,v,y=new Ct,b=new Ct,x=0,w=(t-e)/n;
// generate vertices, normals and uvs
for(v=0;v<=i;v++){var _=[],M=v/i,E=M*(t-e)+e;for(a=0;a<=r;a++){var S=a/r,T=S*s+o,A=Math.sin(T),L=Math.cos(T);
// vertex
b.x=E*A,b.y=-M*n+m,b.z=E*L,h.push(b.x,b.y,b.z),
// normal
y.set(A,w,L).normalize(),u.push(y.x,y.y,y.z),
// uv
d.push(S,1-M),
// save index of vertex in respective row
_.push(f++)}
// now save vertices of the row in our index array
p.push(_)}
// generate indices
for(a=0;a<r;a++)for(v=0;v<i;v++){
// we use the index array to access the correct indices
var P=p[v][a],C=p[v+1][a],R=p[v+1][a+1],O=p[v][a+1];
// faces
l.push(P,C,O),l.push(C,R,O),
// update group counter
x+=6}
// add a group to the geometry. this will ensure multi material support
c.addGroup(g,x,0),
// calculate new start value for groups
g+=x}(),!1===a&&(e>0&&v(!0),t>0&&v(!1)),
// build geometry
this.setIndex(l),this.addAttribute("position",new kn(h,3)),this.addAttribute("normal",new kn(u,3)),this.addAttribute("uv",new kn(d,2))}
/**
   * @author abelnation / http://github.com/abelnation
   */
// ConeGeometry
function Uo(e,t,n,r,i,a,o){ko.call(this,0,e,t,n,r,i,a,o),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:r,openEnded:i,thetaStart:a,thetaLength:o}}
// ConeBufferGeometry
function Fo(e,t,n,r,i,a,o){Bo.call(this,0,e,t,n,r,i,a,o),this.type="ConeBufferGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:r,openEnded:i,thetaStart:a,thetaLength:o}}
/**
   * @author benaadams / https://twitter.com/ben_a_adams
   * @author Mugen87 / https://github.com/Mugen87
   * @author hughes
   */
// CircleGeometry
function Go(e,t,n,r){Ln.call(this),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:r},this.fromBufferGeometry(new jo(e,t,n,r)),this.mergeVertices()}
// CircleBufferGeometry
function jo(e,t,n,r){jn.call(this),this.type="CircleBufferGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:r},e=e||1,t=void 0!==t?Math.max(3,t):8,n=void 0!==n?n:0,r=void 0!==r?r:2*Math.PI;
// buffers
var i,a,o=[],s=[],c=[],l=[],h=new Ct,u=new Lt;for(
// center point
s.push(0,0,0),c.push(0,0,1),l.push(.5,.5),a=0,i=3;a<=t;a++,i+=3){var d=n+a/t*r;
// vertex
h.x=e*Math.cos(d),h.y=e*Math.sin(d),s.push(h.x,h.y,h.z),
// normal
c.push(0,0,1),
// uvs
u.x=(s[i]/e+1)/2,u.y=(s[i+1]/e+1)/2,l.push(u.x,u.y)}
// indices
for(i=1;i<=t;i++)o.push(i,i+1,0);
// build geometry
this.setIndex(o),this.addAttribute("position",new kn(s,3)),this.addAttribute("normal",new kn(c,3)),this.addAttribute("uv",new kn(l,2))}So.prototype=Object.create(Ln.prototype),So.prototype.constructor=So,To.prototype=Object.create(_o.prototype),To.prototype.constructor=To,Ao.prototype=Object.create(Ln.prototype),Ao.prototype.constructor=Ao,Lo.prototype=Object.create(jn.prototype),Lo.prototype.constructor=Lo,Po.prototype=Object.create(Ln.prototype),Po.prototype.constructor=Po,Co.prototype=Object.create(jn.prototype),Co.prototype.constructor=Co,Ro.prototype=Object.create(Ln.prototype),Ro.prototype.constructor=Ro,Oo.prototype=Object.create(jn.prototype),Oo.prototype.constructor=Oo,No.prototype=Object.create(Ln.prototype),No.prototype.constructor=No,No.prototype.toJSON=function(){var e=Ln.prototype.toJSON.call(this);return Do(this.parameters.shapes,e)},Io.prototype=Object.create(jn.prototype),Io.prototype.constructor=Io,Io.prototype.toJSON=function(){var e=jn.prototype.toJSON.call(this);return Do(this.parameters.shapes,e)},zo.prototype=Object.create(jn.prototype),zo.prototype.constructor=zo,ko.prototype=Object.create(Ln.prototype),ko.prototype.constructor=ko,Bo.prototype=Object.create(jn.prototype),Bo.prototype.constructor=Bo,Uo.prototype=Object.create(ko.prototype),Uo.prototype.constructor=Uo,Fo.prototype=Object.create(Bo.prototype),Fo.prototype.constructor=Fo,Go.prototype=Object.create(Ln.prototype),Go.prototype.constructor=Go,jo.prototype=Object.create(jn.prototype),jo.prototype.constructor=jo;var Ho=/* */Object.freeze({WireframeGeometry:Ca,ParametricGeometry:Ra,ParametricBufferGeometry:Oa,TetrahedronGeometry:Da,TetrahedronBufferGeometry:za,OctahedronGeometry:ka,OctahedronBufferGeometry:Ba,IcosahedronGeometry:Ua,IcosahedronBufferGeometry:Fa,DodecahedronGeometry:Ga,DodecahedronBufferGeometry:ja,PolyhedronGeometry:Na,PolyhedronBufferGeometry:Ia,TubeGeometry:Ha,TubeBufferGeometry:Va,TorusKnotGeometry:Wa,TorusKnotBufferGeometry:qa,TorusGeometry:Xa,TorusBufferGeometry:Ya,TextGeometry:So,TextBufferGeometry:To,SphereGeometry:Ao,SphereBufferGeometry:Lo,RingGeometry:Po,RingBufferGeometry:Co,PlaneGeometry:Wn,PlaneBufferGeometry:qn,LatheGeometry:Ro,LatheBufferGeometry:Oo,ShapeGeometry:No,ShapeBufferGeometry:Io,ExtrudeGeometry:wo,ExtrudeBufferGeometry:_o,EdgesGeometry:zo,ConeGeometry:Uo,ConeBufferGeometry:Fo,CylinderGeometry:ko,CylinderBufferGeometry:Bo,CircleGeometry:Go,CircleBufferGeometry:jo,BoxGeometry:Hn,BoxBufferGeometry:Vn});
/**
   * @author mrdoob / http://mrdoob.com/
   *
   * parameters = {
   *  color: <THREE.Color>
   * }
   */function Vo(e){Yn.call(this),this.type="ShadowMaterial",this.color=new hn(0),this.transparent=!0,this.setValues(e)}
/**
   * @author mrdoob / http://mrdoob.com/
   */
function Wo(e){lr.call(this,e),this.type="RawShaderMaterial"}
/**
   * @author WestLangley / http://github.com/WestLangley
   *
   * parameters = {
   *  color: <hex>,
   *  roughness: <float>,
   *  metalness: <float>,
   *  opacity: <float>,
   *
   *  map: new THREE.Texture( <Image> ),
   *
   *  lightMap: new THREE.Texture( <Image> ),
   *  lightMapIntensity: <float>
   *
   *  aoMap: new THREE.Texture( <Image> ),
   *  aoMapIntensity: <float>
   *
   *  emissive: <hex>,
   *  emissiveIntensity: <float>
   *  emissiveMap: new THREE.Texture( <Image> ),
   *
   *  bumpMap: new THREE.Texture( <Image> ),
   *  bumpScale: <float>,
   *
   *  normalMap: new THREE.Texture( <Image> ),
   *  normalMapType: THREE.TangentSpaceNormalMap,
   *  normalScale: <Vector2>,
   *
   *  displacementMap: new THREE.Texture( <Image> ),
   *  displacementScale: <float>,
   *  displacementBias: <float>,
   *
   *  roughnessMap: new THREE.Texture( <Image> ),
   *
   *  metalnessMap: new THREE.Texture( <Image> ),
   *
   *  alphaMap: new THREE.Texture( <Image> ),
   *
   *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),
   *  envMapIntensity: <float>
   *
   *  refractionRatio: <float>,
   *
   *  wireframe: <boolean>,
   *  wireframeLinewidth: <float>,
   *
   *  skinning: <bool>,
   *  morphTargets: <bool>,
   *  morphNormals: <bool>
   * }
   */
function qo(e){Yn.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new hn(16777215),// diffuse
this.roughness=.5,this.metalness=.5,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new hn(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=St,this.normalScale=new Lt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}
/**
   * @author WestLangley / http://github.com/WestLangley
   *
   * parameters = {
   *  reflectivity: <float>
   *  clearCoat: <float>
   *  clearCoatRoughness: <float>
   * }
   */
function Xo(e){qo.call(this),this.defines={PHYSICAL:""},this.type="MeshPhysicalMaterial",this.reflectivity=.5,// maps to F0 = 0.04
this.clearCoat=0,this.clearCoatRoughness=0,this.setValues(e)}
/**
   * @author mrdoob / http://mrdoob.com/
   * @author alteredq / http://alteredqualia.com/
   *
   * parameters = {
   *  color: <hex>,
   *  specular: <hex>,
   *  shininess: <float>,
   *  opacity: <float>,
   *
   *  map: new THREE.Texture( <Image> ),
   *
   *  lightMap: new THREE.Texture( <Image> ),
   *  lightMapIntensity: <float>
   *
   *  aoMap: new THREE.Texture( <Image> ),
   *  aoMapIntensity: <float>
   *
   *  emissive: <hex>,
   *  emissiveIntensity: <float>
   *  emissiveMap: new THREE.Texture( <Image> ),
   *
   *  bumpMap: new THREE.Texture( <Image> ),
   *  bumpScale: <float>,
   *
   *  normalMap: new THREE.Texture( <Image> ),
   *  normalMapType: THREE.TangentSpaceNormalMap,
   *  normalScale: <Vector2>,
   *
   *  displacementMap: new THREE.Texture( <Image> ),
   *  displacementScale: <float>,
   *  displacementBias: <float>,
   *
   *  specularMap: new THREE.Texture( <Image> ),
   *
   *  alphaMap: new THREE.Texture( <Image> ),
   *
   *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),
   *  combine: THREE.Multiply,
   *  reflectivity: <float>,
   *  refractionRatio: <float>,
   *
   *  wireframe: <boolean>,
   *  wireframeLinewidth: <float>,
   *
   *  skinning: <bool>,
   *  morphTargets: <bool>,
   *  morphNormals: <bool>
   * }
   */
function Yo(e){Yn.call(this),this.type="MeshPhongMaterial",this.color=new hn(16777215),// diffuse
this.specular=new hn(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new hn(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=St,this.normalScale=new Lt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=J,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}
/**
   * @author takahirox / http://github.com/takahirox
   *
   * parameters = {
   *  gradientMap: new THREE.Texture( <Image> )
   * }
   */
function Zo(e){Yo.call(this),this.defines={TOON:""},this.type="MeshToonMaterial",this.gradientMap=null,this.setValues(e)}
/**
   * @author mrdoob / http://mrdoob.com/
   * @author WestLangley / http://github.com/WestLangley
   *
   * parameters = {
   *  opacity: <float>,
   *
   *  bumpMap: new THREE.Texture( <Image> ),
   *  bumpScale: <float>,
   *
   *  normalMap: new THREE.Texture( <Image> ),
   *  normalMapType: THREE.TangentSpaceNormalMap,
   *  normalScale: <Vector2>,
   *
   *  displacementMap: new THREE.Texture( <Image> ),
   *  displacementScale: <float>,
   *  displacementBias: <float>,
   *
   *  wireframe: <boolean>,
   *  wireframeLinewidth: <float>
   *
   *  skinning: <bool>,
   *  morphTargets: <bool>,
   *  morphNormals: <bool>
   * }
   */
function Jo(e){Yn.call(this),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=St,this.normalScale=new Lt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}
/**
   * @author mrdoob / http://mrdoob.com/
   * @author alteredq / http://alteredqualia.com/
   *
   * parameters = {
   *  color: <hex>,
   *  opacity: <float>,
   *
   *  map: new THREE.Texture( <Image> ),
   *
   *  lightMap: new THREE.Texture( <Image> ),
   *  lightMapIntensity: <float>
   *
   *  aoMap: new THREE.Texture( <Image> ),
   *  aoMapIntensity: <float>
   *
   *  emissive: <hex>,
   *  emissiveIntensity: <float>
   *  emissiveMap: new THREE.Texture( <Image> ),
   *
   *  specularMap: new THREE.Texture( <Image> ),
   *
   *  alphaMap: new THREE.Texture( <Image> ),
   *
   *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),
   *  combine: THREE.Multiply,
   *  reflectivity: <float>,
   *  refractionRatio: <float>,
   *
   *  wireframe: <boolean>,
   *  wireframeLinewidth: <float>,
   *
   *  skinning: <bool>,
   *  morphTargets: <bool>,
   *  morphNormals: <bool>
   * }
   */
function Qo(e){Yn.call(this),this.type="MeshLambertMaterial",this.color=new hn(16777215),// diffuse
this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new hn(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=J,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}
/**
   * @author WestLangley / http://github.com/WestLangley
   *
   * parameters = {
   *  color: <hex>,
   *  opacity: <float>,
   *
   *  matcap: new THREE.Texture( <Image> ),
   *
   *  map: new THREE.Texture( <Image> ),
   *
   *  bumpMap: new THREE.Texture( <Image> ),
   *  bumpScale: <float>,
   *
   *  normalMap: new THREE.Texture( <Image> ),
   *  normalMapType: THREE.TangentSpaceNormalMap,
   *  normalScale: <Vector2>,
   *
   *  displacementMap: new THREE.Texture( <Image> ),
   *  displacementScale: <float>,
   *  displacementBias: <float>,
   *
   *  alphaMap: new THREE.Texture( <Image> ),
   *
   *  skinning: <bool>,
   *  morphTargets: <bool>,
   *  morphNormals: <bool>
   * }
   */
function Ko(e){Yn.call(this),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new hn(16777215),// diffuse
this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=St,this.normalScale=new Lt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.lights=!1,this.setValues(e)}
/**
   * @author alteredq / http://alteredqualia.com/
   *
   * parameters = {
   *  color: <hex>,
   *  opacity: <float>,
   *
   *  linewidth: <float>,
   *
   *  scale: <float>,
   *  dashSize: <float>,
   *  gapSize: <float>
   * }
   */
function $o(e){xa.call(this),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}Vo.prototype=Object.create(Yn.prototype),Vo.prototype.constructor=Vo,Vo.prototype.isShadowMaterial=!0,Vo.prototype.copy=function(e){return Yn.prototype.copy.call(this,e),this.color.copy(e.color),this},Wo.prototype=Object.create(lr.prototype),Wo.prototype.constructor=Wo,Wo.prototype.isRawShaderMaterial=!0,qo.prototype=Object.create(Yn.prototype),qo.prototype.constructor=qo,qo.prototype.isMeshStandardMaterial=!0,qo.prototype.copy=function(e){return Yn.prototype.copy.call(this,e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},Xo.prototype=Object.create(qo.prototype),Xo.prototype.constructor=Xo,Xo.prototype.isMeshPhysicalMaterial=!0,Xo.prototype.copy=function(e){return qo.prototype.copy.call(this,e),this.defines={PHYSICAL:""},this.reflectivity=e.reflectivity,this.clearCoat=e.clearCoat,this.clearCoatRoughness=e.clearCoatRoughness,this},Yo.prototype=Object.create(Yn.prototype),Yo.prototype.constructor=Yo,Yo.prototype.isMeshPhongMaterial=!0,Yo.prototype.copy=function(e){return Yn.prototype.copy.call(this,e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},Zo.prototype=Object.create(Yo.prototype),Zo.prototype.constructor=Zo,Zo.prototype.isMeshToonMaterial=!0,Zo.prototype.copy=function(e){return Yo.prototype.copy.call(this,e),this.gradientMap=e.gradientMap,this},Jo.prototype=Object.create(Yn.prototype),Jo.prototype.constructor=Jo,Jo.prototype.isMeshNormalMaterial=!0,Jo.prototype.copy=function(e){return Yn.prototype.copy.call(this,e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},Qo.prototype=Object.create(Yn.prototype),Qo.prototype.constructor=Qo,Qo.prototype.isMeshLambertMaterial=!0,Qo.prototype.copy=function(e){return Yn.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},Ko.prototype=Object.create(Yn.prototype),Ko.prototype.constructor=Ko,Ko.prototype.isMeshMatcapMaterial=!0,Ko.prototype.copy=function(e){return Yn.prototype.copy.call(this,e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},$o.prototype=Object.create(xa.prototype),$o.prototype.constructor=$o,$o.prototype.isLineDashedMaterial=!0,$o.prototype.copy=function(e){return xa.prototype.copy.call(this,e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this};var es=/* */Object.freeze({ShadowMaterial:Vo,SpriteMaterial:pa,RawShaderMaterial:Wo,ShaderMaterial:lr,PointsMaterial:Ea,MeshPhysicalMaterial:Xo,MeshStandardMaterial:qo,MeshPhongMaterial:Yo,MeshToonMaterial:Zo,MeshNormalMaterial:Jo,MeshLambertMaterial:Qo,MeshDepthMaterial:Gi,MeshDistanceMaterial:ji,MeshBasicMaterial:dr,MeshMatcapMaterial:Ko,LineDashedMaterial:$o,LineBasicMaterial:xa,Material:Yn}),ts={
// same as Array.prototype.slice, but also works on typed arrays
arraySlice:function(e,t,n){return ts.isTypedArray(e)?new e.constructor(e.subarray(t,void 0!==n?n:e.length)):e.slice(t,n)},
// converts an array to a specific type
convertArray:function(e,t,n){return!e||// let 'undefined' and 'null' pass
!n&&e.constructor===t?e:"number"==typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e)},isTypedArray:function(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)},
// returns an array by which times and values can be sorted
getKeyframeOrder:function(e){for(var t=e.length,n=new Array(t),r=0;r!==t;++r)n[r]=r;return n.sort(function(t,n){return e[t]-e[n]}),n},
// uses the array previously returned by 'getKeyframeOrder' to sort data
sortedArray:function(e,t,n){for(var r=e.length,i=new e.constructor(r),a=0,o=0;o!==r;++a)for(var s=n[a]*t,c=0;c!==t;++c)i[o++]=e[s+c];return i},
// function for parsing AOS keyframe formats
flattenJSON:function(e,t,n,r){for(var i=1,a=e[0];void 0!==a&&void 0===a[r];)a=e[i++];if(void 0!==a){// no data
var o=a[r];if(void 0!==o)// no data
if(Array.isArray(o))do{void 0!==(o=a[r])&&(t.push(a.time),n.push.apply(n,o)),a=e[i++]}while(void 0!==a);else if(void 0!==o.toArray)
// ...assume THREE.Math-ish
do{void 0!==(o=a[r])&&(t.push(a.time),o.toArray(n,n.length)),a=e[i++]}while(void 0!==a);else
// otherwise push as-is
do{void 0!==(o=a[r])&&(t.push(a.time),n.push(o)),a=e[i++]}while(void 0!==a)}}};
/**
   * @author tschw
   * @author Ben Houston / http://clara.io/
   * @author David Sarno / http://lighthaus.us/
   */
/**
   * Abstract base class of interpolants over parametric samples.
   *
   * The parameter domain is one dimensional, typically the time or a path
   * along a curve defined by the data.
   *
   * The sample values can have any dimensionality and derived classes may
   * apply special interpretations to the data.
   *
   * This class provides the interval seek in a Template Method, deferring
   * the actual interpolation to derived classes.
   *
   * Time complexity is O(1) for linear access crossing at most two points
   * and O(log N) for random access, where N is the number of positions.
   *
   * References:
   *
   * 		http://www.oodesign.com/template-method-pattern.html
   *
   * @author tschw
   */
function ns(e,t,n,r){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=void 0!==r?r:new t.constructor(n),this.sampleValues=t,this.valueSize=n}
/**
   * Fast and simple cubic spline interpolant.
   *
   * It was derived from a Hermitian construction setting the first derivative
   * at each sample position to the linear slope between neighboring positions
   * over their parameter interval.
   *
   * @author tschw
   */
function rs(e,t,n,r){ns.call(this,e,t,n,r),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}
/**
   * @author tschw
   */
function is(e,t,n,r){ns.call(this,e,t,n,r)}
/**
   *
   * Interpolant that evaluates to the sample value at the position preceeding
   * the parameter.
   *
   * @author tschw
   */
function as(e,t,n,r){ns.call(this,e,t,n,r)}
/**
   *
   * A timed sequence of keyframes for a specific property.
   *
   *
   * @author Ben Houston / http://clara.io/
   * @author David Sarno / http://lighthaus.us/
   * @author tschw
   */
function os(e,t,n,r){if(void 0===e)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===t||0===t.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=ts.convertArray(t,this.TimeBufferType),this.values=ts.convertArray(n,this.ValueBufferType),this.setInterpolation(r||this.DefaultInterpolation)}
// Static methods
/**
   *
   * A Track of Boolean keyframe values.
   *
   *
   * @author Ben Houston / http://clara.io/
   * @author David Sarno / http://lighthaus.us/
   * @author tschw
   */
function ss(e,t,n){os.call(this,e,t,n)}
/**
   *
   * A Track of keyframe values that represent color.
   *
   *
   * @author Ben Houston / http://clara.io/
   * @author David Sarno / http://lighthaus.us/
   * @author tschw
   */
function cs(e,t,n,r){os.call(this,e,t,n,r)}
/**
   *
   * A Track of numeric keyframe values.
   *
   * @author Ben Houston / http://clara.io/
   * @author David Sarno / http://lighthaus.us/
   * @author tschw
   */
function ls(e,t,n,r){os.call(this,e,t,n,r)}
/**
   * Spherical linear unit quaternion interpolant.
   *
   * @author tschw
   */
function hs(e,t,n,r){ns.call(this,e,t,n,r)}
/**
   *
   * A Track of quaternion keyframe values.
   *
   * @author Ben Houston / http://clara.io/
   * @author David Sarno / http://lighthaus.us/
   * @author tschw
   */
function us(e,t,n,r){os.call(this,e,t,n,r)}
/**
   *
   * A Track that interpolates Strings
   *
   *
   * @author Ben Houston / http://clara.io/
   * @author David Sarno / http://lighthaus.us/
   * @author tschw
   */
function ds(e,t,n,r){os.call(this,e,t,n,r)}
/**
   *
   * A Track of vectored keyframe values.
   *
   *
   * @author Ben Houston / http://clara.io/
   * @author David Sarno / http://lighthaus.us/
   * @author tschw
   */
function fs(e,t,n,r){os.call(this,e,t,n,r)}
/**
   *
   * Reusable set of Tracks that represent an animation.
   *
   * @author Ben Houston / http://clara.io/
   * @author David Sarno / http://lighthaus.us/
   */
function ps(e,t,n){this.name=e,this.tracks=n,this.duration=void 0!==t?t:-1,this.uuid=At.generateUUID(),
// this means it should figure out its duration by scanning the tracks
this.duration<0&&this.resetDuration()}function ms(e){if(void 0===e.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");var t=function(e){switch(e.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return ls;case"vector":case"vector2":case"vector3":case"vector4":return fs;case"color":return cs;case"quaternion":return us;case"bool":case"boolean":return ss;case"string":return ds}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+e)}(e.type);if(void 0===e.times){var n=[],r=[];ts.flattenJSON(e.keys,n,r,"value"),e.times=n,e.values=r}
// derived classes can define a static parse method
return void 0!==t.parse?t.parse(e):new t(e.name,e.times,e.values,e.interpolation)}Object.assign(ns.prototype,{evaluate:function(e){var t=this.parameterPositions,n=this._cachedIndex,r=t[n],i=t[n-1];e:{t:{var a;n:{
//- See http://jsperf.com/comparison-to-undefined/3
//- slower code:
//-
//- 				if ( t >= t1 || t1 === undefined ) {
r:if(!(e<r)){for(var o=n+2;;){if(void 0===r){if(e<i)break r;
// after end
return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,e,i)}if(n===o)break;// this loop
if(i=r,e<(r=t[++n]))
// we have arrived at the sought interval
break t}
// prepare binary search on the right side of the index
a=t.length;break n}
//- slower code:
//-					if ( t < t0 || t0 === undefined ) {
if(e>=i)
// the interval is valid
break e;
// looping?
var s=t[1];e<s&&(n=2,// + 1, using the scan for the details
i=s);
// linear reverse scan
for(o=n-2;;){if(void 0===i)
// before start
return this._cachedIndex=0,this.beforeStart_(0,e,r);if(n===o)break;// this loop
if(r=i,e>=(i=t[--n-1]))
// we have arrived at the sought interval
break t}
// prepare binary search on the left side of the index
a=n,n=0}// linear scan
// binary search
for(;n<a;){var c=n+a>>>1;e<t[c]?a=c:n=c+1}
// check boundary cases, again
if(r=t[n],void 0===(i=t[n-1]))return this._cachedIndex=0,this.beforeStart_(0,e,r);if(void 0===r)return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,i,e)}// seek
this._cachedIndex=n,this.intervalChanged_(n,i,r)}// validate_interval
return this.interpolate_(n,i,e,r)},settings:null,// optional, subclass-specific settings structure
// Note: The indirection allows central control of many interpolants.
// --- Protected interface
DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(e){for(
// copies a sample value to the result buffer
var t=this.resultBuffer,n=this.sampleValues,r=this.valueSize,i=e*r,a=0;a!==r;++a)t[a]=n[i+a];return t},
// Template methods for derived classes:
interpolate_:function(){throw new Error("call to abstract method");
// implementations shall return this.resultBuffer
},intervalChanged_:function(){
// empty
}}),
//!\ DECLARE ALIAS AFTER assign prototype !
Object.assign(ns.prototype,{
//( 0, t, t0 ), returns this.resultBuffer
beforeStart_:ns.prototype.copySampleValue_,
//( N-1, tN-1, t ), returns this.resultBuffer
afterEnd_:ns.prototype.copySampleValue_}),rs.prototype=Object.assign(Object.create(ns.prototype),{constructor:rs,DefaultSettings_:{endingStart:dt,endingEnd:dt},intervalChanged_:function(e,t,n){var r=this.parameterPositions,i=e-2,a=e+1,o=r[i],s=r[a];if(void 0===o)switch(this.getSettings_().endingStart){case 2401:
// f'(t0) = 0
i=e,o=2*t-n;break;case 2402:o=t+r[
// use the other end of the curve
i=r.length-2]-r[i+1];break;default:// ZeroCurvatureEnding
// f''(t0) = 0 a.k.a. Natural Spline
i=e,o=n}if(void 0===s)switch(this.getSettings_().endingEnd){case 2401:
// f'(tN) = 0
a=e,s=2*n-t;break;case 2402:
// use the other end of the curve
a=1,s=n+r[1]-r[0];break;default:// ZeroCurvatureEnding
// f''(tN) = 0, a.k.a. Natural Spline
a=e-1,s=t}var c=.5*(n-t),l=this.valueSize;this._weightPrev=c/(t-o),this._weightNext=c/(s-n),this._offsetPrev=i*l,this._offsetNext=a*l},interpolate_:function(e,t,n,r){
// combine data linearly
for(var i=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=e*o,c=s-o,l=this._offsetPrev,h=this._offsetNext,u=this._weightPrev,d=this._weightNext,f=(n-t)/(r-t),p=f*f,m=p*f,g=-u*m+2*u*p-u*f,v=(1+u)*m+(-1.5-2*u)*p+(-.5+u)*f+1,y=(-1-d)*m+(1.5+d)*p+.5*f,b=d*m-d*p,x=0
// evaluate polynomials
;x!==o;++x)i[x]=g*a[l+x]+v*a[c+x]+y*a[s+x]+b*a[h+x];return i}}),is.prototype=Object.assign(Object.create(ns.prototype),{constructor:is,interpolate_:function(e,t,n,r){for(var i=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=e*o,c=s-o,l=(n-t)/(r-t),h=1-l,u=0;u!==o;++u)i[u]=a[c+u]*h+a[s+u]*l;return i}}),as.prototype=Object.assign(Object.create(ns.prototype),{constructor:as,interpolate_:function(e/*, t0, t, t1 */){return this.copySampleValue_(e-1)}}),Object.assign(os,{
// Serialization (in static context, because of constructor invocation
// and automatic invocation of .toJSON):
toJSON:function(e){var t,n=e.constructor;
// derived classes can define a static toJSON method
if(void 0!==n.toJSON)t=n.toJSON(e);else{
// by default, we assume the data can be serialized as-is
t={name:e.name,times:ts.convertArray(e.times,Array),values:ts.convertArray(e.values,Array)};var r=e.getInterpolation();r!==e.DefaultInterpolation&&(t.interpolation=r)}// mandatory
return t.type=e.ValueTypeName,t}}),Object.assign(os.prototype,{constructor:os,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:2301,InterpolantFactoryMethodDiscrete:function(e){return new as(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodLinear:function(e){return new is(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodSmooth:function(e){return new rs(this.times,this.values,this.getValueSize(),e)},setInterpolation:function(e){var t;switch(e){case 2300:t=this.InterpolantFactoryMethodDiscrete;break;case 2301:t=this.InterpolantFactoryMethodLinear;break;case 2302:t=this.InterpolantFactoryMethodSmooth}if(void 0===t){var n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){
// fall back to default, unless the default itself is messed up
if(e===this.DefaultInterpolation)throw new Error(n);// fatal, in this case
this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return 2300;case this.InterpolantFactoryMethodLinear:return 2301;case this.InterpolantFactoryMethodSmooth:return 2302}},getValueSize:function(){return this.values.length/this.times.length},
// move all keyframes either forwards or backwards in time
shift:function(e){if(0!==e)for(var t=this.times,n=0,r=t.length;n!==r;++n)t[n]+=e;return this},
// scale all keyframe times by a factor (useful for frame <-> seconds conversions)
scale:function(e){if(1!==e)for(var t=this.times,n=0,r=t.length;n!==r;++n)t[n]*=e;return this},
// removes keyframes before and after animation without changing any values within the range [startTime, endTime].
// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values
trim:function(e,t){for(var n=this.times,r=n.length,i=0,a=r-1;i!==r&&n[i]<e;)++i;for(;-1!==a&&n[a]>t;)--a;// inclusive -> exclusive bound
if(++a,0!==i||a!==r){
// empty tracks are forbidden, so keep at least one keyframe
i>=a&&(i=(a=Math.max(a,1))-1);var o=this.getValueSize();this.times=ts.arraySlice(n,i,a),this.values=ts.arraySlice(this.values,i*o,a*o)}return this},
// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable
validate:function(){var e=!0,t=this.getValueSize();t-Math.floor(t)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);var n=this.times,r=this.values,i=n.length;0===i&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);for(var a=null,o=0;o!==i;o++){var s=n[o];if("number"==typeof s&&isNaN(s)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,o,s),e=!1;break}if(null!==a&&a>s){console.error("THREE.KeyframeTrack: Out of order keys.",this,o,s,a),e=!1;break}a=s}if(void 0!==r&&ts.isTypedArray(r)){o=0;for(var c=r.length;o!==c;++o){var l=r[o];if(isNaN(l)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,o,l),e=!1;break}}}return e},
// removes equivalent sequential keys as common in morph target sequences
// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)
optimize:function(){for(var e=this.times,t=this.values,n=this.getValueSize(),r=2302===this.getInterpolation(),i=1,a=e.length-1,o=1;o<a;++o){var s=!1,c=e[o];
// remove adjacent keyframes scheduled at the same time
if(c!==e[o+1]&&(1!==o||c!==c[0]))if(r)s=!0;else for(
// remove unnecessary keyframes same as their neighbors
var l=o*n,h=l-n,u=l+n,d=0;d!==n;++d){var f=t[l+d];if(f!==t[h+d]||f!==t[u+d]){s=!0;break}}
// in-place compaction
if(s){if(o!==i){e[i]=e[o];var p=o*n,m=i*n;for(d=0;d!==n;++d)t[m+d]=t[p+d]}++i}}
// flush last keyframe (compaction looks ahead)
if(a>0){e[i]=e[a];for(p=a*n,m=i*n,d=0;d!==n;++d)t[m+d]=t[p+d];++i}return i!==e.length&&(this.times=ts.arraySlice(e,0,i),this.values=ts.arraySlice(t,0,i*n)),this},clone:function(){var e=ts.arraySlice(this.times,0),t=ts.arraySlice(this.values,0),n=new(0,this.constructor)(this.name,e,t);
// Interpolant argument to constructor is not saved, so copy the factory method directly.
return n.createInterpolant=this.createInterpolant,n}}),ss.prototype=Object.assign(Object.create(os.prototype),{constructor:ss,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:2300,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),cs.prototype=Object.assign(Object.create(os.prototype),{constructor:cs,ValueTypeName:"color"}),ls.prototype=Object.assign(Object.create(os.prototype),{constructor:ls,ValueTypeName:"number"}),hs.prototype=Object.assign(Object.create(ns.prototype),{constructor:hs,interpolate_:function(e,t,n,r){for(var i=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=e*o,c=(n-t)/(r-t),l=s+o;s!==l;s+=4)Pt.slerpFlat(i,0,a,s-o,a,s,c);return i}}),us.prototype=Object.assign(Object.create(os.prototype),{constructor:us,ValueTypeName:"quaternion",
// ValueBufferType is inherited
DefaultInterpolation:2301,InterpolantFactoryMethodLinear:function(e){return new hs(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodSmooth:void 0}),ds.prototype=Object.assign(Object.create(os.prototype),{constructor:ds,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:2300,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),fs.prototype=Object.assign(Object.create(os.prototype),{constructor:fs,ValueTypeName:"vector"}),Object.assign(ps,{parse:function(e){for(var t=[],n=e.tracks,r=1/(e.fps||1),i=0,a=n.length;i!==a;++i)t.push(ms(n[i]).scale(r));return new ps(e.name,e.duration,t)},toJSON:function(e){for(var t=[],n=e.tracks,r={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid},i=0,a=n.length;i!==a;++i)t.push(os.toJSON(n[i]));return r},CreateFromMorphTargetSequence:function(e,t,n,r){for(var i=t.length,a=[],o=0;o<i;o++){var s=[],c=[];s.push((o+i-1)%i,o,(o+1)%i),c.push(0,1,0);var l=ts.getKeyframeOrder(s);s=ts.sortedArray(s,1,l),c=ts.sortedArray(c,1,l),
// if there is a key at the first frame, duplicate it as the
// last frame as well for perfect loop.
r||0!==s[0]||(s.push(i),c.push(c[0])),a.push(new ls(".morphTargetInfluences["+t[o].name+"]",s,c).scale(1/n))}return new ps(e,-1,a)},findByName:function(e,t){var n=e;if(!Array.isArray(e)){var r=e;n=r.geometry&&r.geometry.animations||r.animations}for(var i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null},CreateClipsFromMorphTargetSequences:function(e,t,n){
// sort morph target names into animation groups based
// patterns like Walk_001, Walk_002, Run_001, Run_002
for(var r={},i=/^([\w-]*?)([\d]+)$/,a=0,o=e.length
// tested with https://regex101.com/ on trick sequences
// such flamingo_flyA_003, flamingo_run1_003, crdeath0059
;a<o;a++){var s=e[a],c=s.name.match(i);if(c&&c.length>1){var l=r[u=c[1]];l||(r[u]=l=[]),l.push(s)}}var h=[];for(var u in r)h.push(ps.CreateFromMorphTargetSequence(u,r[u],t,n));return h},
// parse the animation.hierarchy format
parseAnimation:function(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;for(var n=function(e,t,n,r,i){
// only return track if there are actually keys.
if(0!==n.length){var a=[],o=[];ts.flattenJSON(n,a,o,r),
// empty keys are filtered out, so check again
0!==a.length&&i.push(new e(t,a,o))}},r=[],i=e.name||"default",a=e.length||-1,o=e.fps||30,s=e.hierarchy||[],c=0;c<s.length;c++){var l=s[c].keys;
// skip empty tracks
if(l&&0!==l.length)
// process morph targets
if(l[0].morphTargets){for(
// figure out all morph targets used in this track
var h={},u=0;u<l.length;u++)if(l[u].morphTargets)for(var d=0;d<l[u].morphTargets.length;d++)h[l[u].morphTargets[d]]=-1;
// create a track for each morph target with all zero
// morphTargetInfluences except for the keys in which
// the morphTarget is named.
for(var f in h){var p=[],m=[];for(d=0;d!==l[u].morphTargets.length;++d){var g=l[u];p.push(g.time),m.push(g.morphTarget===f?1:0)}r.push(new ls(".morphTargetInfluence["+f+"]",p,m))}a=h.length*(o||1)}else{
// ...assume skeletal animation
var v=".bones["+t[c].name+"]";n(fs,v+".position",l,"pos",r),n(us,v+".quaternion",l,"rot",r),n(fs,v+".scale",l,"scl",r)}}return 0===r.length?null:new ps(i,a,r)}}),Object.assign(ps.prototype,{resetDuration:function(){for(var e=0,t=0,n=this.tracks.length;t!==n;++t){var r=this.tracks[t];e=Math.max(e,r.times[r.times.length-1])}return this.duration=e,this},trim:function(){for(var e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this},validate:function(){for(var e=!0,t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e},optimize:function(){for(var e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this},clone:function(){for(var e=[],t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new ps(this.name,this.duration,e)}});
/**
   * @author mrdoob / http://mrdoob.com/
   */
var gs={enabled:!1,files:{},add:function(e,t){!1!==this.enabled&&(
// console.log( 'THREE.Cache', 'Adding key:', key );
this.files[e]=t)},get:function(e){if(!1!==this.enabled)
// console.log( 'THREE.Cache', 'Checking key:', key );
return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}};
/**
   * @author mrdoob / http://mrdoob.com/
   */function vs(e,t,n){var r=this,i=!1,a=0,o=0,s=void 0;
// Refer to #5689 for the reason why we don't set .onStart
// in the constructor
this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(e){o++,!1===i&&void 0!==r.onStart&&r.onStart(e,a,o),i=!0},this.itemEnd=function(e){a++,void 0!==r.onProgress&&r.onProgress(e,a,o),a===o&&(i=!1,void 0!==r.onLoad&&r.onLoad())},this.itemError=function(e){void 0!==r.onError&&r.onError(e)},this.resolveURL=function(e){return s?s(e):e},this.setURLModifier=function(e){return s=e,this}}var ys=new vs,bs={};
/**
   * @author mrdoob / http://mrdoob.com/
   */function xs(e){this.manager=void 0!==e?e:ys}
/**
   * @author bhouston / http://clara.io/
   */
function ws(e){this.manager=void 0!==e?e:ys}
/**
   * @author mrdoob / http://mrdoob.com/
   *
   * Abstract Base class to block based textures loader (dds, pvr, ...)
   */
function _s(e){this.manager=void 0!==e?e:ys,
// override in sub classes
this._parser=null}
/**
   * @author Nikos M. / https://github.com/foo123/
   *
   * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)
   */
function Ms(e){this.manager=void 0!==e?e:ys,
// override in sub classes
this._parser=null}
/**
   * @author mrdoob / http://mrdoob.com/
   */
function Es(e){this.manager=void 0!==e?e:ys}
/**
   * @author mrdoob / http://mrdoob.com/
   */
function Ss(e){this.manager=void 0!==e?e:ys}
/**
   * @author mrdoob / http://mrdoob.com/
   */
function Ts(e){this.manager=void 0!==e?e:ys}
/**
   * @author zz85 / http://www.lab4games.net/zz85/blog
   * Extensible curve object
   *
   * Some common of curve methods:
   * .getPoint( t, optionalTarget ), .getTangent( t )
   * .getPointAt( u, optionalTarget ), .getTangentAt( u )
   * .getPoints(), .getSpacedPoints()
   * .getLength()
   * .updateArcLengths()
   *
   * This following curves inherit from THREE.Curve:
   *
   * -- 2D curves --
   * THREE.ArcCurve
   * THREE.CubicBezierCurve
   * THREE.EllipseCurve
   * THREE.LineCurve
   * THREE.QuadraticBezierCurve
   * THREE.SplineCurve
   *
   * -- 3D curves --
   * THREE.CatmullRomCurve3
   * THREE.CubicBezierCurve3
   * THREE.LineCurve3
   * THREE.QuadraticBezierCurve3
   *
   * A series of curves can be represented as a THREE.CurvePath.
   *
   **/
/**************************************************************
   *	Abstract Curve base class
   **************************************************************/
function As(){this.type="Curve",this.arcLengthDivisions=200}function Ls(e,t,n,r,i,a,o,s){As.call(this),this.type="EllipseCurve",this.aX=e||0,this.aY=t||0,this.xRadius=n||1,this.yRadius=r||1,this.aStartAngle=i||0,this.aEndAngle=a||2*Math.PI,this.aClockwise=o||!1,this.aRotation=s||0}function Ps(e,t,n,r,i,a){Ls.call(this,e,t,n,n,r,i,a),this.type="ArcCurve"}
/**
   * @author zz85 https://github.com/zz85
   *
   * Centripetal CatmullRom Curve - which is useful for avoiding
   * cusps and self-intersections in non-uniform catmull rom curves.
   * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf
   *
   * curve.type accepts centripetal(default), chordal and catmullrom
   * curve.tension is used for catmullrom which defaults to 0.5
   */
/*
  Based on an optimized c++ solution in
   - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/
   - http://ideone.com/NoEbVM

  This CubicPoly class could be used for reusing some variables and calculations,
  but for three.js curve use, it could be possible inlined and flatten into a single function call
  which can be placed in CurveUtils.
  */
function Cs(){var e=0,t=0,n=0,r=0;
/*
  	 * Compute coefficients for a cubic polynomial
  	 *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3
  	 * such that
  	 *   p(0) = x0, p(1) = x1
  	 *  and
  	 *   p'(0) = t0, p'(1) = t1.
  	 */function i(i,a,o,s){e=i,t=o,n=-3*i+3*a-2*o-s,r=2*i-2*a+o+s}return{initCatmullRom:function(e,t,n,r,a){i(t,n,a*(n-e),a*(r-t))},initNonuniformCatmullRom:function(e,t,n,r,a,o,s){
// compute tangents when parameterized in [t1,t2]
var c=(t-e)/a-(n-e)/(a+o)+(n-t)/o,l=(n-t)/o-(r-t)/(o+s)+(r-n)/s;i(t,n,
// rescale tangents for parametrization in [0,1]
c*=o,l*=o)},calc:function(i){var a=i*i;return e+t*i+n*a+r*(a*i)}}}
//
Object.assign(xs.prototype,{load:function(e,t,n,r){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);var i=this,a=gs.get(e);if(void 0!==a)return i.manager.itemStart(e),setTimeout(function(){t&&t(a),i.manager.itemEnd(e)},0),a;
// Check if request is duplicate
if(void 0===bs[e]){
// Check for data: URI
var o=e.match(/^data:(.*?)(;base64)?,(.*)$/);
// Safari can not handle Data URIs through XMLHttpRequest so process manually
if(o){var s=o[1],c=!!o[2],l=o[3];l=decodeURIComponent(l),c&&(l=atob(l));try{var h,u=(this.responseType||"").toLowerCase();switch(u){case"arraybuffer":case"blob":for(var d=new Uint8Array(l.length),f=0;f<l.length;f++)d[f]=l.charCodeAt(f);h="blob"===u?new Blob([d.buffer],{type:s}):d.buffer;break;case"document":var p=new DOMParser;h=p.parseFromString(l,s);break;case"json":h=JSON.parse(l);break;default:// 'text' or other
h=l}
// Wait for next browser tick like standard XMLHttpRequest event dispatching does
setTimeout(function(){t&&t(h),i.manager.itemEnd(e)},0)}catch(t){
// Wait for next browser tick like standard XMLHttpRequest event dispatching does
setTimeout(function(){r&&r(t),i.manager.itemError(e),i.manager.itemEnd(e)},0)}}else{
// Initialise array for duplicate requests
bs[e]=[],bs[e].push({onLoad:t,onProgress:n,onError:r});var m=new XMLHttpRequest;for(var g in m.open("GET",e,!0),m.addEventListener("load",function(t){var n=this.response;gs.add(e,n);var r=bs[e];if(delete bs[e],200===this.status||0===this.status){
// Some browsers return HTTP Status 0 when using non-http protocol
// e.g. 'file://' or 'data://'. Handle as success.
0===this.status&&console.warn("THREE.FileLoader: HTTP Status 0 received.");for(var a=0,o=r.length;a<o;a++){(s=r[a]).onLoad&&s.onLoad(n)}i.manager.itemEnd(e)}else{for(a=0,o=r.length;a<o;a++){var s;(s=r[a]).onError&&s.onError(t)}i.manager.itemError(e),i.manager.itemEnd(e)}},!1),m.addEventListener("progress",function(t){for(var n=bs[e],r=0,i=n.length;r<i;r++){var a=n[r];a.onProgress&&a.onProgress(t)}},!1),m.addEventListener("error",function(t){var n=bs[e];delete bs[e];for(var r=0,a=n.length;r<a;r++){var o=n[r];o.onError&&o.onError(t)}i.manager.itemError(e),i.manager.itemEnd(e)},!1),m.addEventListener("abort",function(t){var n=bs[e];delete bs[e];for(var r=0,a=n.length;r<a;r++){var o=n[r];o.onError&&o.onError(t)}i.manager.itemError(e),i.manager.itemEnd(e)},!1),void 0!==this.responseType&&(m.responseType=this.responseType),void 0!==this.withCredentials&&(m.withCredentials=this.withCredentials),m.overrideMimeType&&m.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain"),this.requestHeader)m.setRequestHeader(g,this.requestHeader[g]);m.send(null)}return i.manager.itemStart(e),m}bs[e].push({onLoad:t,onProgress:n,onError:r})},setPath:function(e){return this.path=e,this},setResponseType:function(e){return this.responseType=e,this},setWithCredentials:function(e){return this.withCredentials=e,this},setMimeType:function(e){return this.mimeType=e,this},setRequestHeader:function(e){return this.requestHeader=e,this}}),Object.assign(ws.prototype,{load:function(e,t,n,r){var i=this,a=new xs(i.manager);a.setPath(i.path),a.load(e,function(e){t(i.parse(JSON.parse(e)))},n,r)},parse:function(e){for(var t=[],n=0;n<e.length;n++){var r=ps.parse(e[n]);t.push(r)}return t},setPath:function(e){return this.path=e,this}}),Object.assign(_s.prototype,{load:function(e,t,n,r){var i=this,a=[],o=new Aa;o.image=a;var s=new xs(this.manager);function c(c){s.load(e[c],function(e){var n=i._parser(e,!0);a[c]={width:n.width,height:n.height,format:n.format,mipmaps:n.mipmaps},6===(l+=1)&&(1===n.mipmapCount&&(o.minFilter=ye),o.format=n.format,o.needsUpdate=!0,t&&t(o))},n,r)}if(s.setPath(this.path),s.setResponseType("arraybuffer"),Array.isArray(e))for(var l=0,h=0,u=e.length;h<u;++h)c(h);else
// compressed cubemap texture stored in a single DDS file
s.load(e,function(e){var n=i._parser(e,!0);if(n.isCubemap)for(var r=n.mipmaps.length/n.mipmapCount,s=0;s<r;s++){a[s]={mipmaps:[]};for(var c=0;c<n.mipmapCount;c++)a[s].mipmaps.push(n.mipmaps[s*n.mipmapCount+c]),a[s].format=n.format,a[s].width=n.width,a[s].height=n.height}else o.image.width=n.width,o.image.height=n.height,o.mipmaps=n.mipmaps;1===n.mipmapCount&&(o.minFilter=ye),o.format=n.format,o.needsUpdate=!0,t&&t(o)},n,r);return o},setPath:function(e){return this.path=e,this}}),Object.assign(Ms.prototype,{load:function(e,t,n,r){var i=this,a=new Jt,o=new xs(this.manager);return o.setResponseType("arraybuffer"),o.setPath(this.path),o.load(e,function(e){var n=i._parser(e);n&&(void 0!==n.image?a.image=n.image:void 0!==n.data&&(a.image.width=n.width,a.image.height=n.height,a.image.data=n.data),a.wrapS=void 0!==n.wrapS?n.wrapS:fe,a.wrapT=void 0!==n.wrapT?n.wrapT:fe,a.magFilter=void 0!==n.magFilter?n.magFilter:ye,a.minFilter=void 0!==n.minFilter?n.minFilter:xe,a.anisotropy=void 0!==n.anisotropy?n.anisotropy:1,void 0!==n.format&&(a.format=n.format),void 0!==n.type&&(a.type=n.type),void 0!==n.mipmaps&&(a.mipmaps=n.mipmaps),1===n.mipmapCount&&(a.minFilter=ye),a.needsUpdate=!0,t&&t(a,n))},n,r),a},setPath:function(e){return this.path=e,this}}),Object.assign(Es.prototype,{crossOrigin:"anonymous",load:function(e,t,n,r){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);var i=this,a=gs.get(e);if(void 0!==a)return i.manager.itemStart(e),setTimeout(function(){t&&t(a),i.manager.itemEnd(e)},0),a;var o=document.createElementNS("http://www.w3.org/1999/xhtml","img");function s(){o.removeEventListener("load",s,!1),o.removeEventListener("error",c,!1),gs.add(e,this),t&&t(this),i.manager.itemEnd(e)}function c(t){o.removeEventListener("load",s,!1),o.removeEventListener("error",c,!1),r&&r(t),i.manager.itemError(e),i.manager.itemEnd(e)}return o.addEventListener("load",s,!1),o.addEventListener("error",c,!1),"data:"!==e.substr(0,5)&&void 0!==this.crossOrigin&&(o.crossOrigin=this.crossOrigin),i.manager.itemStart(e),o.src=e,o},setCrossOrigin:function(e){return this.crossOrigin=e,this},setPath:function(e){return this.path=e,this}}),Object.assign(Ss.prototype,{crossOrigin:"anonymous",load:function(e,t,n,r){var i=new Sr,a=new Es(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);var o=0;function s(n){a.load(e[n],function(e){i.images[n]=e,6===++o&&(i.needsUpdate=!0,t&&t(i))},void 0,r)}for(var c=0;c<e.length;++c)s(c);return i},setCrossOrigin:function(e){return this.crossOrigin=e,this},setPath:function(e){return this.path=e,this}}),Object.assign(Ts.prototype,{crossOrigin:"anonymous",load:function(e,t,n,r){var i=new Wt,a=new Es(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,function(n){i.image=n;
// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.
var r=e.search(/\.jpe?g($|\?)/i)>0||0===e.search(/^data\:image\/jpeg/);i.format=r?Ie:De,i.needsUpdate=!0,void 0!==t&&t(i)},n,r),i},setCrossOrigin:function(e){return this.crossOrigin=e,this},setPath:function(e){return this.path=e,this}}),Object.assign(As.prototype,{
// Virtual base class method to overwrite and implement in subclasses
//	- t [0 .. 1]
getPoint:function(){return console.warn("THREE.Curve: .getPoint() not implemented."),null},
// Get point at relative position in curve according to arc length
// - u [0 .. 1]
getPointAt:function(e,t){var n=this.getUtoTmapping(e);return this.getPoint(n,t)},
// Get sequence of points using getPoint( t )
getPoints:function(e){void 0===e&&(e=5);for(var t=[],n=0;n<=e;n++)t.push(this.getPoint(n/e));return t},
// Get sequence of points using getPointAt( u )
getSpacedPoints:function(e){void 0===e&&(e=5);for(var t=[],n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t},
// Get total curve arc length
getLength:function(){var e=this.getLengths();return e[e.length-1]},
// Get list of cumulative segment lengths
getLengths:function(e){if(void 0===e&&(e=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var t,n,r=[],i=this.getPoint(0),a=0;for(r.push(0),n=1;n<=e;n++)a+=(t=this.getPoint(n/e)).distanceTo(i),r.push(a),i=t;return this.cacheArcLengths=r,r;// { sums: cache, sum: sum }; Sum is in the last element.
},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},
// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant
getUtoTmapping:function(e,t){var n,r=this.getLengths(),i=0,a=r.length;// The targeted u distance value to get
n=t||e*r[a-1];
// binary search for the index with largest value smaller than target u distance
for(var o,s=0,c=a-1;s<=c;)if((// less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats
o=r[i=Math.floor(s+(c-s)/2)]-n)<0)s=i+1;else{if(!(o>0)){c=i;break;
// DONE
}c=i-1}if(r[i=c]===n)return i/(a-1);
// we could get finer grain at lengths, or use simple interpolation between two points
var l=r[i];return(i+(n-l)/(r[i+1]-l))/(a-1)},
// Returns a unit vector tangent at t
// In case any sub curve does not implement its tangent derivation,
// 2 points a small delta apart will be used to find its gradient
// which seems to give a reasonable approximation
getTangent:function(e){var t=e-1e-4,n=e+1e-4;
// Capping in case of danger
t<0&&(t=0),n>1&&(n=1);var r=this.getPoint(t);return this.getPoint(n).clone().sub(r).normalize()},getTangentAt:function(e){var t=this.getUtoTmapping(e);return this.getTangent(t)},computeFrenetFrames:function(e,t){
// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf
var n,r,i,a=new Ct,o=[],s=[],c=[],l=new Ct,h=new tn;
// compute the tangent vectors for each segment on the curve
for(n=0;n<=e;n++)r=n/e,o[n]=this.getTangentAt(r),o[n].normalize();
// select an initial normal vector perpendicular to the first tangent vector,
// and in the direction of the minimum tangent xyz component
s[0]=new Ct,c[0]=new Ct;var u=Number.MAX_VALUE,d=Math.abs(o[0].x),f=Math.abs(o[0].y),p=Math.abs(o[0].z);
// compute the slowly-varying normal and binormal vectors for each segment on the curve
for(d<=u&&(u=d,a.set(1,0,0)),f<=u&&(u=f,a.set(0,1,0)),p<=u&&a.set(0,0,1),l.crossVectors(o[0],a).normalize(),s[0].crossVectors(o[0],l),c[0].crossVectors(o[0],s[0]),n=1;n<=e;n++)s[n]=s[n-1].clone(),c[n]=c[n-1].clone(),l.crossVectors(o[n-1],o[n]),l.length()>Number.EPSILON&&(l.normalize(),i=Math.acos(At.clamp(o[n-1].dot(o[n]),-1,1)),// clamp for floating pt errors
s[n].applyMatrix4(h.makeRotationAxis(l,i))),c[n].crossVectors(o[n],s[n]);
// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same
if(!0===t)for(i=Math.acos(At.clamp(s[0].dot(s[e]),-1,1)),i/=e,o[0].dot(l.crossVectors(s[0],s[e]))>0&&(i=-i),n=1;n<=e;n++)
// twist a little...
s[n].applyMatrix4(h.makeRotationAxis(o[n],i*n)),c[n].crossVectors(o[n],s[n]);return{tangents:o,normals:s,binormals:c}},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.arcLengthDivisions=e.arcLengthDivisions,this},toJSON:function(){var e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e},fromJSON:function(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}),Ls.prototype=Object.create(As.prototype),Ls.prototype.constructor=Ls,Ls.prototype.isEllipseCurve=!0,Ls.prototype.getPoint=function(e,t){
// ensures that deltaAngle is 0 .. 2 PI
for(var n=t||new Lt,r=2*Math.PI,i=this.aEndAngle-this.aStartAngle,a=Math.abs(i)<Number.EPSILON;i<0;)i+=r;for(;i>r;)i-=r;i<Number.EPSILON&&(i=a?0:r),!0!==this.aClockwise||a||(i===r?i=-r:i-=r);var o=this.aStartAngle+e*i,s=this.aX+this.xRadius*Math.cos(o),c=this.aY+this.yRadius*Math.sin(o);if(0!==this.aRotation){var l=Math.cos(this.aRotation),h=Math.sin(this.aRotation),u=s-this.aX,d=c-this.aY;
// Rotate the point about the center of the ellipse.
s=u*l-d*h+this.aX,c=u*h+d*l+this.aY}return n.set(s,c)},Ls.prototype.copy=function(e){return As.prototype.copy.call(this,e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this},Ls.prototype.toJSON=function(){var e=As.prototype.toJSON.call(this);return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e},Ls.prototype.fromJSON=function(e){return As.prototype.fromJSON.call(this,e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this},Ps.prototype=Object.create(Ls.prototype),Ps.prototype.constructor=Ps,Ps.prototype.isArcCurve=!0;var Rs=new Ct,Os=new Cs,Ns=new Cs,Is=new Cs;function Ds(e,t,n,r){As.call(this),this.type="CatmullRomCurve3",this.points=e||[],this.closed=t||!1,this.curveType=n||"centripetal",this.tension=r||.5}
/**
   * @author zz85 / http://www.lab4games.net/zz85/blog
   *
   * Bezier Curves formulas obtained from
   * http://en.wikipedia.org/wiki/Bézier_curve
   */
function zs(e,t,n,r,i){var a=.5*(r-t),o=.5*(i-n),s=e*e;return(2*n-2*r+a+o)*(e*s)+(-3*n+3*r-2*a-o)*s+a*e+n}
//
function ks(e,t,n,r){return function(e,t){var n=1-e;return n*n*t}(e,t)+function(e,t){return 2*(1-e)*e*t}(e,n)+function(e,t){return e*e*t}(e,r)}
//
function Bs(e,t,n,r,i){return function(e,t){var n=1-e;return n*n*n*t}(e,t)+function(e,t){var n=1-e;return 3*n*n*e*t}(e,n)+function(e,t){return 3*(1-e)*e*e*t}(e,r)+function(e,t){return e*e*e*t}(e,i)}function Us(e,t,n,r){As.call(this),this.type="CubicBezierCurve",this.v0=e||new Lt,this.v1=t||new Lt,this.v2=n||new Lt,this.v3=r||new Lt}function Fs(e,t,n,r){As.call(this),this.type="CubicBezierCurve3",this.v0=e||new Ct,this.v1=t||new Ct,this.v2=n||new Ct,this.v3=r||new Ct}function Gs(e,t){As.call(this),this.type="LineCurve",this.v1=e||new Lt,this.v2=t||new Lt}function js(e,t){As.call(this),this.type="LineCurve3",this.v1=e||new Ct,this.v2=t||new Ct}function Hs(e,t,n){As.call(this),this.type="QuadraticBezierCurve",this.v0=e||new Lt,this.v1=t||new Lt,this.v2=n||new Lt}function Vs(e,t,n){As.call(this),this.type="QuadraticBezierCurve3",this.v0=e||new Ct,this.v1=t||new Ct,this.v2=n||new Ct}function Ws(e/* array of Vector2 */){As.call(this),this.type="SplineCurve",this.points=e||[]}Ds.prototype=Object.create(As.prototype),Ds.prototype.constructor=Ds,Ds.prototype.isCatmullRomCurve3=!0,Ds.prototype.getPoint=function(e,t){var n,r,i,a,o=t||new Ct,s=this.points,c=s.length,l=(c-(this.closed?0:1))*e,h=Math.floor(l),u=l-h;if(this.closed?h+=h>0?0:(Math.floor(Math.abs(h)/c)+1)*c:0===u&&h===c-1&&(h=c-2,u=1),// 4 points
this.closed||h>0?n=s[(h-1)%c]:(
// extrapolate first point
Rs.subVectors(s[0],s[1]).add(s[0]),n=Rs),r=s[h%c],i=s[(h+1)%c],this.closed||h+2<c?a=s[(h+2)%c]:(
// extrapolate last point
Rs.subVectors(s[c-1],s[c-2]).add(s[c-1]),a=Rs),"centripetal"===this.curveType||"chordal"===this.curveType){
// init Centripetal / Chordal Catmull-Rom
var d="chordal"===this.curveType?.5:.25,f=Math.pow(n.distanceToSquared(r),d),p=Math.pow(r.distanceToSquared(i),d),m=Math.pow(i.distanceToSquared(a),d);
// safety check for repeated points
p<1e-4&&(p=1),f<1e-4&&(f=p),m<1e-4&&(m=p),Os.initNonuniformCatmullRom(n.x,r.x,i.x,a.x,f,p,m),Ns.initNonuniformCatmullRom(n.y,r.y,i.y,a.y,f,p,m),Is.initNonuniformCatmullRom(n.z,r.z,i.z,a.z,f,p,m)}else"catmullrom"===this.curveType&&(Os.initCatmullRom(n.x,r.x,i.x,a.x,this.tension),Ns.initCatmullRom(n.y,r.y,i.y,a.y,this.tension),Is.initCatmullRom(n.z,r.z,i.z,a.z,this.tension));return o.set(Os.calc(u),Ns.calc(u),Is.calc(u)),o},Ds.prototype.copy=function(e){As.prototype.copy.call(this,e),this.points=[];for(var t=0,n=e.points.length;t<n;t++){var r=e.points[t];this.points.push(r.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this},Ds.prototype.toJSON=function(){var e=As.prototype.toJSON.call(this);e.points=[];for(var t=0,n=this.points.length;t<n;t++){var r=this.points[t];e.points.push(r.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e},Ds.prototype.fromJSON=function(e){As.prototype.fromJSON.call(this,e),this.points=[];for(var t=0,n=e.points.length;t<n;t++){var r=e.points[t];this.points.push((new Ct).fromArray(r))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this},Us.prototype=Object.create(As.prototype),Us.prototype.constructor=Us,Us.prototype.isCubicBezierCurve=!0,Us.prototype.getPoint=function(e,t){var n=t||new Lt,r=this.v0,i=this.v1,a=this.v2,o=this.v3;return n.set(Bs(e,r.x,i.x,a.x,o.x),Bs(e,r.y,i.y,a.y,o.y)),n},Us.prototype.copy=function(e){return As.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this},Us.prototype.toJSON=function(){var e=As.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e},Us.prototype.fromJSON=function(e){return As.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this},Fs.prototype=Object.create(As.prototype),Fs.prototype.constructor=Fs,Fs.prototype.isCubicBezierCurve3=!0,Fs.prototype.getPoint=function(e,t){var n=t||new Ct,r=this.v0,i=this.v1,a=this.v2,o=this.v3;return n.set(Bs(e,r.x,i.x,a.x,o.x),Bs(e,r.y,i.y,a.y,o.y),Bs(e,r.z,i.z,a.z,o.z)),n},Fs.prototype.copy=function(e){return As.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this},Fs.prototype.toJSON=function(){var e=As.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e},Fs.prototype.fromJSON=function(e){return As.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this},Gs.prototype=Object.create(As.prototype),Gs.prototype.constructor=Gs,Gs.prototype.isLineCurve=!0,Gs.prototype.getPoint=function(e,t){var n=t||new Lt;return 1===e?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n},
// Line curve is linear, so we can overwrite default getPointAt
Gs.prototype.getPointAt=function(e,t){return this.getPoint(e,t)},Gs.prototype.getTangent=function(){return this.v2.clone().sub(this.v1).normalize()},Gs.prototype.copy=function(e){return As.prototype.copy.call(this,e),this.v1.copy(e.v1),this.v2.copy(e.v2),this},Gs.prototype.toJSON=function(){var e=As.prototype.toJSON.call(this);return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e},Gs.prototype.fromJSON=function(e){return As.prototype.fromJSON.call(this,e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this},js.prototype=Object.create(As.prototype),js.prototype.constructor=js,js.prototype.isLineCurve3=!0,js.prototype.getPoint=function(e,t){var n=t||new Ct;return 1===e?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n},
// Line curve is linear, so we can overwrite default getPointAt
js.prototype.getPointAt=function(e,t){return this.getPoint(e,t)},js.prototype.copy=function(e){return As.prototype.copy.call(this,e),this.v1.copy(e.v1),this.v2.copy(e.v2),this},js.prototype.toJSON=function(){var e=As.prototype.toJSON.call(this);return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e},js.prototype.fromJSON=function(e){return As.prototype.fromJSON.call(this,e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this},Hs.prototype=Object.create(As.prototype),Hs.prototype.constructor=Hs,Hs.prototype.isQuadraticBezierCurve=!0,Hs.prototype.getPoint=function(e,t){var n=t||new Lt,r=this.v0,i=this.v1,a=this.v2;return n.set(ks(e,r.x,i.x,a.x),ks(e,r.y,i.y,a.y)),n},Hs.prototype.copy=function(e){return As.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this},Hs.prototype.toJSON=function(){var e=As.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e},Hs.prototype.fromJSON=function(e){return As.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this},Vs.prototype=Object.create(As.prototype),Vs.prototype.constructor=Vs,Vs.prototype.isQuadraticBezierCurve3=!0,Vs.prototype.getPoint=function(e,t){var n=t||new Ct,r=this.v0,i=this.v1,a=this.v2;return n.set(ks(e,r.x,i.x,a.x),ks(e,r.y,i.y,a.y),ks(e,r.z,i.z,a.z)),n},Vs.prototype.copy=function(e){return As.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this},Vs.prototype.toJSON=function(){var e=As.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e},Vs.prototype.fromJSON=function(e){return As.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this},Ws.prototype=Object.create(As.prototype),Ws.prototype.constructor=Ws,Ws.prototype.isSplineCurve=!0,Ws.prototype.getPoint=function(e,t){var n=t||new Lt,r=this.points,i=(r.length-1)*e,a=Math.floor(i),o=i-a,s=r[0===a?a:a-1],c=r[a],l=r[a>r.length-2?r.length-1:a+1],h=r[a>r.length-3?r.length-1:a+2];return n.set(zs(o,s.x,c.x,l.x,h.x),zs(o,s.y,c.y,l.y,h.y)),n},Ws.prototype.copy=function(e){As.prototype.copy.call(this,e),this.points=[];for(var t=0,n=e.points.length;t<n;t++){var r=e.points[t];this.points.push(r.clone())}return this},Ws.prototype.toJSON=function(){var e=As.prototype.toJSON.call(this);e.points=[];for(var t=0,n=this.points.length;t<n;t++){var r=this.points[t];e.points.push(r.toArray())}return e},Ws.prototype.fromJSON=function(e){As.prototype.fromJSON.call(this,e),this.points=[];for(var t=0,n=e.points.length;t<n;t++){var r=e.points[t];this.points.push((new Lt).fromArray(r))}return this};var qs=/* */Object.freeze({ArcCurve:Ps,CatmullRomCurve3:Ds,CubicBezierCurve:Us,CubicBezierCurve3:Fs,EllipseCurve:Ls,LineCurve:Gs,LineCurve3:js,QuadraticBezierCurve:Hs,QuadraticBezierCurve3:Vs,SplineCurve:Ws});
/**
   * @author zz85 / http://www.lab4games.net/zz85/blog
   *
   **/
/**************************************************************
   *	Curved Path - a curve path is simply a array of connected
   *  curves, but retains the api of a curve
   **************************************************************/function Xs(){As.call(this),this.type="CurvePath",this.curves=[],this.autoClose=!1}
/**
   * @author zz85 / http://www.lab4games.net/zz85/blog
   * Creates free form 2d path using series of points, lines or curves.
   **/
function Ys(e){Xs.call(this),this.type="Path",this.currentPoint=new Lt,e&&this.setFromPoints(e)}
/**
   * @author zz85 / http://www.lab4games.net/zz85/blog
   * Defines a 2d shape plane using paths.
   **/
// STEP 1 Create a path.
// STEP 2 Turn path into shape.
// STEP 3 ExtrudeGeometry takes in Shape/Shapes
// STEP 3a - Extract points from each shape, turn to vertices
// STEP 3b - Triangulate each shape, add faces.
function Zs(e){Ys.call(this,e),this.uuid=At.generateUUID(),this.type="Shape",this.holes=[]}
/**
   * @author mrdoob / http://mrdoob.com/
   * @author alteredq / http://alteredqualia.com/
   */
function Js(e,t){En.call(this),this.type="Light",this.color=new hn(e),this.intensity=void 0!==t?t:1,this.receiveShadow=void 0}
/**
   * @author alteredq / http://alteredqualia.com/
   */
function Qs(e,t,n){Js.call(this,e,n),this.type="HemisphereLight",this.castShadow=void 0,this.position.copy(En.DefaultUp),this.updateMatrix(),this.groundColor=new hn(t)}
/**
   * @author mrdoob / http://mrdoob.com/
   */
function Ks(e){this.camera=e,this.bias=0,this.radius=1,this.mapSize=new Lt(512,512),this.map=null,this.matrix=new tn}
/**
   * @author mrdoob / http://mrdoob.com/
   */
function $s(){Ks.call(this,new Zi(50,1,.5,500))}
/**
   * @author alteredq / http://alteredqualia.com/
   */
function ec(e,t,n,r,i,a){Js.call(this,e,t),this.type="SpotLight",this.position.copy(En.DefaultUp),this.updateMatrix(),this.target=new En,Object.defineProperty(this,"power",{get:function(){
// intensity = power per solid angle.
// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf
return this.intensity*Math.PI},set:function(e){
// intensity = power per solid angle.
// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf
this.intensity=e/Math.PI}}),this.distance=void 0!==n?n:0,this.angle=void 0!==r?r:Math.PI/3,this.penumbra=void 0!==i?i:0,this.decay=void 0!==a?a:1,// for physically correct lights, should be 2.
this.shadow=new $s}
/**
   * @author mrdoob / http://mrdoob.com/
   */
function tc(e,t,n,r){Js.call(this,e,t),this.type="PointLight",Object.defineProperty(this,"power",{get:function(){
// intensity = power per solid angle.
// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf
return 4*this.intensity*Math.PI},set:function(e){
// intensity = power per solid angle.
// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf
this.intensity=e/(4*Math.PI)}}),this.distance=void 0!==n?n:0,this.decay=void 0!==r?r:1,// for physically correct lights, should be 2.
this.shadow=new Ks(new Zi(90,1,.5,500))}
/**
   * @author alteredq / http://alteredqualia.com/
   * @author arose / http://github.com/arose
   */
function nc(e,t,n,r,i,a){Yi.call(this),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=void 0!==e?e:-1,this.right=void 0!==t?t:1,this.top=void 0!==n?n:1,this.bottom=void 0!==r?r:-1,this.near=void 0!==i?i:.1,this.far=void 0!==a?a:2e3,this.updateProjectionMatrix()}
/**
   * @author mrdoob / http://mrdoob.com/
   */
function rc(){Ks.call(this,new nc(-5,5,5,-5,.5,500))}
/**
   * @author mrdoob / http://mrdoob.com/
   * @author alteredq / http://alteredqualia.com/
   */
function ic(e,t){Js.call(this,e,t),this.type="DirectionalLight",this.position.copy(En.DefaultUp),this.updateMatrix(),this.target=new En,this.shadow=new rc}
/**
   * @author mrdoob / http://mrdoob.com/
   */
function ac(e,t){Js.call(this,e,t),this.type="AmbientLight",this.castShadow=void 0}
/**
   * @author abelnation / http://github.com/abelnation
   */
function oc(e,t,n,r){Js.call(this,e,t),this.type="RectAreaLight",this.width=void 0!==n?n:10,this.height=void 0!==r?r:10}
/**
   * @author mrdoob / http://mrdoob.com/
   */
function sc(e){this.manager=void 0!==e?e:ys,this.textures={}}Xs.prototype=Object.assign(Object.create(As.prototype),{constructor:Xs,add:function(e){this.curves.push(e)},closePath:function(){
// Add a line curve if start and end of lines are not connected
var e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new Gs(t,e))},
// To get accurate point with reference to
// entire path distance at time t,
// following has to be done:
// 1. Length of each sub path have to be known
// 2. Locate and identify type of curve
// 3. Get t for the curve
// 4. Return curve.getPointAt(t')
getPoint:function(e){
// To think about boundaries points.
for(var t=e*this.getLength(),n=this.getCurveLengths(),r=0;r<n.length;){if(n[r]>=t){var i=n[r]-t,a=this.curves[r],o=a.getLength(),s=0===o?0:1-i/o;return a.getPointAt(s)}r++}return null;
// loop where sum != 0, sum > d , sum+1 <d
},
// We cannot use the default THREE.Curve getPoint() with getLength() because in
// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath
// getPoint() depends on getLength
getLength:function(){var e=this.getCurveLengths();return e[e.length-1]},
// cacheLengths must be recalculated.
updateArcLengths:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()},
// Compute lengths and cache them
// We cannot overwrite getLengths() because UtoT mapping uses it.
getCurveLengths:function(){
// We use cache values if curves and cache array are same length
if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;
// Get length of sub-curve
// Push sums into cached array
for(var e=[],t=0,n=0,r=this.curves.length;n<r;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e},getSpacedPoints:function(e){void 0===e&&(e=40);for(var t=[],n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t},getPoints:function(e){e=e||12;for(var t,n=[],r=0,i=this.curves;r<i.length;r++)for(var a=i[r],o=a&&a.isEllipseCurve?2*e:a&&(a.isLineCurve||a.isLineCurve3)?1:a&&a.isSplineCurve?e*a.points.length:e,s=a.getPoints(o),c=0;c<s.length;c++){var l=s[c];t&&t.equals(l)||(// ensures no consecutive points are duplicates
n.push(l),t=l)}return this.autoClose&&n.length>1&&!n[n.length-1].equals(n[0])&&n.push(n[0]),n},copy:function(e){As.prototype.copy.call(this,e),this.curves=[];for(var t=0,n=e.curves.length;t<n;t++){var r=e.curves[t];this.curves.push(r.clone())}return this.autoClose=e.autoClose,this},toJSON:function(){var e=As.prototype.toJSON.call(this);e.autoClose=this.autoClose,e.curves=[];for(var t=0,n=this.curves.length;t<n;t++){var r=this.curves[t];e.curves.push(r.toJSON())}return e},fromJSON:function(e){As.prototype.fromJSON.call(this,e),this.autoClose=e.autoClose,this.curves=[];for(var t=0,n=e.curves.length;t<n;t++){var r=e.curves[t];this.curves.push((new qs[r.type]).fromJSON(r))}return this}}),Ys.prototype=Object.assign(Object.create(Xs.prototype),{constructor:Ys,setFromPoints:function(e){this.moveTo(e[0].x,e[0].y);for(var t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y)},moveTo:function(e,t){this.currentPoint.set(e,t);// TODO consider referencing vectors instead of copying?
},lineTo:function(e,t){var n=new Gs(this.currentPoint.clone(),new Lt(e,t));this.curves.push(n),this.currentPoint.set(e,t)},quadraticCurveTo:function(e,t,n,r){var i=new Hs(this.currentPoint.clone(),new Lt(e,t),new Lt(n,r));this.curves.push(i),this.currentPoint.set(n,r)},bezierCurveTo:function(e,t,n,r,i,a){var o=new Us(this.currentPoint.clone(),new Lt(e,t),new Lt(n,r),new Lt(i,a));this.curves.push(o),this.currentPoint.set(i,a)},splineThru:function(e/*Array of Vector*/){var t=new Ws([this.currentPoint.clone()].concat(e));this.curves.push(t),this.currentPoint.copy(e[e.length-1])},arc:function(e,t,n,r,i,a){var o=this.currentPoint.x,s=this.currentPoint.y;this.absarc(e+o,t+s,n,r,i,a)},absarc:function(e,t,n,r,i,a){this.absellipse(e,t,n,n,r,i,a)},ellipse:function(e,t,n,r,i,a,o,s){var c=this.currentPoint.x,l=this.currentPoint.y;this.absellipse(e+c,t+l,n,r,i,a,o,s)},absellipse:function(e,t,n,r,i,a,o,s){var c=new Ls(e,t,n,r,i,a,o,s);if(this.curves.length>0){
// if a previous curve is present, attempt to join
var l=c.getPoint(0);l.equals(this.currentPoint)||this.lineTo(l.x,l.y)}this.curves.push(c);var h=c.getPoint(1);this.currentPoint.copy(h)},copy:function(e){return Xs.prototype.copy.call(this,e),this.currentPoint.copy(e.currentPoint),this},toJSON:function(){var e=Xs.prototype.toJSON.call(this);return e.currentPoint=this.currentPoint.toArray(),e},fromJSON:function(e){return Xs.prototype.fromJSON.call(this,e),this.currentPoint.fromArray(e.currentPoint),this}}),Zs.prototype=Object.assign(Object.create(Ys.prototype),{constructor:Zs,getPointsHoles:function(e){for(var t=[],n=0,r=this.holes.length;n<r;n++)t[n]=this.holes[n].getPoints(e);return t},
// get points of shape and holes (keypoints based on segments parameter)
extractPoints:function(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}},copy:function(e){Ys.prototype.copy.call(this,e),this.holes=[];for(var t=0,n=e.holes.length;t<n;t++){var r=e.holes[t];this.holes.push(r.clone())}return this},toJSON:function(){var e=Ys.prototype.toJSON.call(this);e.uuid=this.uuid,e.holes=[];for(var t=0,n=this.holes.length;t<n;t++){var r=this.holes[t];e.holes.push(r.toJSON())}return e},fromJSON:function(e){Ys.prototype.fromJSON.call(this,e),this.uuid=e.uuid,this.holes=[];for(var t=0,n=e.holes.length;t<n;t++){var r=e.holes[t];this.holes.push((new Ys).fromJSON(r))}return this}}),Js.prototype=Object.assign(Object.create(En.prototype),{constructor:Js,isLight:!0,copy:function(e){return En.prototype.copy.call(this,e),this.color.copy(e.color),this.intensity=e.intensity,this},toJSON:function(e){var t=En.prototype.toJSON.call(this,e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.penumbra&&(t.object.penumbra=this.penumbra),void 0!==this.shadow&&(t.object.shadow=this.shadow.toJSON()),t}}),Qs.prototype=Object.assign(Object.create(Js.prototype),{constructor:Qs,isHemisphereLight:!0,copy:function(e){return Js.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}}),Object.assign(Ks.prototype,{copy:function(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){var e={};return 0!==this.bias&&(e.bias=this.bias),1!==this.radius&&(e.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}),$s.prototype=Object.assign(Object.create(Ks.prototype),{constructor:$s,isSpotLightShadow:!0,update:function(e){var t=this.camera,n=2*At.RAD2DEG*e.angle,r=this.mapSize.width/this.mapSize.height,i=e.distance||t.far;n===t.fov&&r===t.aspect&&i===t.far||(t.fov=n,t.aspect=r,t.far=i,t.updateProjectionMatrix())}}),ec.prototype=Object.assign(Object.create(Js.prototype),{constructor:ec,isSpotLight:!0,copy:function(e){return Js.prototype.copy.call(this,e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}),tc.prototype=Object.assign(Object.create(Js.prototype),{constructor:tc,isPointLight:!0,copy:function(e){return Js.prototype.copy.call(this,e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}),nc.prototype=Object.assign(Object.create(Yi.prototype),{constructor:nc,isOrthographicCamera:!0,copy:function(e,t){return Yi.prototype.copy.call(this,e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this},setViewOffset:function(e,t,n,r,i,a){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=r,this.view.width=i,this.view.height=a,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){var e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,r=(this.top+this.bottom)/2,i=n-e,a=n+e,o=r+t,s=r-t;if(null!==this.view&&this.view.enabled){var c=this.zoom/(this.view.width/this.view.fullWidth),l=this.zoom/(this.view.height/this.view.fullHeight),h=(this.right-this.left)/this.view.width,u=(this.top-this.bottom)/this.view.height;a=(i+=h*(this.view.offsetX/c))+h*(this.view.width/c),s=(o-=u*(this.view.offsetY/l))-u*(this.view.height/l)}this.projectionMatrix.makeOrthographic(i,a,o,s,this.near,this.far),this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(e){var t=En.prototype.toJSON.call(this,e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}),rc.prototype=Object.assign(Object.create(Ks.prototype),{constructor:rc}),ic.prototype=Object.assign(Object.create(Js.prototype),{constructor:ic,isDirectionalLight:!0,copy:function(e){return Js.prototype.copy.call(this,e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}),ac.prototype=Object.assign(Object.create(Js.prototype),{constructor:ac,isAmbientLight:!0}),oc.prototype=Object.assign(Object.create(Js.prototype),{constructor:oc,isRectAreaLight:!0,copy:function(e){return Js.prototype.copy.call(this,e),this.width=e.width,this.height=e.height,this},toJSON:function(e){var t=Js.prototype.toJSON.call(this,e);return t.object.width=this.width,t.object.height=this.height,t}}),Object.assign(sc.prototype,{load:function(e,t,n,r){var i=this,a=new xs(i.manager);a.setPath(i.path),a.load(e,function(e){t(i.parse(JSON.parse(e)))},n,r)},parse:function(e){var t=this.textures;function n(e){return void 0===t[e]&&console.warn("THREE.MaterialLoader: Undefined texture",e),t[e]}var r=new es[e.type];
// Shader Material
if(void 0!==e.uuid&&(r.uuid=e.uuid),void 0!==e.name&&(r.name=e.name),void 0!==e.color&&r.color.setHex(e.color),void 0!==e.roughness&&(r.roughness=e.roughness),void 0!==e.metalness&&(r.metalness=e.metalness),void 0!==e.emissive&&r.emissive.setHex(e.emissive),void 0!==e.specular&&r.specular.setHex(e.specular),void 0!==e.shininess&&(r.shininess=e.shininess),void 0!==e.clearCoat&&(r.clearCoat=e.clearCoat),void 0!==e.clearCoatRoughness&&(r.clearCoatRoughness=e.clearCoatRoughness),void 0!==e.vertexColors&&(r.vertexColors=e.vertexColors),void 0!==e.fog&&(r.fog=e.fog),void 0!==e.flatShading&&(r.flatShading=e.flatShading),void 0!==e.blending&&(r.blending=e.blending),void 0!==e.combine&&(r.combine=e.combine),void 0!==e.side&&(r.side=e.side),void 0!==e.opacity&&(r.opacity=e.opacity),void 0!==e.transparent&&(r.transparent=e.transparent),void 0!==e.alphaTest&&(r.alphaTest=e.alphaTest),void 0!==e.depthTest&&(r.depthTest=e.depthTest),void 0!==e.depthWrite&&(r.depthWrite=e.depthWrite),void 0!==e.colorWrite&&(r.colorWrite=e.colorWrite),void 0!==e.wireframe&&(r.wireframe=e.wireframe),void 0!==e.wireframeLinewidth&&(r.wireframeLinewidth=e.wireframeLinewidth),void 0!==e.wireframeLinecap&&(r.wireframeLinecap=e.wireframeLinecap),void 0!==e.wireframeLinejoin&&(r.wireframeLinejoin=e.wireframeLinejoin),void 0!==e.rotation&&(r.rotation=e.rotation),1!==e.linewidth&&(r.linewidth=e.linewidth),void 0!==e.dashSize&&(r.dashSize=e.dashSize),void 0!==e.gapSize&&(r.gapSize=e.gapSize),void 0!==e.scale&&(r.scale=e.scale),void 0!==e.polygonOffset&&(r.polygonOffset=e.polygonOffset),void 0!==e.polygonOffsetFactor&&(r.polygonOffsetFactor=e.polygonOffsetFactor),void 0!==e.polygonOffsetUnits&&(r.polygonOffsetUnits=e.polygonOffsetUnits),void 0!==e.skinning&&(r.skinning=e.skinning),void 0!==e.morphTargets&&(r.morphTargets=e.morphTargets),void 0!==e.dithering&&(r.dithering=e.dithering),void 0!==e.visible&&(r.visible=e.visible),void 0!==e.userData&&(r.userData=e.userData),void 0!==e.uniforms)for(var i in e.uniforms){var a=e.uniforms[i];switch(r.uniforms[i]={},a.type){case"t":r.uniforms[i].value=n(a.value);break;case"c":r.uniforms[i].value=(new hn).setHex(a.value);break;case"v2":r.uniforms[i].value=(new Lt).fromArray(a.value);break;case"v3":r.uniforms[i].value=(new Ct).fromArray(a.value);break;case"v4":r.uniforms[i].value=(new qt).fromArray(a.value);break;case"m3":r.uniforms[i].value=(new Rt).fromArray(a.value);case"m4":r.uniforms[i].value=(new tn).fromArray(a.value);break;default:r.uniforms[i].value=a.value}}if(void 0!==e.defines&&(r.defines=e.defines),void 0!==e.vertexShader&&(r.vertexShader=e.vertexShader),void 0!==e.fragmentShader&&(r.fragmentShader=e.fragmentShader),void 0!==e.extensions)for(var o in e.extensions)r.extensions[o]=e.extensions[o];
// Deprecated
if(void 0!==e.shading&&(r.flatShading=1===e.shading),// THREE.FlatShading
// for PointsMaterial
void 0!==e.size&&(r.size=e.size),void 0!==e.sizeAttenuation&&(r.sizeAttenuation=e.sizeAttenuation),
// maps
void 0!==e.map&&(r.map=n(e.map)),void 0!==e.matcap&&(r.matcap=n(e.matcap)),void 0!==e.alphaMap&&(r.alphaMap=n(e.alphaMap),r.transparent=!0),void 0!==e.bumpMap&&(r.bumpMap=n(e.bumpMap)),void 0!==e.bumpScale&&(r.bumpScale=e.bumpScale),void 0!==e.normalMap&&(r.normalMap=n(e.normalMap)),void 0!==e.normalMapType&&(r.normalMapType=e.normalMapType),void 0!==e.normalScale){var s=e.normalScale;!1===Array.isArray(s)&&(
// Blender exporter used to export a scalar. See #7459
s=[s,s]),r.normalScale=(new Lt).fromArray(s)}return void 0!==e.displacementMap&&(r.displacementMap=n(e.displacementMap)),void 0!==e.displacementScale&&(r.displacementScale=e.displacementScale),void 0!==e.displacementBias&&(r.displacementBias=e.displacementBias),void 0!==e.roughnessMap&&(r.roughnessMap=n(e.roughnessMap)),void 0!==e.metalnessMap&&(r.metalnessMap=n(e.metalnessMap)),void 0!==e.emissiveMap&&(r.emissiveMap=n(e.emissiveMap)),void 0!==e.emissiveIntensity&&(r.emissiveIntensity=e.emissiveIntensity),void 0!==e.specularMap&&(r.specularMap=n(e.specularMap)),void 0!==e.envMap&&(r.envMap=n(e.envMap)),void 0!==e.envMapIntensity&&(r.envMapIntensity=e.envMapIntensity),void 0!==e.reflectivity&&(r.reflectivity=e.reflectivity),void 0!==e.lightMap&&(r.lightMap=n(e.lightMap)),void 0!==e.lightMapIntensity&&(r.lightMapIntensity=e.lightMapIntensity),void 0!==e.aoMap&&(r.aoMap=n(e.aoMap)),void 0!==e.aoMapIntensity&&(r.aoMapIntensity=e.aoMapIntensity),void 0!==e.gradientMap&&(r.gradientMap=n(e.gradientMap)),r},setPath:function(e){return this.path=e,this},setTextures:function(e){return this.textures=e,this}});
/**
   * @author Don McCurdy / https://www.donmccurdy.com
   */
var cc={decodeText:function(e){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(e);
// Avoid the String.fromCharCode.apply(null, array) shortcut, which
// throws a "maximum call stack size exceeded" error for large arrays.
for(var t="",n=0,r=e.length;n<r;n++)
// Implicitly assumes little-endian.
t+=String.fromCharCode(e[n]);
// Merges multi-byte utf-8 characters.
return decodeURIComponent(escape(t))},extractUrlBase:function(e){var t=e.lastIndexOf("/");return-1===t?"./":e.substr(0,t+1)}};
/**
   * @author mrdoob / http://mrdoob.com/
   */function lc(e){this.manager=void 0!==e?e:ys}Object.assign(lc.prototype,{load:function(e,t,n,r){var i=this,a=new xs(i.manager);a.setPath(i.path),a.load(e,function(e){t(i.parse(JSON.parse(e)))},n,r)},parse:function(e){var t=new jn,n=e.data.index;if(void 0!==n){var r=new hc[n.type](n.array);t.setIndex(new Pn(r,1))}var i=e.data.attributes;for(var a in i){var o=i[a],s=new Pn(r=new hc[o.type](o.array),o.itemSize,o.normalized);void 0!==o.name&&(s.name=o.name),t.addAttribute(a,s)}var c=e.data.morphAttributes;if(c)for(var a in c){for(var l=c[a],h=[],u=0,d=l.length;u<d;u++){o=l[u],s=new Pn(r=new hc[o.type](o.array),o.itemSize,o.normalized);void 0!==o.name&&(s.name=o.name),h.push(s)}t.morphAttributes[a]=h}var f=e.data.groups||e.data.drawcalls||e.data.offsets;if(void 0!==f){u=0;for(var p=f.length;u!==p;++u){var m=f[u];t.addGroup(m.start,m.count,m.materialIndex)}}var g=e.data.boundingSphere;if(void 0!==g){var v=new Ct;void 0!==g.center&&v.fromArray(g.center),t.boundingSphere=new Kt(v,g.radius)}return e.name&&(t.name=e.name),e.userData&&(t.userData=e.userData),t},setPath:function(e){return this.path=e,this}});var hc={Int8Array:Int8Array,Uint8Array:Uint8Array,
// Workaround for IE11 pre KB2929437. See #11440
Uint8ClampedArray:"undefined"!=typeof Uint8ClampedArray?Uint8ClampedArray:Uint8Array,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};
/**
   * @author mrdoob / http://mrdoob.com/
   */function uc(e){this.manager=void 0!==e?e:ys,this.resourcePath=""}Object.assign(uc.prototype,{crossOrigin:"anonymous",load:function(e,t,n,r){var i=this,a=void 0===this.path?cc.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||a;var o=new xs(i.manager);o.setPath(this.path),o.load(e,function(n){var a=null;try{a=JSON.parse(n)}catch(t){return void 0!==r&&r(t),void console.error("THREE:ObjectLoader: Can't parse "+e+".",t.message)}var o=a.metadata;void 0!==o&&void 0!==o.type&&"geometry"!==o.type.toLowerCase()?i.parse(a,t):console.error("THREE.ObjectLoader: Can't load "+e)},n,r)},setPath:function(e){return this.path=e,this},setResourcePath:function(e){return this.resourcePath=e,this},setCrossOrigin:function(e){return this.crossOrigin=e,this},parse:function(e,t){var n=this.parseShape(e.shapes),r=this.parseGeometries(e.geometries,n),i=this.parseImages(e.images,function(){void 0!==t&&t(s)}),a=this.parseTextures(e.textures,i),o=this.parseMaterials(e.materials,a),s=this.parseObject(e.object,r,o);return e.animations&&(s.animations=this.parseAnimations(e.animations)),void 0!==e.images&&0!==e.images.length||void 0!==t&&t(s),s},parseShape:function(e){var t={};if(void 0!==e)for(var n=0,r=e.length;n<r;n++){var i=(new Zs).fromJSON(e[n]);t[i.uuid]=i}return t},parseGeometries:function(e,t){var n={};if(void 0!==e)for(var r=new lc,i=0,a=e.length;i<a;i++){var o,s=e[i];switch(s.type){case"PlaneGeometry":case"PlaneBufferGeometry":o=new Ho[s.type](s.width,s.height,s.widthSegments,s.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":case"CubeGeometry":// backwards compatible
o=new Ho[s.type](s.width,s.height,s.depth,s.widthSegments,s.heightSegments,s.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":o=new Ho[s.type](s.radius,s.segments,s.thetaStart,s.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":o=new Ho[s.type](s.radiusTop,s.radiusBottom,s.height,s.radialSegments,s.heightSegments,s.openEnded,s.thetaStart,s.thetaLength);break;case"ConeGeometry":case"ConeBufferGeometry":o=new Ho[s.type](s.radius,s.height,s.radialSegments,s.heightSegments,s.openEnded,s.thetaStart,s.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":o=new Ho[s.type](s.radius,s.widthSegments,s.heightSegments,s.phiStart,s.phiLength,s.thetaStart,s.thetaLength);break;case"DodecahedronGeometry":case"DodecahedronBufferGeometry":case"IcosahedronGeometry":case"IcosahedronBufferGeometry":case"OctahedronGeometry":case"OctahedronBufferGeometry":case"TetrahedronGeometry":case"TetrahedronBufferGeometry":o=new Ho[s.type](s.radius,s.detail);break;case"RingGeometry":case"RingBufferGeometry":o=new Ho[s.type](s.innerRadius,s.outerRadius,s.thetaSegments,s.phiSegments,s.thetaStart,s.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":o=new Ho[s.type](s.radius,s.tube,s.radialSegments,s.tubularSegments,s.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":o=new Ho[s.type](s.radius,s.tube,s.tubularSegments,s.radialSegments,s.p,s.q);break;case"TubeGeometry":case"TubeBufferGeometry":
// This only works for built-in curves (e.g. CatmullRomCurve3).
// User defined curves or instances of CurvePath will not be deserialized.
o=new Ho[s.type]((new qs[s.path.type]).fromJSON(s.path),s.tubularSegments,s.radius,s.radialSegments,s.closed);break;case"LatheGeometry":case"LatheBufferGeometry":o=new Ho[s.type](s.points,s.segments,s.phiStart,s.phiLength);break;case"PolyhedronGeometry":case"PolyhedronBufferGeometry":o=new Ho[s.type](s.vertices,s.indices,s.radius,s.details);break;case"ShapeGeometry":case"ShapeBufferGeometry":for(var c=[],l=0,h=s.shapes.length;l<h;l++){var u=t[s.shapes[l]];c.push(u)}o=new Ho[s.type](c,s.curveSegments);break;case"ExtrudeGeometry":case"ExtrudeBufferGeometry":for(c=[],l=0,h=s.shapes.length;l<h;l++){u=t[s.shapes[l]];c.push(u)}var d=s.options.extrudePath;void 0!==d&&(s.options.extrudePath=(new qs[d.type]).fromJSON(d)),o=new Ho[s.type](c,s.options);break;case"BufferGeometry":o=r.parse(s);break;case"Geometry":if("THREE"in window&&"LegacyJSONLoader"in THREE)o=(new THREE.LegacyJSONLoader).parse(s,this.resourcePath).geometry;else console.error('THREE.ObjectLoader: You have to import LegacyJSONLoader in order load geometry data of type "Geometry".');break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+s.type+'"');continue}o.uuid=s.uuid,void 0!==s.name&&(o.name=s.name),!0===o.isBufferGeometry&&void 0!==s.userData&&(o.userData=s.userData),n[s.uuid]=o}return n},parseMaterials:function(e,t){var n={},r={};// MultiMaterial
if(void 0!==e){var i=new sc;i.setTextures(t);for(var a=0,o=e.length;a<o;a++){var s=e[a];if("MultiMaterial"===s.type){for(
// Deprecated
var c=[],l=0;l<s.materials.length;l++){var h=s.materials[l];void 0===n[h.uuid]&&(n[h.uuid]=i.parse(h)),c.push(n[h.uuid])}r[s.uuid]=c}else void 0===n[s.uuid]&&(n[s.uuid]=i.parse(s)),r[s.uuid]=n[s.uuid]}}return r},parseAnimations:function(e){for(var t=[],n=0;n<e.length;n++){var r=e[n],i=ps.parse(r);void 0!==r.uuid&&(i.uuid=r.uuid),t.push(i)}return t},parseImages:function(e,t){var n=this,r={};function i(e){return n.manager.itemStart(e),a.load(e,function(){n.manager.itemEnd(e)},void 0,function(){n.manager.itemError(e),n.manager.itemEnd(e)})}if(void 0!==e&&e.length>0){var a=new Es(new vs(t));a.setCrossOrigin(this.crossOrigin);for(var o=0,s=e.length;o<s;o++){var c=e[o],l=c.url;if(Array.isArray(l)){
// load array of images e.g CubeTexture
r[c.uuid]=[];for(var h=0,u=l.length;h<u;h++){var d=l[h],f=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(d)?d:n.resourcePath+d;r[c.uuid].push(i(f))}}else{
// load single image
f=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c.url)?c.url:n.resourcePath+c.url;r[c.uuid]=i(f)}}}return r},parseTextures:function(e,t){function n(e,t){return"number"==typeof e?e:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",e),t[e])}var r={};if(void 0!==e)for(var i=0,a=e.length;i<a;i++){var o,s=e[i];void 0===s.image&&console.warn('THREE.ObjectLoader: No "image" specified for',s.uuid),void 0===t[s.image]&&console.warn("THREE.ObjectLoader: Undefined image",s.image),(o=Array.isArray(t[s.image])?new Sr(t[s.image]):new Wt(t[s.image])).needsUpdate=!0,o.uuid=s.uuid,void 0!==s.name&&(o.name=s.name),void 0!==s.mapping&&(o.mapping=n(s.mapping,fc)),void 0!==s.offset&&o.offset.fromArray(s.offset),void 0!==s.repeat&&o.repeat.fromArray(s.repeat),void 0!==s.center&&o.center.fromArray(s.center),void 0!==s.rotation&&(o.rotation=s.rotation),void 0!==s.wrap&&(o.wrapS=n(s.wrap[0],pc),o.wrapT=n(s.wrap[1],pc)),void 0!==s.format&&(o.format=s.format),void 0!==s.type&&(o.type=s.type),void 0!==s.encoding&&(o.encoding=s.encoding),void 0!==s.minFilter&&(o.minFilter=n(s.minFilter,mc)),void 0!==s.magFilter&&(o.magFilter=n(s.magFilter,mc)),void 0!==s.anisotropy&&(o.anisotropy=s.anisotropy),void 0!==s.flipY&&(o.flipY=s.flipY),void 0!==s.premultiplyAlpha&&(o.premultiplyAlpha=s.premultiplyAlpha),void 0!==s.unpackAlignment&&(o.unpackAlignment=s.unpackAlignment),r[s.uuid]=o}return r},parseObject:function(e,t,n){var r;function i(e){return void 0===t[e]&&console.warn("THREE.ObjectLoader: Undefined geometry",e),t[e]}function a(e){if(void 0!==e){if(Array.isArray(e)){for(var t=[],r=0,i=e.length;r<i;r++){var a=e[r];void 0===n[a]&&console.warn("THREE.ObjectLoader: Undefined material",a),t.push(n[a])}return t}return void 0===n[e]&&console.warn("THREE.ObjectLoader: Undefined material",e),n[e]}}switch(e.type){case"Scene":r=new ua,void 0!==e.background&&Number.isInteger(e.background)&&(r.background=new hn(e.background)),void 0!==e.fog&&("Fog"===e.fog.type?r.fog=new ha(e.fog.color,e.fog.near,e.fog.far):"FogExp2"===e.fog.type&&(r.fog=new la(e.fog.color,e.fog.density)));break;case"PerspectiveCamera":r=new Zi(e.fov,e.aspect,e.near,e.far),void 0!==e.focus&&(r.focus=e.focus),void 0!==e.zoom&&(r.zoom=e.zoom),void 0!==e.filmGauge&&(r.filmGauge=e.filmGauge),void 0!==e.filmOffset&&(r.filmOffset=e.filmOffset),void 0!==e.view&&(r.view=Object.assign({},e.view));break;case"OrthographicCamera":r=new nc(e.left,e.right,e.top,e.bottom,e.near,e.far),void 0!==e.zoom&&(r.zoom=e.zoom),void 0!==e.view&&(r.view=Object.assign({},e.view));break;case"AmbientLight":r=new ac(e.color,e.intensity);break;case"DirectionalLight":r=new ic(e.color,e.intensity);break;case"PointLight":r=new tc(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":r=new oc(e.color,e.intensity,e.width,e.height);break;case"SpotLight":r=new ec(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":r=new Qs(e.color,e.groundColor,e.intensity);break;case"SkinnedMesh":console.warn("THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.");case"Mesh":var o=i(e.geometry),s=a(e.material);r=o.bones&&o.bones.length>0?new va(o,s):new fr(o,s),void 0!==e.drawMode&&r.setDrawMode(e.drawMode);break;case"LOD":r=new ga;break;case"Line":r=new wa(i(e.geometry),a(e.material),e.mode);break;case"LineLoop":r=new Ma(i(e.geometry),a(e.material));break;case"LineSegments":r=new _a(i(e.geometry),a(e.material));break;case"PointCloud":case"Points":r=new Sa(i(e.geometry),a(e.material));break;case"Sprite":r=new ma(a(e.material));break;case"Group":r=new Xi;break;default:r=new En}if(r.uuid=e.uuid,void 0!==e.name&&(r.name=e.name),void 0!==e.matrix?(r.matrix.fromArray(e.matrix),void 0!==e.matrixAutoUpdate&&(r.matrixAutoUpdate=e.matrixAutoUpdate),r.matrixAutoUpdate&&r.matrix.decompose(r.position,r.quaternion,r.scale)):(void 0!==e.position&&r.position.fromArray(e.position),void 0!==e.rotation&&r.rotation.fromArray(e.rotation),void 0!==e.quaternion&&r.quaternion.fromArray(e.quaternion),void 0!==e.scale&&r.scale.fromArray(e.scale)),void 0!==e.castShadow&&(r.castShadow=e.castShadow),void 0!==e.receiveShadow&&(r.receiveShadow=e.receiveShadow),e.shadow&&(void 0!==e.shadow.bias&&(r.shadow.bias=e.shadow.bias),void 0!==e.shadow.radius&&(r.shadow.radius=e.shadow.radius),void 0!==e.shadow.mapSize&&r.shadow.mapSize.fromArray(e.shadow.mapSize),void 0!==e.shadow.camera&&(r.shadow.camera=this.parseObject(e.shadow.camera))),void 0!==e.visible&&(r.visible=e.visible),void 0!==e.frustumCulled&&(r.frustumCulled=e.frustumCulled),void 0!==e.renderOrder&&(r.renderOrder=e.renderOrder),void 0!==e.userData&&(r.userData=e.userData),void 0!==e.layers&&(r.layers.mask=e.layers),void 0!==e.children)for(var c=e.children,l=0;l<c.length;l++)r.add(this.parseObject(c[l],t,n));if("LOD"===e.type)for(var h=e.levels,u=0;u<h.length;u++){var d=h[u],f=r.getObjectByProperty("uuid",d.object);void 0!==f&&r.addLevel(f,d.distance)}return r}});var dc,fc={UVMapping:300,CubeReflectionMapping:ae,CubeRefractionMapping:oe,EquirectangularReflectionMapping:se,EquirectangularRefractionMapping:ce,SphericalReflectionMapping:le,CubeUVReflectionMapping:he,CubeUVRefractionMapping:ue},pc={RepeatWrapping:de,ClampToEdgeWrapping:fe,MirroredRepeatWrapping:pe},mc={NearestFilter:me,NearestMipMapNearestFilter:ge,NearestMipMapLinearFilter:ve,LinearFilter:ye,LinearMipMapNearestFilter:be,LinearMipMapLinearFilter:xe};
/**
   * @author thespite / http://clicktorelease.com/
   */
function gc(e){"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.manager=void 0!==e?e:ys,this.options=void 0}
/**
   * @author zz85 / http://www.lab4games.net/zz85/blog
   * minimal class for proxing functions to Path. Replaces old "extractSubpaths()"
   **/
function vc(){this.type="ShapePath",this.color=new hn,this.subPaths=[],this.currentPath=null}
/**
   * @author zz85 / http://www.lab4games.net/zz85/blog
   * @author mrdoob / http://mrdoob.com/
   */
function yc(e){this.type="Font",this.data=e}function bc(e,t,n,r,i){var a=i.glyphs[e]||i.glyphs["?"];if(a){var o,s,c,l,h,u,d,f,p=new vc;if(a.o)for(var m=a._cachedOutline||(a._cachedOutline=a.o.split(" ")),g=0,v=m.length;g<v;){switch(m[g++]){case"m":// moveTo
o=m[g++]*t+n,s=m[g++]*t+r,p.moveTo(o,s);break;case"l":// lineTo
o=m[g++]*t+n,s=m[g++]*t+r,p.lineTo(o,s);break;case"q":// quadraticCurveTo
c=m[g++]*t+n,l=m[g++]*t+r,h=m[g++]*t+n,u=m[g++]*t+r,p.quadraticCurveTo(h,u,c,l);break;case"b":// bezierCurveTo
c=m[g++]*t+n,l=m[g++]*t+r,h=m[g++]*t+n,u=m[g++]*t+r,d=m[g++]*t+n,f=m[g++]*t+r,p.bezierCurveTo(h,u,d,f,c,l)}}return{offsetX:a.ha*t,path:p}}}
/**
   * @author mrdoob / http://mrdoob.com/
   */function xc(e){this.manager=void 0!==e?e:ys}
/**
   * @author alteredq / http://alteredqualia.com/
   */
function wc(){}gc.prototype={constructor:gc,setOptions:function(e){return this.options=e,this},load:function(e,t,n,r){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);var i=this,a=gs.get(e);if(void 0!==a)return i.manager.itemStart(e),setTimeout(function(){t&&t(a),i.manager.itemEnd(e)},0),a;fetch(e).then(function(e){return e.blob()}).then(function(e){return void 0===i.options?createImageBitmap(e):createImageBitmap(e,i.options)}).then(function(n){gs.add(e,n),t&&t(n),i.manager.itemEnd(e)}).catch(function(t){r&&r(t),i.manager.itemError(e),i.manager.itemEnd(e)}),i.manager.itemStart(e)},setCrossOrigin:function(){return this},setPath:function(e){return this.path=e,this}},Object.assign(vc.prototype,{moveTo:function(e,t){this.currentPath=new Ys,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t)},lineTo:function(e,t){this.currentPath.lineTo(e,t)},quadraticCurveTo:function(e,t,n,r){this.currentPath.quadraticCurveTo(e,t,n,r)},bezierCurveTo:function(e,t,n,r,i,a){this.currentPath.bezierCurveTo(e,t,n,r,i,a)},splineThru:function(e){this.currentPath.splineThru(e)},toShapes:function(e,t){function n(e){for(var t=[],n=0,r=e.length;n<r;n++){var i=e[n],a=new Zs;a.curves=i.curves,t.push(a)}return t}function r(e,t){for(var n=t.length,r=!1,i=n-1,a=0
// inPt on polygon contour => immediate success    or
// toggling of inside/outside at every single! intersection point of an edge
//  with the horizontal line through inPt, left of inPt
//  not counting lowerY endpoints of edges and whole edges on that line
;a<n;i=a++){var o=t[i],s=t[a],c=s.x-o.x,l=s.y-o.y;if(Math.abs(l)>Number.EPSILON){if(
// not parallel
l<0&&(o=t[a],c=-c,s=t[i],l=-l),e.y<o.y||e.y>s.y)continue;if(e.y===o.y){if(e.x===o.x)return!0;// inPt is on contour ?
// continue;				// no intersection or edgeLowPt => doesn't count !!!
}else{var h=l*(e.x-o.x)-c*(e.y-o.y);if(0===h)return!0;// inPt is on contour ?
if(h<0)continue;r=!r}}else{
// parallel or collinear
if(e.y!==o.y)continue;// parallel
// edge lies on the same horizontal line as inPt
if(s.x<=e.x&&e.x<=o.x||o.x<=e.x&&e.x<=s.x)return!0;// inPt: Point on contour !
// continue;
}}return r}var i=yo.isClockWise,a=this.subPaths;if(0===a.length)return[];if(!0===t)return n(a);var o,s,c,l=[];if(1===a.length)return s=a[0],(c=new Zs).curves=s.curves,l.push(c),l;var h=!i(a[0].getPoints());h=e?!h:h;
// console.log("Holes first", holesFirst);
var u,d,f=[],p=[],m=[],g=0;p[g]=void 0,m[g]=[];for(var v=0,y=a.length;v<y;v++)o=i(u=(s=a[v]).getPoints()),(o=e?!o:o)?(!h&&p[g]&&g++,p[g]={s:new Zs,p:u},p[g].s.curves=s.curves,h&&g++,m[g]=[]):m[g].push({h:s,p:u[0]});
// only Holes? -> probably all Shapes with wrong orientation
if(!p[0])return n(a);if(p.length>1){for(var b=!1,x=[],w=0,_=p.length;w<_;w++)f[w]=[];for(w=0,_=p.length;w<_;w++)for(var M=m[w],E=0;E<M.length;E++){for(var S=M[E],T=!0,A=0;A<p.length;A++)r(S.p,p[A].p)&&(w!==A&&x.push({froms:w,tos:A,hole:E}),T?(T=!1,f[A].push(S)):b=!0);T&&f[w].push(S)}
// console.log("ambiguous: ", ambiguous);
x.length>0&&(
// console.log("to change: ", toChange);
b||(m=f))}v=0;for(var L=p.length;v<L;v++){c=p[v].s,l.push(c);for(var P=0,C=(d=m[v]).length;P<C;P++)c.holes.push(d[P].h)}
//console.log("shape", shapes);
return l}}),Object.assign(yc.prototype,{isFont:!0,generateShapes:function(e,t){void 0===t&&(t=100);for(var n=[],r=function(e,t,n){for(var r=Array.from?Array.from(e):String(e).split(""),i=t/n.resolution,a=(n.boundingBox.yMax-n.boundingBox.yMin+n.underlineThickness)*i,o=[],s=0,c=0,l=0// see #13988
;l<r.length;l++){var h=r[l];if("\n"===h)s=0,c-=a;else{var u=bc(h,i,s,c,n);s+=u.offsetX,o.push(u.path)}}return o}(e,t,this.data),i=0,a=r.length;i<a;i++)Array.prototype.push.apply(n,r[i].toShapes());return n}}),Object.assign(xc.prototype,{load:function(e,t,n,r){var i=this,a=new xs(this.manager);a.setPath(this.path),a.load(e,function(e){var n;try{n=JSON.parse(e)}catch(t){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),n=JSON.parse(e.substring(65,e.length-2))}var r=i.parse(n);t&&t(r)},n,r)},parse:function(e){return new yc(e)},setPath:function(e){return this.path=e,this}}),wc.Handlers={handlers:[],add:function(e,t){this.handlers.push(e,t)},get:function(e){for(var t=this.handlers,n=0,r=t.length;n<r;n+=2){var i=t[n],a=t[n+1];if(i.test(e))return a}return null}},Object.assign(wc.prototype,{crossOrigin:"anonymous",onLoadStart:function(){},onLoadProgress:function(){},onLoadComplete:function(){},initMaterials:function(e,t,n){for(var r=[],i=0;i<e.length;++i)r[i]=this.createMaterial(e[i],t,n);return r},createMaterial:function(){var e={NoBlending:x,NormalBlending:w,AdditiveBlending:_,SubtractiveBlending:M,MultiplyBlending:E,CustomBlending:S},t=new hn,n=new Ts,r=new sc;return function(i,a,o){
// convert from old material format
var s={};function c(e,t,r,i,c){var l,h=a+e,u=wc.Handlers.get(h);null!==u?l=u.load(h):(n.setCrossOrigin(o),l=n.load(h)),void 0!==t&&(l.repeat.fromArray(t),1!==t[0]&&(l.wrapS=de),1!==t[1]&&(l.wrapT=de)),void 0!==r&&l.offset.fromArray(r),void 0!==i&&("repeat"===i[0]&&(l.wrapS=de),"mirror"===i[0]&&(l.wrapS=pe),"repeat"===i[1]&&(l.wrapT=de),"mirror"===i[1]&&(l.wrapT=pe)),void 0!==c&&(l.anisotropy=c);var d=At.generateUUID();return s[d]=l,d}
//
var l={uuid:At.generateUUID(),type:"MeshLambertMaterial"};for(var h in i){var u=i[h];switch(h){case"DbgColor":case"DbgIndex":case"opticalDensity":case"illumination":break;case"DbgName":l.name=u;break;case"blending":l.blending=e[u];break;case"colorAmbient":case"mapAmbient":console.warn("THREE.Loader.createMaterial:",h,"is no longer supported.");break;case"colorDiffuse":l.color=t.fromArray(u).getHex();break;case"colorSpecular":l.specular=t.fromArray(u).getHex();break;case"colorEmissive":l.emissive=t.fromArray(u).getHex();break;case"specularCoef":l.shininess=u;break;case"shading":"basic"===u.toLowerCase()&&(l.type="MeshBasicMaterial"),"phong"===u.toLowerCase()&&(l.type="MeshPhongMaterial"),"standard"===u.toLowerCase()&&(l.type="MeshStandardMaterial");break;case"mapDiffuse":l.map=c(u,i.mapDiffuseRepeat,i.mapDiffuseOffset,i.mapDiffuseWrap,i.mapDiffuseAnisotropy);break;case"mapDiffuseRepeat":case"mapDiffuseOffset":case"mapDiffuseWrap":case"mapDiffuseAnisotropy":break;case"mapEmissive":l.emissiveMap=c(u,i.mapEmissiveRepeat,i.mapEmissiveOffset,i.mapEmissiveWrap,i.mapEmissiveAnisotropy);break;case"mapEmissiveRepeat":case"mapEmissiveOffset":case"mapEmissiveWrap":case"mapEmissiveAnisotropy":break;case"mapLight":l.lightMap=c(u,i.mapLightRepeat,i.mapLightOffset,i.mapLightWrap,i.mapLightAnisotropy);break;case"mapLightRepeat":case"mapLightOffset":case"mapLightWrap":case"mapLightAnisotropy":break;case"mapAO":l.aoMap=c(u,i.mapAORepeat,i.mapAOOffset,i.mapAOWrap,i.mapAOAnisotropy);break;case"mapAORepeat":case"mapAOOffset":case"mapAOWrap":case"mapAOAnisotropy":break;case"mapBump":l.bumpMap=c(u,i.mapBumpRepeat,i.mapBumpOffset,i.mapBumpWrap,i.mapBumpAnisotropy);break;case"mapBumpScale":l.bumpScale=u;break;case"mapBumpRepeat":case"mapBumpOffset":case"mapBumpWrap":case"mapBumpAnisotropy":break;case"mapNormal":l.normalMap=c(u,i.mapNormalRepeat,i.mapNormalOffset,i.mapNormalWrap,i.mapNormalAnisotropy);break;case"mapNormalFactor":l.normalScale=u;break;case"mapNormalRepeat":case"mapNormalOffset":case"mapNormalWrap":case"mapNormalAnisotropy":break;case"mapSpecular":l.specularMap=c(u,i.mapSpecularRepeat,i.mapSpecularOffset,i.mapSpecularWrap,i.mapSpecularAnisotropy);break;case"mapSpecularRepeat":case"mapSpecularOffset":case"mapSpecularWrap":case"mapSpecularAnisotropy":break;case"mapMetalness":l.metalnessMap=c(u,i.mapMetalnessRepeat,i.mapMetalnessOffset,i.mapMetalnessWrap,i.mapMetalnessAnisotropy);break;case"mapMetalnessRepeat":case"mapMetalnessOffset":case"mapMetalnessWrap":case"mapMetalnessAnisotropy":break;case"mapRoughness":l.roughnessMap=c(u,i.mapRoughnessRepeat,i.mapRoughnessOffset,i.mapRoughnessWrap,i.mapRoughnessAnisotropy);break;case"mapRoughnessRepeat":case"mapRoughnessOffset":case"mapRoughnessWrap":case"mapRoughnessAnisotropy":break;case"mapAlpha":l.alphaMap=c(u,i.mapAlphaRepeat,i.mapAlphaOffset,i.mapAlphaWrap,i.mapAlphaAnisotropy);break;case"mapAlphaRepeat":case"mapAlphaOffset":case"mapAlphaWrap":case"mapAlphaAnisotropy":break;case"flipSided":l.side=m;break;case"doubleSided":l.side=g;break;case"transparency":console.warn("THREE.Loader.createMaterial: transparency has been renamed to opacity"),l.opacity=u;break;case"depthTest":case"depthWrite":case"colorWrite":case"opacity":case"reflectivity":case"transparent":case"visible":case"wireframe":l[h]=u;break;case"vertexColors":!0===u&&(l.vertexColors=b),"face"===u&&(l.vertexColors=y);break;default:console.error("THREE.Loader.createMaterial: Unsupported",h,u)}}return"MeshBasicMaterial"===l.type&&delete l.emissive,"MeshPhongMaterial"!==l.type&&delete l.specular,l.opacity<1&&(l.transparent=!0),r.setTextures(s),r.parse(l)}}()});var _c={getContext:function(){return void 0===dc&&(dc=new(window.AudioContext||window.webkitAudioContext)),dc},setContext:function(e){dc=e}};
/**
   * @author Reece Aaron Lecrivain / http://reecenotes.com/
   */function Mc(e){this.manager=void 0!==e?e:ys}
/**
   * @author bhouston / http://clara.io
   * @author WestLangley / http://github.com/WestLangley
   *
   * Primary reference:
   *   https://graphics.stanford.edu/papers/envmap/envmap.pdf
   *
   * Secondary reference:
   *   https://www.ppsloan.org/publications/StupidSH36.pdf
   */
// 3-band SH defined by 9 coefficients
function Ec(){this.coefficients=[];for(var e=0;e<9;e++)this.coefficients.push(new Ct)}
/**
   * @author WestLangley / http://github.com/WestLangley
   *
   * A LightProbe is a source of indirect-diffuse light
   */
function Sc(e,t){Js.call(this,void 0,t),this.sh=void 0!==e?e:new Ec}
/**
   * @author WestLangley / http://github.com/WestLangley
   */
function Tc(e,t,n){Sc.call(this,void 0,n);var r=(new hn).set(e),i=(new hn).set(t),a=new Ct(r.r,r.g,r.b),o=new Ct(i.r,i.g,i.b),s=Math.sqrt(Math.PI),c=s*Math.sqrt(.75);this.sh.coefficients[0].copy(a).add(o).multiplyScalar(s),this.sh.coefficients[1].copy(a).sub(o).multiplyScalar(c)}
/**
   * @author WestLangley / http://github.com/WestLangley
   */
function Ac(e,t){Sc.call(this,void 0,t);var n=(new hn).set(e);
// without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );
this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}
/**
   * @author mrdoob / http://mrdoob.com/
   */
function Lc(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new Zi,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new Zi,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1}Object.assign(Mc.prototype,{load:function(e,t,n,r){var i=new xs(this.manager);i.setResponseType("arraybuffer"),i.setPath(this.path),i.load(e,function(e){
// Create a copy of the buffer. The `decodeAudioData` method
// detaches the buffer when complete, preventing reuse.
var n=e.slice(0);_c.getContext().decodeAudioData(n,function(e){t(e)})},n,r)},setPath:function(e){return this.path=e,this}}),Object.assign(Ec.prototype,{isSphericalHarmonics3:!0,set:function(e){for(var t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this},zero:function(){for(var e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this},
// get the radiance in the direction of the normal
// target is a Vector3
getAt:function(e,t){
// normal is assumed to be unit length
var n=e.x,r=e.y,i=e.z,a=this.coefficients;
// band 0
return t=.282095*a[0],
// band 1
t+=.488603*a[1]*r,t+=.488603*a[2]*i,t+=.488603*a[3]*n,
// band 2
t+=1.092548*a[4]*(n*r),t+=1.092548*a[5]*(r*i),t+=.315392*a[6]*(3*i*i-1),t+=1.092548*a[7]*(n*i),t+=.546274*a[8]*(n*n-r*r)},
// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal
// target is a Vector3
// https://graphics.stanford.edu/papers/envmap/envmap.pdf
getIrradianceAt:function(e,t){
// normal is assumed to be unit length
var n=e.x,r=e.y,i=e.z,a=this.coefficients;// ( π / 4 ) * 0.546274
// band 0
return t=.886227*a[0],// π * 0.282095
// band 1
t+=2*a[1]*.511664*r,// ( 2 * π / 3 ) * 0.488603
t+=2*a[2]*.511664*i,t+=2*a[3]*.511664*n,
// band 2
t+=2*a[4]*.429043*n*r,// ( π / 4 ) * 1.092548
t+=2*a[5]*.429043*r*i,t+=a[6]*(.743125*i*i-.247708),// ( π / 4 ) * 0.315392 * 3
t+=2*a[7]*.429043*n*i,t+=.429043*a[8]*(n*n-r*r)},add:function(e){for(var t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this},scale:function(e){for(var t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this},lerp:function(e,t){for(var n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this},equals:function(e){for(var t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0},copy:function(e){return this.set(e.coefficients)},clone:function(){return(new this.constructor).copy(this)},fromArray:function(e){for(var t=this.coefficients,n=0;n<9;n++)t[n].fromArray(e,3*n);return this},toArray:function(){for(var e=[],t=this.coefficients,n=0;n<9;n++)t[n].toArray(e,3*n);return e}}),Object.assign(Ec,{
// evaluate the basis functions
// shBasis is an Array[ 9 ]
getBasisAt:function(e,t){
// normal is assumed to be unit length
var n=e.x,r=e.y,i=e.z;
// band 0
t[0]=.282095,
// band 1
t[1]=.488603*r,t[2]=.488603*i,t[3]=.488603*n,
// band 2
t[4]=1.092548*n*r,t[5]=1.092548*r*i,t[6]=.315392*(3*i*i-1),t[7]=1.092548*n*i,t[8]=.546274*(n*n-r*r)}}),Sc.prototype=Object.assign(Object.create(Js.prototype),{constructor:Sc,isLightProbe:!0,copy:function(e){return Js.prototype.copy.call(this,e),this.sh.copy(e.sh),this.intensity=e.intensity,this},toJSON:function(e){
// data.sh = this.sh.toArray(); // todo
return Js.prototype.toJSON.call(this,e)}}),Tc.prototype=Object.assign(Object.create(Sc.prototype),{constructor:Tc,isHemisphereLightProbe:!0,copy:function(e){// modifying colors not currently supported
return Sc.prototype.copy.call(this,e),this},toJSON:function(e){
// data.sh = this.sh.toArray(); // todo
return Sc.prototype.toJSON.call(this,e)}}),Ac.prototype=Object.assign(Object.create(Sc.prototype),{constructor:Ac,isAmbientLightProbe:!0,copy:function(e){// modifying color not currently supported
return Sc.prototype.copy.call(this,e),this},toJSON:function(e){
// data.sh = this.sh.toArray(); // todo
return Sc.prototype.toJSON.call(this,e)}}),Object.assign(Lc.prototype,{update:function(){var e,t,n,r,i,a,o,s,c=new tn,l=new tn;return function(h){if(e!==this||t!==h.focus||n!==h.fov||r!==h.aspect*this.aspect||i!==h.near||a!==h.far||o!==h.zoom||s!==this.eyeSep){e=this,t=h.focus,n=h.fov,r=h.aspect*this.aspect,i=h.near,a=h.far,o=h.zoom;
// Off-axis stereoscopic effect based on
// http://paulbourke.net/stereographics/stereorender/
var u,d,f=h.projectionMatrix.clone(),p=(s=this.eyeSep/2)*i/t,m=i*Math.tan(At.DEG2RAD*n*.5)/o;
// translate xOffset
l.elements[12]=-s,c.elements[12]=s,
// for left eye
u=-m*r+p,d=m*r+p,f.elements[0]=2*i/(d-u),f.elements[8]=(d+u)/(d-u),this.cameraL.projectionMatrix.copy(f),
// for right eye
u=-m*r-p,d=m*r-p,f.elements[0]=2*i/(d-u),f.elements[8]=(d+u)/(d-u),this.cameraR.projectionMatrix.copy(f)}this.cameraL.matrixWorld.copy(h.matrixWorld).multiply(l),this.cameraR.matrixWorld.copy(h.matrixWorld).multiply(c)}}()});
/**
   * Camera for rendering cube maps
   *	- renders scene into axis-aligned cube
   *
   * @author alteredq / http://alteredqualia.com/
   */
var Pc=90,Cc=1;function Rc(e,t,n,r){En.call(this),this.type="CubeCamera";var i=new Zi(Pc,Cc,e,t);i.up.set(0,-1,0),i.lookAt(new Ct(1,0,0)),this.add(i);var a=new Zi(Pc,Cc,e,t);a.up.set(0,-1,0),a.lookAt(new Ct(-1,0,0)),this.add(a);var o=new Zi(Pc,Cc,e,t);o.up.set(0,0,1),o.lookAt(new Ct(0,1,0)),this.add(o);var s=new Zi(Pc,Cc,e,t);s.up.set(0,0,-1),s.lookAt(new Ct(0,-1,0)),this.add(s);var c=new Zi(Pc,Cc,e,t);c.up.set(0,-1,0),c.lookAt(new Ct(0,0,1)),this.add(c);var l=new Zi(Pc,Cc,e,t);l.up.set(0,-1,0),l.lookAt(new Ct(0,0,-1)),this.add(l),r=r||{format:Ie,magFilter:ye,minFilter:ye},this.renderTarget=new Zt(n,n,r),this.renderTarget.texture.name="CubeCamera",this.update=function(e,t){null===this.parent&&this.updateMatrixWorld();var n=e.getRenderTarget(),r=this.renderTarget,h=r.texture.generateMipmaps;r.texture.generateMipmaps=!1,e.setRenderTarget(r,0),e.render(t,i),e.setRenderTarget(r,1),e.render(t,a),e.setRenderTarget(r,2),e.render(t,o),e.setRenderTarget(r,3),e.render(t,s),e.setRenderTarget(r,4),e.render(t,c),r.texture.generateMipmaps=h,e.setRenderTarget(r,5),e.render(t,l),e.setRenderTarget(n)},this.clear=function(e,t,n,r){for(var i=e.getRenderTarget(),a=this.renderTarget,o=0;o<6;o++)e.setRenderTarget(a,o),e.clear(t,n,r);e.setRenderTarget(i)}}
/**
   * @author alteredq / http://alteredqualia.com/
   */
function Oc(e){this.autoStart=void 0===e||e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}
/**
   * @author mrdoob / http://mrdoob.com/
   */
function Nc(){En.call(this),this.type="AudioListener",this.context=_c.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0}
/**
   * @author mrdoob / http://mrdoob.com/
   * @author Reece Aaron Lecrivain / http://reecenotes.com/
   */
function Ic(e){En.call(this),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.startTime=0,this.offset=0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.sourceType="empty",this.filters=[]}
/**
   * @author mrdoob / http://mrdoob.com/
   */
function Dc(e){Ic.call(this,e),this.panner=this.context.createPanner(),this.panner.connect(this.gain)}
/**
   * @author mrdoob / http://mrdoob.com/
   */
function zc(e,t){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=void 0!==t?t:2048,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}
/**
   *
   * Buffered scene graph property that allows weighted accumulation.
   *
   *
   * @author Ben Houston / http://clara.io/
   * @author David Sarno / http://lighthaus.us/
   * @author tschw
   */
function kc(e,t,n){this.binding=e,this.valueSize=n;var r,i=Float64Array;switch(t){case"quaternion":r=this._slerp;break;case"string":case"bool":i=Array,r=this._select;break;default:r=this._lerp}this.buffer=new i(4*n),
// layout: [ incoming | accu0 | accu1 | orig ]
//
// interpolators can use .buffer as their .result
// the data then goes to 'incoming'
//
// 'accu0' and 'accu1' are used frame-interleaved for
// the cumulative result and are compared to detect
// changes
//
// 'orig' stores the original state of the property
this._mixBufferRegion=r,this.cumulativeWeight=0,this.useCount=0,this.referenceCount=0}Rc.prototype=Object.create(En.prototype),Rc.prototype.constructor=Rc,Object.assign(Oc.prototype,{start:function(){this.startTime=("undefined"==typeof performance?Date:performance).now(),// see #10732
this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1,this.autoStart=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){var e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){var t=("undefined"==typeof performance?Date:performance).now();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}),Nc.prototype=Object.assign(Object.create(En.prototype),{constructor:Nc,getInput:function(){return this.gain},removeFilter:function(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this},getFilter:function(){return this.filter},setFilter:function(e){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this},getMasterVolume:function(){return this.gain.gain.value},setMasterVolume:function(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this},updateMatrixWorld:function(){var e=new Ct,t=new Pt,n=new Ct,r=new Ct,i=new Oc;return function(a){En.prototype.updateMatrixWorld.call(this,a);var o=this.context.listener,s=this.up;if(this.timeDelta=i.getDelta(),this.matrixWorld.decompose(e,t,n),r.set(0,0,-1).applyQuaternion(t),o.positionX){
// code path for Chrome (see #14393)
var c=this.context.currentTime+this.timeDelta;o.positionX.linearRampToValueAtTime(e.x,c),o.positionY.linearRampToValueAtTime(e.y,c),o.positionZ.linearRampToValueAtTime(e.z,c),o.forwardX.linearRampToValueAtTime(r.x,c),o.forwardY.linearRampToValueAtTime(r.y,c),o.forwardZ.linearRampToValueAtTime(r.z,c),o.upX.linearRampToValueAtTime(s.x,c),o.upY.linearRampToValueAtTime(s.y,c),o.upZ.linearRampToValueAtTime(s.z,c)}else o.setPosition(e.x,e.y,e.z),o.setOrientation(r.x,r.y,r.z,s.x,s.y,s.z)}}()}),Ic.prototype=Object.assign(Object.create(En.prototype),{constructor:Ic,getOutput:function(){return this.gain},setNodeSource:function(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this},setMediaElementSource:function(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this},setBuffer:function(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this},play:function(){if(!0!==this.isPlaying){if(!1!==this.hasPlaybackControl){var e=this.context.createBufferSource();return e.buffer=this.buffer,e.loop=this.loop,e.onended=this.onEnded.bind(this),this.startTime=this.context.currentTime,e.start(this.startTime,this.offset),this.isPlaying=!0,this.source=e,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}console.warn("THREE.Audio: this Audio has no playback control.")}else console.warn("THREE.Audio: Audio is already playing.")},pause:function(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this.source.stop(),this.source.onended=null,this.offset+=(this.context.currentTime-this.startTime)*this.playbackRate,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")},stop:function(){if(!1!==this.hasPlaybackControl)return this.source.stop(),this.source.onended=null,this.offset=0,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")},connect:function(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(var e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this},disconnect:function(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(var e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this},getFilters:function(){return this.filters},setFilters:function(e){return e||(e=[]),!0===this.isPlaying?(this.disconnect(),this.filters=e,this.connect()):this.filters=e,this},setDetune:function(e){if(this.detune=e,void 0!==this.source.detune)// only set detune when available
return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this},getDetune:function(){return this.detune},getFilter:function(){return this.getFilters()[0]},setFilter:function(e){return this.setFilters(e?[e]:[])},setPlaybackRate:function(e){if(!1!==this.hasPlaybackControl)return this.playbackRate=e,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")},getPlaybackRate:function(){return this.playbackRate},onEnded:function(){this.isPlaying=!1},getLoop:function(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop},setLoop:function(e){if(!1!==this.hasPlaybackControl)return this.loop=e,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")},getVolume:function(){return this.gain.gain.value},setVolume:function(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}),Dc.prototype=Object.assign(Object.create(Ic.prototype),{constructor:Dc,getOutput:function(){return this.panner},getRefDistance:function(){return this.panner.refDistance},setRefDistance:function(e){return this.panner.refDistance=e,this},getRolloffFactor:function(){return this.panner.rolloffFactor},setRolloffFactor:function(e){return this.panner.rolloffFactor=e,this},getDistanceModel:function(){return this.panner.distanceModel},setDistanceModel:function(e){return this.panner.distanceModel=e,this},getMaxDistance:function(){return this.panner.maxDistance},setMaxDistance:function(e){return this.panner.maxDistance=e,this},setDirectionalCone:function(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this},updateMatrixWorld:function(){var e=new Ct,t=new Pt,n=new Ct,r=new Ct;return function(i){if(En.prototype.updateMatrixWorld.call(this,i),!0!==this.hasPlaybackControl||!1!==this.isPlaying){this.matrixWorld.decompose(e,t,n),r.set(0,0,1).applyQuaternion(t);var a=this.panner;if(a.positionX){
// code path for Chrome and Firefox (see #14393)
var o=this.context.currentTime+this.listener.timeDelta;a.positionX.linearRampToValueAtTime(e.x,o),a.positionY.linearRampToValueAtTime(e.y,o),a.positionZ.linearRampToValueAtTime(e.z,o),a.orientationX.linearRampToValueAtTime(r.x,o),a.orientationY.linearRampToValueAtTime(r.y,o),a.orientationZ.linearRampToValueAtTime(r.z,o)}else a.setPosition(e.x,e.y,e.z),a.setOrientation(r.x,r.y,r.z)}}}()}),Object.assign(zc.prototype,{getFrequencyData:function(){return this.analyser.getByteFrequencyData(this.data),this.data},getAverageFrequency:function(){for(var e=0,t=this.getFrequencyData(),n=0;n<t.length;n++)e+=t[n];return e/t.length}}),Object.assign(kc.prototype,{
// accumulate data in the 'incoming' region into 'accu<i>'
accumulate:function(e,t){
// note: happily accumulating nothing when weight = 0, the caller knows
// the weight and shouldn't have made the call in the first place
var n=this.buffer,r=this.valueSize,i=e*r+r,a=this.cumulativeWeight;if(0===a){
// accuN := incoming * weight
for(var o=0;o!==r;++o)n[i+o]=n[o];a=t}else{var s=t/(
// accuN := accuN + incoming * weight
a+=t);this._mixBufferRegion(n,i,0,s,r)}this.cumulativeWeight=a},
// apply the state of 'accu<i>' to the binding when accus differ
apply:function(e){var t=this.valueSize,n=this.buffer,r=e*t+t,i=this.cumulativeWeight,a=this.binding;if(this.cumulativeWeight=0,i<1){
// accuN := accuN + original * ( 1 - cumulativeWeight )
var o=3*t;this._mixBufferRegion(n,r,o,1-i,t)}for(var s=t,c=t+t;s!==c;++s)if(n[s]!==n[s+t]){
// value has changed -> update scene graph
a.setValue(n,r);break}},
// remember the state of the bound property and copy it to both accus
saveOriginalState:function(){var e=this.binding,t=this.buffer,n=this.valueSize,r=3*n;e.getValue(t,r);
// accu[0..1] := orig -- initially detect changes against the original
for(var i=n,a=r;i!==a;++i)t[i]=t[r+i%n];this.cumulativeWeight=0},
// apply the state previously taken via 'saveOriginalState' to the binding
restoreOriginalState:function(){var e=3*this.valueSize;this.binding.setValue(this.buffer,e)},
// mix functions
_select:function(e,t,n,r,i){if(r>=.5)for(var a=0;a!==i;++a)e[t+a]=e[n+a]},_slerp:function(e,t,n,r){Pt.slerpFlat(e,t,e,t,e,n,r)},_lerp:function(e,t,n,r,i){for(var a=1-r,o=0;o!==i;++o){var s=t+o;e[s]=e[s]*a+e[n+o]*r}}});
/**
   *
   * A reference to a real property in the scene graph.
   *
   *
   * @author Ben Houston / http://clara.io/
   * @author David Sarno / http://lighthaus.us/
   * @author tschw
   */
// Characters [].:/ are reserved for track binding syntax.
var Bc,Uc,Fc,Gc,jc,Hc,Vc,Wc,qc,Xc,Yc,Zc,Jc,Qc,Kc;function $c(e,t,n){var r=n||el.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,r)}function el(e,t,n){this.path=t,this.parsedPath=n||el.parseTrackName(t),this.node=el.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e}
/**
   *
   * A group of objects that receives a shared animation state.
   *
   * Usage:
   *
   *  - Add objects you would otherwise pass as 'root' to the
   *    constructor or the .clipAction method of AnimationMixer.
   *
   *  - Instead pass this object as 'root'.
   *
   *  - You can also add and remove objects later when the mixer
   *    is running.
   *
   * Note:
   *
   *    Objects of this class appear as one object to the mixer,
   *    so cache control of the individual objects must be done
   *    on the group.
   *
   * Limitation:
   *
   *  - The animated properties must be compatible among the
   *    all objects in the group.
   *
   *  - A single property can either be controlled through a
   *    target group or directly, but not both.
   *
   * @author tschw
   */
function tl(){this.uuid=At.generateUUID(),
// cached objects followed by the active ones
this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;// threshold
// note: read by PropertyBinding.Composite
var e={};this._indicesByUUID=e;// for bookkeeping
for(var t=0,n=arguments.length;t!==n;++t)e[arguments[t].uuid]=t;this._paths=[],// inside: string
this._parsedPaths=[],// inside: { we don't care, here }
this._bindings=[],// inside: Array< PropertyBinding >
this._bindingsIndicesByPath={};// inside: indices in these arrays
var r=this;this.stats={objects:{get total(){return r._objects.length},get inUse(){return this.total-r.nCachedObjects_}},get bindingsPerObject(){return r._bindings.length}}}
/**
   *
   * Action provided by AnimationMixer for scheduling clip playback on specific
   * objects.
   *
   * @author Ben Houston / http://clara.io/
   * @author David Sarno / http://lighthaus.us/
   * @author tschw
   *
   */
function nl(e,t,n){this._mixer=e,this._clip=t,this._localRoot=n||null;for(var r=t.tracks,i=r.length,a=new Array(i),o={endingStart:dt,endingEnd:dt},s=0;s!==i;++s){var c=r[s].createInterpolant(null);a[s]=c,c.settings=o}this._interpolantSettings=o,this._interpolants=a,// bound by the mixer
// inside: PropertyMixer (managed by the mixer)
this._propertyBindings=new Array(i),this._cacheIndex=null,// for the memory manager
this._byClipCacheIndex=null,// for the memory manager
this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=ut,this._loopCount=-1,
// global mixer time when the action is to be started
// it's set back to 'null' upon start of the action
this._startTime=null,
// scaled local time of the action
// gets clamped or wrapped to 0..clip.duration according to loop
this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,// no. of repetitions when looping
this.paused=!1,// true -> zero effective time scale
this.enabled=!0,// false -> zero effective weight
this.clampWhenFinished=!1,// keep feeding the last frame?
this.zeroSlopeAtStart=!0,// for smooth interpolation w/o separate
this.zeroSlopeAtEnd=!0}
/**
   *
   * Player for AnimationClips.
   *
   *
   * @author Ben Houston / http://clara.io/
   * @author David Sarno / http://lighthaus.us/
   * @author tschw
   */
function rl(e){this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}
/**
   * @author mrdoob / http://mrdoob.com/
   */
function il(e){"string"==typeof e&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),e=arguments[1]),this.value=e}
/**
   * @author benaadams / https://twitter.com/ben_a_adams
   */
function al(){jn.call(this),this.type="InstancedBufferGeometry",this.maxInstancedCount=void 0}
/**
   * @author benaadams / https://twitter.com/ben_a_adams
   */
function ol(e,t,n){da.call(this,e,t),this.meshPerAttribute=n||1}
/**
   * @author benaadams / https://twitter.com/ben_a_adams
   */
function sl(e,t,n,r){"number"==typeof n&&(r=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),Pn.call(this,e,t,n),this.meshPerAttribute=r||1}
/**
   * @author mrdoob / http://mrdoob.com/
   * @author bhouston / http://clara.io/
   * @author stephomi / http://stephaneginier.com/
   */
function cl(e,t,n,r){this.ray=new hr(e,t),
// direction is assumed to be normalized (for accurate distance calculations)
this.near=n||0,this.far=r||1/0,this.params={Mesh:{},Line:{},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})}function ll(e,t){return e.distance-t.distance}function hl(e,t,n,r){if(!1!==e.visible&&(e.raycast(t,n),!0===r))for(var i=e.children,a=0,o=i.length;a<o;a++)hl(i[a],t,n,!0)}
/**
   * @author bhouston / http://clara.io
   * @author WestLangley / http://github.com/WestLangley
   *
   * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system
   *
   * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.
   * The azimuthal angle (theta) is measured from the positive z-axiz.
   */
function ul(e,t,n){// azimuthal angle
return this.radius=void 0!==e?e:1,this.phi=void 0!==t?t:0,// polar angle
this.theta=void 0!==n?n:0,this}
/**
   * @author Mugen87 / https://github.com/Mugen87
   *
   * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system
   *
   */
function dl(e,t,n){// height above the x-z plane
return this.radius=void 0!==e?e:1,// distance from the origin to a point in the x-z plane
this.theta=void 0!==t?t:0,// counterclockwise angle in the x-z plane measured in radians from the positive z-axis
this.y=void 0!==n?n:0,this}
/**
   * @author bhouston / http://clara.io
   */
function fl(e,t){this.min=void 0!==e?e:new Lt(1/0,1/0),this.max=void 0!==t?t:new Lt(-1/0,-1/0)}
/**
   * @author bhouston / http://clara.io
   */
function pl(e,t){this.start=void 0!==e?e:new Ct,this.end=void 0!==t?t:new Ct}
/**
   * @author alteredq / http://alteredqualia.com/
   */
function ml(e){En.call(this),this.material=e,this.render=function(){}}
/**
   * @author mrdoob / http://mrdoob.com/
   * @author WestLangley / http://github.com/WestLangley
   */
function gl(e,t,n,r){this.object=e,this.size=void 0!==t?t:1;var i=void 0!==n?n:16711680,a=void 0!==r?r:1,o=0,s=this.object.geometry;s&&s.isGeometry?o=3*s.faces.length:s&&s.isBufferGeometry&&(o=s.attributes.normal.count);
//
var c=new jn,l=new kn(2*o*3,3);c.addAttribute("position",l),_a.call(this,c,new xa({color:i,linewidth:a})),
//
this.matrixAutoUpdate=!1,this.update()}
/**
   * @author alteredq / http://alteredqualia.com/
   * @author mrdoob / http://mrdoob.com/
   * @author WestLangley / http://github.com/WestLangley
   */
function vl(e,t){En.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t;for(var n=new jn,r=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1],i=0,a=1;i<32;i++,a++){var o=i/32*Math.PI*2,s=a/32*Math.PI*2;r.push(Math.cos(o),Math.sin(o),1,Math.cos(s),Math.sin(s),1)}n.addAttribute("position",new kn(r,3));var c=new xa({fog:!1});this.cone=new _a(n,c),this.add(this.cone),this.update()}function yl(e){for(var t=
/**
   * @author Sean Griffin / http://twitter.com/sgrif
   * @author Michael Guerrero / http://realitymeltdown.com
   * @author mrdoob / http://mrdoob.com/
   * @author ikerr / http://verold.com
   * @author Mugen87 / https://github.com/Mugen87
   */
function e(t){var n=[];t&&t.isBone&&n.push(t);for(var r=0;r<t.children.length;r++)n.push.apply(n,e(t.children[r]));return n}(e),n=new jn,r=[],i=[],a=new hn(0,0,1),o=new hn(0,1,0),s=0;s<t.length;s++){var c=t[s];c.parent&&c.parent.isBone&&(r.push(0,0,0),r.push(0,0,0),i.push(a.r,a.g,a.b),i.push(o.r,o.g,o.b))}n.addAttribute("position",new kn(r,3)),n.addAttribute("color",new kn(i,3));var l=new xa({vertexColors:b,depthTest:!1,depthWrite:!1,transparent:!0});_a.call(this,n,l),this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}
/**
   * @author alteredq / http://alteredqualia.com/
   * @author mrdoob / http://mrdoob.com/
   */
function bl(e,t,n){this.light=e,this.light.updateMatrixWorld(),this.color=n;var r=new Lo(t,4,2),i=new dr({wireframe:!0,fog:!1});fr.call(this,r,i),this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}
/**
   * @author abelnation / http://github.com/abelnation
   * @author Mugen87 / http://github.com/Mugen87
   * @author WestLangley / http://github.com/WestLangley
   *
   *  This helper must be added as a child of the light
   */
function xl(e,t){this.type="RectAreaLightHelper",this.light=e,this.color=t;// optional hardwired color for the helper
var n=new jn;n.addAttribute("position",new kn([1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],3)),n.computeBoundingSphere();var r=new xa({fog:!1});wa.call(this,n,r);
//
var i=new jn;i.addAttribute("position",new kn([1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],3)),i.computeBoundingSphere(),this.add(new fr(i,new dr({side:m,fog:!1}))),this.update()}
/**
   * @author alteredq / http://alteredqualia.com/
   * @author mrdoob / http://mrdoob.com/
   * @author Mugen87 / https://github.com/Mugen87
   */
function wl(e,t,n){En.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n;var r=new Ba(t);r.rotateY(.5*Math.PI),this.material=new dr({wireframe:!0,fog:!1}),void 0===this.color&&(this.material.vertexColors=b);var i=r.getAttribute("position"),a=new Float32Array(3*i.count);r.addAttribute("color",new Pn(a,3)),this.add(new fr(r,this.material)),this.update()}
/**
   * @author WestLangley / http://github.com/WestLangley
   */
function _l(e,t){this.lightProbe=e,this.size=t;var n={GAMMA_OUTPUT:""},r=new lr({defines:n,uniforms:{sh:{value:this.lightProbe.sh.coefficients},// by reference
intensity:{value:this.lightProbe.intensity}},vertexShader:["varying vec3 vNormal;","void main() {","\tvNormal = normalize( normalMatrix * normal );","\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["#define RECIPROCAL_PI 0.318309886","vec3 inverseTransformDirection( in vec3 normal, in mat4 matrix ) {","\t// matrix is assumed to be orthogonal","\treturn normalize( ( vec4( normal, 0.0 ) * matrix ).xyz );","}","vec3 linearToOutput( in vec3 a ) {","\t#ifdef GAMMA_OUTPUT","\t\treturn pow( a, vec3( 1.0 / float( GAMMA_FACTOR ) ) );","\t#else","\t\treturn a;","\t#endif","}","// source: https://graphics.stanford.edu/papers/envmap/envmap.pdf","vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {","\t// normal is assumed to have unit length","\tfloat x = normal.x, y = normal.y, z = normal.z;","\t// band 0","\tvec3 result = shCoefficients[ 0 ] * 0.886227;","\t// band 1","\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;","\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;","\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;","\t// band 2","\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;","\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;","\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );","\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;","\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );","\treturn result;","}","uniform vec3 sh[ 9 ]; // sh coefficients","uniform float intensity; // light probe intensity","varying vec3 vNormal;","void main() {","\tvec3 normal = normalize( vNormal );","\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );","\tvec3 irradiance = shGetIrradianceAt( worldNormal, sh );","\tvec3 outgoingLight = RECIPROCAL_PI * irradiance * intensity;","\toutgoingLight = linearToOutput( outgoingLight );","\tgl_FragColor = vec4( outgoingLight, 1.0 );","}"].join("\n")}),i=new Lo(1,32,16);fr.call(this,i,r),this.onBeforeRender()}
/**
   * @author mrdoob / http://mrdoob.com/
   */
function Ml(e,t,n,r){e=e||10,t=t||10,n=new hn(void 0!==n?n:4473924),r=new hn(void 0!==r?r:8947848);for(var i=t/2,a=e/t,o=e/2,s=[],c=[],l=0,h=0,u=-o;l<=t;l++,u+=a){s.push(-o,0,u,o,0,u),s.push(u,0,-o,u,0,o);var d=l===i?n:r;d.toArray(c,h),h+=3,d.toArray(c,h),h+=3,d.toArray(c,h),h+=3,d.toArray(c,h),h+=3}var f=new jn;f.addAttribute("position",new kn(s,3)),f.addAttribute("color",new kn(c,3));var p=new xa({vertexColors:b});_a.call(this,f,p)}
/**
   * @author mrdoob / http://mrdoob.com/
   * @author Mugen87 / http://github.com/Mugen87
   * @author Hectate / http://www.github.com/Hectate
   */
function El(e,t,n,r,i,a){e=e||10,t=t||16,n=n||8,r=r||64,i=new hn(void 0!==i?i:4473924),a=new hn(void 0!==a?a:8947848);var o,s,c,l,h,u,d,f=[],p=[];
// create the radials
for(l=0;l<=t;l++)c=l/t*(2*Math.PI),o=Math.sin(c)*e,s=Math.cos(c)*e,f.push(0,0,0),f.push(o,0,s),d=1&l?i:a,p.push(d.r,d.g,d.b),p.push(d.r,d.g,d.b);
// create the circles
for(l=0;l<=n;l++)for(d=1&l?i:a,u=e-e/n*l,h=0;h<r;h++)
// first vertex
c=h/r*(2*Math.PI),o=Math.sin(c)*u,s=Math.cos(c)*u,f.push(o,0,s),p.push(d.r,d.g,d.b),
// second vertex
c=(h+1)/r*(2*Math.PI),o=Math.sin(c)*u,s=Math.cos(c)*u,f.push(o,0,s),p.push(d.r,d.g,d.b);var m=new jn;m.addAttribute("position",new kn(f,3)),m.addAttribute("color",new kn(p,3));var g=new xa({vertexColors:b});_a.call(this,m,g)}
/**
   * @author Mugen87 / http://github.com/Mugen87
   */
function Sl(e,t,n,r){this.audio=e,this.range=t||1,this.divisionsInnerAngle=n||16,this.divisionsOuterAngle=r||2;var i=new jn,a=this.divisionsInnerAngle+2*this.divisionsOuterAngle,o=new Float32Array(3*(3*a+3));i.addAttribute("position",new Pn(o,3));var s=new xa({color:65280}),c=new xa({color:16776960});wa.call(this,i,[c,s]),this.update()}
/**
   * @author mrdoob / http://mrdoob.com/
   * @author WestLangley / http://github.com/WestLangley
   */
function Tl(e,t,n,r){
// FaceNormalsHelper only supports THREE.Geometry
this.object=e,this.size=void 0!==t?t:1;var i=void 0!==n?n:16776960,a=void 0!==r?r:1,o=0,s=this.object.geometry;s&&s.isGeometry?o=s.faces.length:console.warn("THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.");
//
var c=new jn,l=new kn(2*o*3,3);c.addAttribute("position",l),_a.call(this,c,new xa({color:i,linewidth:a})),
//
this.matrixAutoUpdate=!1,this.update()}
/**
   * @author alteredq / http://alteredqualia.com/
   * @author mrdoob / http://mrdoob.com/
   * @author WestLangley / http://github.com/WestLangley
   */
function Al(e,t,n){En.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,void 0===t&&(t=1);var r=new jn;r.addAttribute("position",new kn([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));var i=new xa({fog:!1});this.lightPlane=new wa(r,i),this.add(this.lightPlane),(r=new jn).addAttribute("position",new kn([0,0,0,0,0,1],3)),this.targetLine=new wa(r,i),this.add(this.targetLine),this.update()}
/**
   * @author alteredq / http://alteredqualia.com/
   * @author Mugen87 / https://github.com/Mugen87
   *
   *	- shows frustum, line of sight and up of the camera
   *	- suitable for fast updates
   * 	- based on frustum visualization in lightgl.js shadowmap example
   *		http://evanw.github.com/lightgl.js/tests/shadowmap.html
   */
function Ll(e){var t=new jn,n=new xa({color:16777215,vertexColors:y}),r=[],i=[],a={},o=new hn(16755200),s=new hn(16711680),c=new hn(43775),l=new hn(16777215),h=new hn(3355443);function u(e,t,n){d(e,n),d(t,n)}function d(e,t){r.push(0,0,0),i.push(t.r,t.g,t.b),void 0===a[e]&&(a[e]=[]),a[e].push(r.length/3-1)}
// near
u("n1","n2",o),u("n2","n4",o),u("n4","n3",o),u("n3","n1",o),
// far
u("f1","f2",o),u("f2","f4",o),u("f4","f3",o),u("f3","f1",o),
// sides
u("n1","f1",o),u("n2","f2",o),u("n3","f3",o),u("n4","f4",o),
// cone
u("p","n1",s),u("p","n2",s),u("p","n3",s),u("p","n4",s),
// up
u("u1","u2",c),u("u2","u3",c),u("u3","u1",c),
// target
u("c","t",l),u("p","c",h),
// cross
u("cn1","cn2",h),u("cn3","cn4",h),u("cf1","cf2",h),u("cf3","cf4",h),t.addAttribute("position",new kn(r,3)),t.addAttribute("color",new kn(i,3)),_a.call(this,t,n),this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=a,this.update()}
/**
   * @author mrdoob / http://mrdoob.com/
   * @author Mugen87 / http://github.com/Mugen87
   */
function Pl(e,t){this.object=e,void 0===t&&(t=16776960);var n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=new Float32Array(24),i=new jn;i.setIndex(new Pn(n,1)),i.addAttribute("position",new Pn(r,3)),_a.call(this,i,new xa({color:t})),this.matrixAutoUpdate=!1,this.update()}
/**
   * @author WestLangley / http://github.com/WestLangley
   */
function Cl(e,t){this.type="Box3Helper",this.box=e;var n=void 0!==t?t:16776960,r=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new jn;i.setIndex(new Pn(r,1)),i.addAttribute("position",new kn([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),_a.call(this,i,new xa({color:n})),this.geometry.computeBoundingSphere()}
/**
   * @author WestLangley / http://github.com/WestLangley
   */
function Rl(e,t,n){this.type="PlaneHelper",this.plane=e,this.size=void 0===t?1:t;var r=void 0!==n?n:16776960,i=new jn;i.addAttribute("position",new kn([1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],3)),i.computeBoundingSphere(),wa.call(this,i,new xa({color:r}));
//
var a=new jn;a.addAttribute("position",new kn([1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],3)),a.computeBoundingSphere(),this.add(new fr(a,new dr({color:r,opacity:.2,transparent:!0,depthWrite:!1})))}function Ol(e,t,n,r,i,a){
// dir is assumed to be normalized
En.call(this),void 0===e&&(e=new Ct(0,0,1)),void 0===t&&(t=new Ct(0,0,0)),void 0===n&&(n=1),void 0===r&&(r=16776960),void 0===i&&(i=.2*n),void 0===a&&(a=.2*i),void 0===Zc&&((Zc=new jn).addAttribute("position",new kn([0,0,0,0,1,0],3)),(Jc=new Bo(0,.5,1,5,1)).translate(0,-.5,0)),this.position.copy(t),this.line=new wa(Zc,new xa({color:r})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new fr(Jc,new dr({color:r})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,i,a)}
/**
   * @author sroucheray / http://sroucheray.org/
   * @author mrdoob / http://mrdoob.com/
   */
function Nl(e){var t=[0,0,0,e=e||1,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=new jn;n.addAttribute("position",new kn(t,3)),n.addAttribute("color",new kn([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));var r=new xa({vertexColors:b});_a.call(this,n,r)}Object.assign($c.prototype,{getValue:function(e,t){this.bind();// bind all binding
var n=this._targetGroup.nCachedObjects_,r=this._bindings[n];
// and only call .getValue on the first
void 0!==r&&r.getValue(e,t)},setValue:function(e,t){for(var n=this._bindings,r=this._targetGroup.nCachedObjects_,i=n.length;r!==i;++r)n[r].setValue(e,t)},bind:function(){for(var e=this._bindings,t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()},unbind:function(){for(var e=this._bindings,t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}),Object.assign(el,{Composite:$c,create:function(e,t,n){return e&&e.isAnimationObjectGroup?new el.Composite(e,t,n):new el(e,t,n)},
/**
  	 * Replaces spaces with underscores and removes unsupported characters from
  	 * node names, to ensure compatibility with parseTrackName().
  	 *
  	 * @param {string} name Node name to be sanitized.
  	 * @return {string}
  	 */
sanitizeNodeName:(qc=new RegExp("[\\[\\]\\.:\\/]","g"),function(e){return e.replace(/\s/g,"_").replace(qc,"")}),parseTrackName:(Bc="[^\\[\\]\\.:\\/]",Uc="[^"+"\\[\\]\\.:\\/".replace("\\.","")+"]",Fc=/((?:WC+[\/:])*)/.source.replace("WC",Bc),Gc=/(WCOD+)?/.source.replace("WCOD",Uc),jc=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Bc),Hc=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Bc),Vc=new RegExp("^"+Fc+Gc+jc+Hc+"$"),Wc=["material","materials","bones"],function(e){var t=Vc.exec(e);if(!t)throw new Error("PropertyBinding: Cannot parse trackName: "+e);var n={
// directoryName: matches[ 1 ], // (tschw) currently unused
nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],// required
propertyIndex:t[6]},r=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==r&&-1!==r){var i=n.nodeName.substring(r+1);
// Object names must be checked against a whitelist. Otherwise, there
// is no way to parse 'foo.bar.baz': 'baz' must be a property, but
// 'bar' could be the objectName, or part of a nodeName (which can
// include '.' characters).
-1!==Wc.indexOf(i)&&(n.nodeName=n.nodeName.substring(0,r),n.objectName=i)}if(null===n.propertyName||0===n.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}),findNode:function(e,t){if(!t||""===t||"root"===t||"."===t||-1===t||t===e.name||t===e.uuid)return e;
// search into skeleton bones.
if(e.skeleton){var n=e.skeleton.getBoneByName(t);if(void 0!==n)return n}
// search into node subtree.
if(e.children){var r=function(e){for(var n=0;n<e.length;n++){var i=e[n];if(i.name===t||i.uuid===t)return i;var a=r(i.children);if(a)return a}return null},i=r(e.children);if(i)return i}return null}}),Object.assign(el.prototype,{// prototype, continued
// these are used to "bind" a nonexistent property
_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(e,t){e[t]=this.node[this.propertyName]},function(e,t){for(var n=this.resolvedProperty,r=0,i=n.length;r!==i;++r)e[t++]=n[r]},function(e,t){e[t]=this.resolvedProperty[this.propertyIndex]},function(e,t){this.resolvedProperty.toArray(e,t)}],SetterByBindingTypeAndVersioning:[[
// Direct
function(e,t){this.targetObject[this.propertyName]=e[t]},function(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0},function(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}],[
// EntireArray
function(e,t){for(var n=this.resolvedProperty,r=0,i=n.length;r!==i;++r)n[r]=e[t++]},function(e,t){for(var n=this.resolvedProperty,r=0,i=n.length;r!==i;++r)n[r]=e[t++];this.targetObject.needsUpdate=!0},function(e,t){for(var n=this.resolvedProperty,r=0,i=n.length;r!==i;++r)n[r]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}],[
// ArrayElement
function(e,t){this.resolvedProperty[this.propertyIndex]=e[t]},function(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0},function(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}],[
// HasToFromArray
function(e,t){this.resolvedProperty.fromArray(e,t)},function(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0},function(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(e,t){this.bind(),this.getValue(e,t)},setValue:function(e,t){this.bind(),this.setValue(e,t)},
// create getter / setter pair for a property in the scene graph
bind:function(){var e=this.node,t=this.parsedPath,n=t.objectName,r=t.propertyName,i=t.propertyIndex;
// ensure there is a value node
if(e||(e=el.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),
// set fail state so we can just 'return' on error
this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,e){if(n){var a=t.objectIndex;
// special cases were we need to reach deeper into the hierarchy to get the face materials....
switch(n){case"materials":if(!e.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!e.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);e=e.material.materials;break;case"bones":if(!e.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);
// potential future optimization: skip this if propertyIndex is already an integer
// and convert the integer string to a true integer.
e=e.skeleton.bones;
// support resolving morphTarget names into indices.
for(var o=0;o<e.length;o++)if(e[o].name===a){a=o;break}break;default:if(void 0===e[n])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);e=e[n]}if(void 0!==a){if(void 0===e[a])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);e=e[a]}}
// resolve property
var s=e[r];if(void 0!==s){
// determine versioning scheme
var c=this.Versioning.None;this.targetObject=e,void 0!==e.needsUpdate?// material
c=this.Versioning.NeedsUpdate:void 0!==e.matrixWorldNeedsUpdate&&(// node transform
c=this.Versioning.MatrixWorldNeedsUpdate);
// determine how the property gets bound
var l=this.BindingType.Direct;if(void 0!==i){
// access a sub element of the property array (only primitives are supported right now)
if("morphTargetInfluences"===r){
// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.
// support resolving morphTarget names into indices.
if(!e.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(e.geometry.isBufferGeometry){if(!e.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);for(o=0;o<this.node.geometry.morphAttributes.position.length;o++)if(e.geometry.morphAttributes.position[o].name===i){i=o;break}}else{if(!e.geometry.morphTargets)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.",this);for(o=0;o<this.node.geometry.morphTargets.length;o++)if(e.geometry.morphTargets[o].name===i){i=o;break}}}l=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=i}else void 0!==s.fromArray&&void 0!==s.toArray?(
// must use copy for Object3D.Euler/Quaternion
l=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(l=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=r;
// select getter / setter
this.getValue=this.GetterByBindingType[l],this.setValue=this.SetterByBindingTypeAndVersioning[l][c]}else{var h=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+h+"."+r+" but it wasn't found.",e)}}else console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.")},unbind:function(){this.node=null,
// back to the prototype version of getValue / setValue
// note: avoiding to mutate the shape of 'this' via 'delete'
this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}),
//!\ DECLARE ALIAS AFTER assign prototype !
Object.assign(el.prototype,{
// initial state of these methods that calls 'bind'
_getValue_unbound:el.prototype.getValue,_setValue_unbound:el.prototype.setValue}),Object.assign(tl.prototype,{isAnimationObjectGroup:!0,add:function(){for(var e=this._objects,t=e.length,n=this.nCachedObjects_,r=this._indicesByUUID,i=this._paths,a=this._parsedPaths,o=this._bindings,s=o.length,c=void 0,l=0,h=arguments.length;l!==h;++l){var u=arguments[l],d=u.uuid,f=r[d];if(void 0===f){
// unknown object -> add it to the ACTIVE region
f=t++,r[d]=f,e.push(u);
// accounting is done, now do the same for all bindings
for(var p=0,m=s;p!==m;++p)o[p].push(new el(u,i[p],a[p]))}else if(f<n){c=e[f];
// move existing object to the ACTIVE region
var g=--n,v=e[g];r[v.uuid]=f,e[f]=v,r[d]=g,e[g]=u;
// accounting is done, now do the same for all bindings
for(p=0,m=s;p!==m;++p){var y=o[p],b=y[g],x=y[f];y[f]=b,void 0===x&&(
// since we do not bother to create new bindings
// for objects that are cached, the binding may
// or may not exist
x=new el(u,i[p],a[p])),y[g]=x}}else e[f]!==c&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.");// else the object is already where we want it to be
}// for arguments
this.nCachedObjects_=n},remove:function(){for(var e=this._objects,t=this.nCachedObjects_,n=this._indicesByUUID,r=this._bindings,i=r.length,a=0,o=arguments.length;a!==o;++a){var s=arguments[a],c=s.uuid,l=n[c];if(void 0!==l&&l>=t){
// move existing object into the CACHED region
var h=t++,u=e[h];n[u.uuid]=l,e[l]=u,n[c]=h,e[h]=s;
// accounting is done, now do the same for all bindings
for(var d=0,f=i;d!==f;++d){var p=r[d],m=p[h],g=p[l];p[l]=m,p[h]=g}}}// for arguments
this.nCachedObjects_=t},
// remove & forget
uncache:function(){for(var e=this._objects,t=e.length,n=this.nCachedObjects_,r=this._indicesByUUID,i=this._bindings,a=i.length,o=0,s=arguments.length;o!==s;++o){var c=arguments[o].uuid,l=r[c];if(void 0!==l)if(delete r[c],l<n){
// object is cached, shrink the CACHED region
var h=--n,u=e[h],d=e[v=--t];
// last cached object takes this object's place
r[u.uuid]=l,e[l]=u,
// last object goes to the activated slot and pop
r[d.uuid]=h,e[h]=d,e.pop();
// accounting is done, now do the same for all bindings
for(var f=0,p=a;f!==p;++f){var m=(y=i[f])[h],g=y[v];y[l]=m,y[h]=g,y.pop()}}else{
// object is active, just swap with the last and pop
var v;r[(d=e[v=--t]).uuid]=l,e[l]=d,e.pop();
// accounting is done, now do the same for all bindings
for(f=0,p=a;f!==p;++f){var y;(y=i[f])[l]=y[v],y.pop()}}// cached or active
// if object is known
}// for arguments
this.nCachedObjects_=n},
// Internal interface used by befriended PropertyBinding.Composite:
subscribe_:function(e,t){
// returns an array of bindings for the given path that is changed
// according to the contained objects in the group
var n=this._bindingsIndicesByPath,r=n[e],i=this._bindings;if(void 0!==r)return i[r];var a=this._paths,o=this._parsedPaths,s=this._objects,c=s.length,l=this.nCachedObjects_,h=new Array(c);r=i.length,n[e]=r,a.push(e),o.push(t),i.push(h);for(var u=l,d=s.length;u!==d;++u){var f=s[u];h[u]=new el(f,e,t)}return h},unsubscribe_:function(e){
// tells the group to forget about a property path and no longer
// update the array previously obtained with 'subscribe_'
var t=this._bindingsIndicesByPath,n=t[e];if(void 0!==n){var r=this._paths,i=this._parsedPaths,a=this._bindings,o=a.length-1,s=a[o];t[e[o]]=n,a[n]=s,a.pop(),i[n]=i[o],i.pop(),r[n]=r[o],r.pop()}}}),Object.assign(nl.prototype,{
// State & Scheduling
play:function(){return this._mixer._activateAction(this),this},stop:function(){return this._mixer._deactivateAction(this),this.reset()},reset:function(){// forget scheduling
return this.paused=!1,this.enabled=!0,this.time=0,// restart clip
this._loopCount=-1,// forget previous loops
this._startTime=null,this.stopFading().stopWarping()},isRunning:function(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)},
// return true when play has been called
isScheduled:function(){return this._mixer._isActiveAction(this)},startAt:function(e){return this._startTime=e,this},setLoop:function(e,t){return this.loop=e,this.repetitions=t,this},
// Weight
// set the weight stopping any scheduled fading
// although .enabled = false yields an effective weight of zero, this
// method does *not* change .enabled, because it would be confusing
setEffectiveWeight:function(e){return this.weight=e,
// note: same logic as when updated at runtime
this._effectiveWeight=this.enabled?e:0,this.stopFading()},
// return the weight considering fading and .enabled
getEffectiveWeight:function(){return this._effectiveWeight},fadeIn:function(e){return this._scheduleFading(e,0,1)},fadeOut:function(e){return this._scheduleFading(e,1,0)},crossFadeFrom:function(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){var r=this._clip.duration,i=e._clip.duration,a=i/r,o=r/i;e.warp(1,a,t),this.warp(o,1,t)}return this},crossFadeTo:function(e,t,n){return e.crossFadeFrom(this,t,n)},stopFading:function(){var e=this._weightInterpolant;return null!==e&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this},
// Time Scale Control
// set the time scale stopping any scheduled warping
// although .paused = true yields an effective time scale of zero, this
// method does *not* change .paused, because it would be confusing
setEffectiveTimeScale:function(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()},
// return the time scale considering warping and .paused
getEffectiveTimeScale:function(){return this._effectiveTimeScale},setDuration:function(e){return this.timeScale=this._clip.duration/e,this.stopWarping()},syncWith:function(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()},halt:function(e){return this.warp(this._effectiveTimeScale,0,e)},warp:function(e,t,n){var r=this._mixer,i=r.time,a=this._timeScaleInterpolant,o=this.timeScale;null===a&&(a=r._lendControlInterpolant(),this._timeScaleInterpolant=a);var s=a.parameterPositions,c=a.sampleValues;return s[0]=i,s[1]=i+n,c[0]=e/o,c[1]=t/o,this},stopWarping:function(){var e=this._timeScaleInterpolant;return null!==e&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this},
// Object Accessors
getMixer:function(){return this._mixer},getClip:function(){return this._clip},getRoot:function(){return this._localRoot||this._mixer._root},
// Interna
_update:function(e,t,n,r){
// called by the mixer
if(this.enabled){var i=this._startTime;if(null!==i){
// check for scheduled start of action
var a=(e-i)*n;if(a<0||0===n)return;// yet to come / don't decide when delta = 0
// start
this._startTime=null,// unschedule
t=n*a}
// apply time scale and advance time
t*=this._updateTimeScale(e);var o=this._updateTime(t),s=this._updateWeight(e);
// note: _updateTime may disable the action resulting in
// an effective weight of 0
if(s>0)for(var c=this._interpolants,l=this._propertyBindings,h=0,u=c.length;h!==u;++h)c[h].evaluate(o),l[h].accumulate(r,s)}else
// call ._updateWeight() to update ._effectiveWeight
this._updateWeight(e)},_updateWeight:function(e){var t=0;if(this.enabled){t=this.weight;var n=this._weightInterpolant;if(null!==n){var r=n.evaluate(e)[0];t*=r,e>n.parameterPositions[1]&&(this.stopFading(),0===r&&(
// faded out, disable
this.enabled=!1))}}return this._effectiveWeight=t,t},_updateTimeScale:function(e){var t=0;if(!this.paused){t=this.timeScale;var n=this._timeScaleInterpolant;if(null!==n)t*=n.evaluate(e)[0],e>n.parameterPositions[1]&&(this.stopWarping(),0===t?
// motion has halted, pause
this.paused=!0:
// warp done - apply final time scale
this.timeScale=t)}return this._effectiveTimeScale=t,t},_updateTime:function(e){var t=this.time+e,n=this._clip.duration,r=this.loop,i=this._loopCount,a=2202===r;if(0===e)return-1===i?t:a&&1==(1&i)?n-t:t;if(2200===r){-1===i&&(
// just started
this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(t>=n)t=n;else{if(!(t<0))break e;t=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(// repetitive Repeat or PingPong
-1===i&&(
// just started
e>=0?(i=0,this._setEndings(!0,0===this.repetitions,a)):
// when looping in reverse direction, the initial
// transition through zero counts as a repetition,
// so leave loopCount at -1
this._setEndings(0===this.repetitions,!0,a)),t>=n||t<0){
// wrap around
var o=Math.floor(t/n);// signed
t-=n*o,i+=Math.abs(o);var s=this.repetitions-i;if(s<=0)
// have to stop (switch state, clamp time, fire event)
this.clampWhenFinished?this.paused=!0:this.enabled=!1,t=e>0?n:0,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{
// keep running
if(1===s){
// entering the last round
var c=e<0;this._setEndings(c,!c,a)}else this._setEndings(!1,!1,a);this._loopCount=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:o})}}if(a&&1==(1&i))
// invert time for the "pong round"
return this.time=t,n-t}return this.time=t,t},_setEndings:function(e,t,n){var r=this._interpolantSettings;n?(r.endingStart=2401,r.endingEnd=2401):(
// assuming for LoopOnce atStart == atEnd == true
r.endingStart=e?this.zeroSlopeAtStart?2401:dt:2402,r.endingEnd=t?this.zeroSlopeAtEnd?2401:dt:2402)},_scheduleFading:function(e,t,n){var r=this._mixer,i=r.time,a=this._weightInterpolant;null===a&&(a=r._lendControlInterpolant(),this._weightInterpolant=a);var o=a.parameterPositions,s=a.sampleValues;return o[0]=i,s[0]=t,o[1]=i+e,s[1]=n,this}}),rl.prototype=Object.assign(Object.create(r.prototype),{constructor:rl,_bindAction:function(e,t){var n=e._localRoot||this._root,r=e._clip.tracks,i=r.length,a=e._propertyBindings,o=e._interpolants,s=n.uuid,c=this._bindingsByRootAndName,l=c[s];void 0===l&&(l={},c[s]=l);for(var h=0;h!==i;++h){var u=r[h],d=u.name,f=l[d];if(void 0!==f)a[h]=f;else{if(void 0!==(f=a[h])){
// existing binding, make sure the cache knows
null===f._cacheIndex&&(++f.referenceCount,this._addInactiveBinding(f,s,d));continue}var p=t&&t._propertyBindings[h].binding.parsedPath;++(f=new kc(el.create(n,d,p),u.ValueTypeName,u.getValueSize())).referenceCount,this._addInactiveBinding(f,s,d),a[h]=f}o[h].resultBuffer=f.buffer}},_activateAction:function(e){if(!this._isActiveAction(e)){if(null===e._cacheIndex){
// this action has been forgotten by the cache, but the user
// appears to be still using it -> rebind
var t=(e._localRoot||this._root).uuid,n=e._clip.uuid,r=this._actionsByClip[n];this._bindAction(e,r&&r.knownActions[0]),this._addInactiveAction(e,n,t)}
// increment reference counts / sort out state
for(var i=e._propertyBindings,a=0,o=i.length;a!==o;++a){var s=i[a];0==s.useCount++&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(e)}},_deactivateAction:function(e){if(this._isActiveAction(e)){
// decrement reference counts / sort out state
for(var t=e._propertyBindings,n=0,r=t.length;n!==r;++n){var i=t[n];0==--i.useCount&&(i.restoreOriginalState(),this._takeBackBinding(i))}this._takeBackAction(e)}},
// Memory manager
_initMemoryManager:function(){this._actions=[],// 'nActiveActions' followed by inactive ones
this._nActiveActions=0,this._actionsByClip={},
// inside:
// {
// 	knownActions: Array< AnimationAction > - used as prototypes
// 	actionByRoot: AnimationAction - lookup
// }
this._bindings=[],// 'nActiveBindings' followed by inactive ones
this._nActiveBindings=0,this._bindingsByRootAndName={},// inside: Map< name, PropertyMixer >
this._controlInterpolants=[],// same game as above
this._nActiveControlInterpolants=0;var e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}},
// Memory management for AnimationAction objects
_isActiveAction:function(e){var t=e._cacheIndex;return null!==t&&t<this._nActiveActions},_addInactiveAction:function(e,t,n){var r=this._actions,i=this._actionsByClip,a=i[t];if(void 0===a)a={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,i[t]=a;else{var o=a.knownActions;e._byClipCacheIndex=o.length,o.push(e)}e._cacheIndex=r.length,r.push(e),a.actionByRoot[n]=e},_removeInactiveAction:function(e){var t=this._actions,n=t[t.length-1],r=e._cacheIndex;n._cacheIndex=r,t[r]=n,t.pop(),e._cacheIndex=null;var i=e._clip.uuid,a=this._actionsByClip,o=a[i],s=o.knownActions,c=s[s.length-1],l=e._byClipCacheIndex;c._byClipCacheIndex=l,s[l]=c,s.pop(),e._byClipCacheIndex=null,delete o.actionByRoot[(e._localRoot||this._root).uuid],0===s.length&&delete a[i],this._removeInactiveBindingsForAction(e)},_removeInactiveBindingsForAction:function(e){for(var t=e._propertyBindings,n=0,r=t.length;n!==r;++n){var i=t[n];0==--i.referenceCount&&this._removeInactiveBinding(i)}},_lendAction:function(e){
// [ active actions |  inactive actions  ]
// [  active actions >| inactive actions ]
//                 s        a
//                  <-swap->
//                 a        s
var t=this._actions,n=e._cacheIndex,r=this._nActiveActions++,i=t[r];e._cacheIndex=r,t[r]=e,i._cacheIndex=n,t[n]=i},_takeBackAction:function(e){
// [  active actions  | inactive actions ]
// [ active actions |< inactive actions  ]
//        a        s
//         <-swap->
//        s        a
var t=this._actions,n=e._cacheIndex,r=--this._nActiveActions,i=t[r];e._cacheIndex=r,t[r]=e,i._cacheIndex=n,t[n]=i},
// Memory management for PropertyMixer objects
_addInactiveBinding:function(e,t,n){var r=this._bindingsByRootAndName,i=r[t],a=this._bindings;void 0===i&&(i={},r[t]=i),i[n]=e,e._cacheIndex=a.length,a.push(e)},_removeInactiveBinding:function(e){var t=this._bindings,n=e.binding,r=n.rootNode.uuid,i=n.path,a=this._bindingsByRootAndName,o=a[r],s=t[t.length-1],c=e._cacheIndex;s._cacheIndex=c,t[c]=s,t.pop(),delete o[i];e:{for(var l in o)break e;// eslint-disable-line no-unused-vars
delete a[r]}},_lendBinding:function(e){var t=this._bindings,n=e._cacheIndex,r=this._nActiveBindings++,i=t[r];e._cacheIndex=r,t[r]=e,i._cacheIndex=n,t[n]=i},_takeBackBinding:function(e){var t=this._bindings,n=e._cacheIndex,r=--this._nActiveBindings,i=t[r];e._cacheIndex=r,t[r]=e,i._cacheIndex=n,t[n]=i},
// Memory management of Interpolants for weight and time scale
_lendControlInterpolant:function(){var e=this._controlInterpolants,t=this._nActiveControlInterpolants++,n=e[t];return void 0===n&&((n=new is(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer)).__cacheIndex=t,e[t]=n),n},_takeBackControlInterpolant:function(e){var t=this._controlInterpolants,n=e.__cacheIndex,r=--this._nActiveControlInterpolants,i=t[r];e.__cacheIndex=r,t[r]=e,i.__cacheIndex=n,t[n]=i},_controlInterpolantsResultBuffer:new Float32Array(1),
// return an action for a clip optionally using a custom root target
// object (this method allocates a lot of dynamic memory in case a
// previously unknown clip/root combination is specified)
clipAction:function(e,t){var n=t||this._root,r=n.uuid,i="string"==typeof e?ps.findByName(n,e):e,a=null!==i?i.uuid:e,o=this._actionsByClip[a],s=null;if(void 0!==o){var c=o.actionByRoot[r];if(void 0!==c)return c;
// we know the clip, so we don't have to parse all
// the bindings again but can just copy
s=o.knownActions[0],
// also, take the clip from the prototype action
null===i&&(i=s._clip)}
// clip must be known when specified via string
if(null===i)return null;
// allocate all resources required to run it
var l=new nl(this,i,t);return this._bindAction(l,s),
// and make the action known to the memory manager
this._addInactiveAction(l,a,r),l},
// get an existing action
existingAction:function(e,t){var n=t||this._root,r=n.uuid,i="string"==typeof e?ps.findByName(n,e):e,a=i?i.uuid:e,o=this._actionsByClip[a];return void 0!==o&&o.actionByRoot[r]||null},
// deactivates all previously scheduled actions
stopAllAction:function(){var e=this._actions,t=this._nActiveActions,n=this._bindings,r=this._nActiveBindings;this._nActiveActions=0,this._nActiveBindings=0;for(var i=0;i!==t;++i)e[i].reset();for(i=0;i!==r;++i)n[i].useCount=0;return this},
// advance the time and update apply the animation
update:function(e){e*=this.timeScale;
// run active actions
for(var t=this._actions,n=this._nActiveActions,r=this.time+=e,i=Math.sign(e),a=this._accuIndex^=1,o=0;o!==n;++o){t[o]._update(r,e,i,a)}
// update scene graph
var s=this._bindings,c=this._nActiveBindings;for(o=0;o!==c;++o)s[o].apply(a);return this},
// return this mixer's root target object
getRoot:function(){return this._root},
// free all resources specific to a particular clip
uncacheClip:function(e){var t=this._actions,n=e.uuid,r=this._actionsByClip,i=r[n];if(void 0!==i){for(
// note: just calling _removeInactiveAction would mess up the
// iteration state and also require updating the state we can
// just throw away
var a=i.knownActions,o=0,s=a.length;o!==s;++o){var c=a[o];this._deactivateAction(c);var l=c._cacheIndex,h=t[t.length-1];c._cacheIndex=null,c._byClipCacheIndex=null,h._cacheIndex=l,t[l]=h,t.pop(),this._removeInactiveBindingsForAction(c)}delete r[n]}},
// free all resources specific to a particular root target object
uncacheRoot:function(e){var t=e.uuid,n=this._actionsByClip;for(var r in n){var i=n[r].actionByRoot[t];void 0!==i&&(this._deactivateAction(i),this._removeInactiveAction(i))}var a=this._bindingsByRootAndName[t];if(void 0!==a)for(var o in a){var s=a[o];s.restoreOriginalState(),this._removeInactiveBinding(s)}},
// remove a targeted clip from the cache
uncacheAction:function(e,t){var n=this.existingAction(e,t);null!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}}),il.prototype.clone=function(){return new il(void 0===this.value.clone?this.value:this.value.clone())},al.prototype=Object.assign(Object.create(jn.prototype),{constructor:al,isInstancedBufferGeometry:!0,copy:function(e){return jn.prototype.copy.call(this,e),this.maxInstancedCount=e.maxInstancedCount,this},clone:function(){return(new this.constructor).copy(this)}}),ol.prototype=Object.assign(Object.create(da.prototype),{constructor:ol,isInstancedInterleavedBuffer:!0,copy:function(e){return da.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this}}),sl.prototype=Object.assign(Object.create(Pn.prototype),{constructor:sl,isInstancedBufferAttribute:!0,copy:function(e){return Pn.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this}}),Object.assign(cl.prototype,{linePrecision:1,set:function(e,t){
// direction is assumed to be normalized (for accurate distance calculations)
this.ray.set(e,t)},setFromCamera:function(e,t){t&&t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize()):t&&t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),// set origin in plane of camera
this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld)):console.error("THREE.Raycaster: Unsupported camera type.")},intersectObject:function(e,t,n){var r=n||[];return hl(e,this,r,t),r.sort(ll),r},intersectObjects:function(e,t,n){var r=n||[];if(!1===Array.isArray(e))return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),r;for(var i=0,a=e.length;i<a;i++)hl(e[i],this,r,t);return r.sort(ll),r}}),Object.assign(ul.prototype,{set:function(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this},
// restrict phi to be betwee EPS and PI-EPS
makeSafe:function(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this},setFromVector3:function(e){return this.setFromCartesianCoords(e.x,e.y,e.z)},setFromCartesianCoords:function(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(At.clamp(t/this.radius,-1,1))),this}}),Object.assign(dl.prototype,{set:function(e,t,n){return this.radius=e,this.theta=t,this.y=n,this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this},setFromVector3:function(e){return this.setFromCartesianCoords(e.x,e.y,e.z)},setFromCartesianCoords:function(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}}),Object.assign(fl.prototype,{set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromPoints:function(e){this.makeEmpty();for(var t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this},setFromCenterAndSize:function(){var e=new Lt;return function(t,n){var r=e.copy(n).multiplyScalar(.5);return this.min.copy(t).sub(r),this.max.copy(t).add(r),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this},isEmpty:function(){
// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes
return this.max.x<this.min.x||this.max.y<this.min.y},getCenter:function(e){return void 0===e&&(console.warn("THREE.Box2: .getCenter() target is now required"),e=new Lt),this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(e){return void 0===e&&(console.warn("THREE.Box2: .getSize() target is now required"),e=new Lt),this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y},getParameter:function(e,t){
// This can potentially have a divide by zero if the box
// has a size dimension of 0.
return void 0===t&&(console.warn("THREE.Box2: .getParameter() target is now required"),t=new Lt),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))},intersectsBox:function(e){
// using 4 splitting planes to rule out intersections
return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)},clampPoint:function(e,t){return void 0===t&&(console.warn("THREE.Box2: .clampPoint() target is now required"),t=new Lt),t.copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new Lt;return function(t){return e.copy(t).clamp(this.min,this.max).sub(t).length()}}(),intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}),Object.assign(pl.prototype,{set:function(e,t){return this.start.copy(e),this.end.copy(t),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.start.copy(e.start),this.end.copy(e.end),this},getCenter:function(e){return void 0===e&&(console.warn("THREE.Line3: .getCenter() target is now required"),e=new Ct),e.addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(e){return void 0===e&&(console.warn("THREE.Line3: .delta() target is now required"),e=new Ct),e.subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(e,t){return void 0===t&&(console.warn("THREE.Line3: .at() target is now required"),t=new Ct),this.delta(t).multiplyScalar(e).add(this.start)},closestPointToPointParameter:(Xc=new Ct,Yc=new Ct,function(e,t){Xc.subVectors(e,this.start),Yc.subVectors(this.end,this.start);var n=Yc.dot(Yc),r=Yc.dot(Xc)/n;return t&&(r=At.clamp(r,0,1)),r}),closestPointToPoint:function(e,t,n){var r=this.closestPointToPointParameter(e,t);return void 0===n&&(console.warn("THREE.Line3: .closestPointToPoint() target is now required"),n=new Ct),this.delta(n).multiplyScalar(r).add(this.start)},applyMatrix4:function(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this},equals:function(e){return e.start.equals(this.start)&&e.end.equals(this.end)}}),ml.prototype=Object.create(En.prototype),ml.prototype.constructor=ml,ml.prototype.isImmediateRenderObject=!0,gl.prototype=Object.create(_a.prototype),gl.prototype.constructor=gl,gl.prototype.update=function(){var e=new Ct,t=new Ct,n=new Rt;return function(){var r=["a","b","c"];this.object.updateMatrixWorld(!0),n.getNormalMatrix(this.object.matrixWorld);var i=this.object.matrixWorld,a=this.geometry.attributes.position,o=this.object.geometry;if(o&&o.isGeometry)for(var s=o.vertices,c=o.faces,l=0,h=0,u=c.length;h<u;h++)for(var d=c[h],f=0,p=d.vertexNormals.length;f<p;f++){var m=s[d[r[f]]],g=d.vertexNormals[f];e.copy(m).applyMatrix4(i),t.copy(g).applyMatrix3(n).normalize().multiplyScalar(this.size).add(e),a.setXYZ(l,e.x,e.y,e.z),l+=1,a.setXYZ(l,t.x,t.y,t.z),l+=1}else if(o&&o.isBufferGeometry){var v=o.attributes.position,y=o.attributes.normal;
// for simplicity, ignore index and drawcalls, and render every normal
for(l=0,f=0,p=v.count;f<p;f++)e.set(v.getX(f),v.getY(f),v.getZ(f)).applyMatrix4(i),t.set(y.getX(f),y.getY(f),y.getZ(f)),t.applyMatrix3(n).normalize().multiplyScalar(this.size).add(e),a.setXYZ(l,e.x,e.y,e.z),l+=1,a.setXYZ(l,t.x,t.y,t.z),l+=1}a.needsUpdate=!0}}(),vl.prototype=Object.create(En.prototype),vl.prototype.constructor=vl,vl.prototype.dispose=function(){this.cone.geometry.dispose(),this.cone.material.dispose()},vl.prototype.update=function(){var e=new Ct;return function(){this.light.updateMatrixWorld();var t=this.light.distance?this.light.distance:1e3,n=t*Math.tan(this.light.angle);this.cone.scale.set(n,n,t),e.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(e),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}(),yl.prototype=Object.create(_a.prototype),yl.prototype.constructor=yl,yl.prototype.updateMatrixWorld=function(){var e=new Ct,t=new tn,n=new tn;return function(r){var i=this.bones,a=this.geometry,o=a.getAttribute("position");n.getInverse(this.root.matrixWorld);for(var s=0,c=0;s<i.length;s++){var l=i[s];l.parent&&l.parent.isBone&&(t.multiplyMatrices(n,l.matrixWorld),e.setFromMatrixPosition(t),o.setXYZ(c,e.x,e.y,e.z),t.multiplyMatrices(n,l.parent.matrixWorld),e.setFromMatrixPosition(t),o.setXYZ(c+1,e.x,e.y,e.z),c+=2)}a.getAttribute("position").needsUpdate=!0,En.prototype.updateMatrixWorld.call(this,r)}}(),bl.prototype=Object.create(fr.prototype),bl.prototype.constructor=bl,bl.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()},bl.prototype.update=function(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)
/*
  	var d = this.light.distance;

  	if ( d === 0.0 ) {

  		this.lightDistance.visible = false;

  	} else {

  		this.lightDistance.visible = true;
  		this.lightDistance.scale.set( d, d, d );

  	}
  	*/},xl.prototype=Object.create(wa.prototype),xl.prototype.constructor=xl,xl.prototype.update=function(){if(this.scale.set(.5*this.light.width,.5*this.light.height,1),void 0!==this.color)this.material.color.set(this.color),this.children[0].material.color.set(this.color);else{this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);
// prevent hue shift
var e=this.material.color,t=Math.max(e.r,e.g,e.b);t>1&&e.multiplyScalar(1/t),this.children[0].material.color.copy(this.material.color)}},xl.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()},wl.prototype=Object.create(En.prototype),wl.prototype.constructor=wl,wl.prototype.dispose=function(){this.children[0].geometry.dispose(),this.children[0].material.dispose()},wl.prototype.update=function(){var e=new Ct,t=new hn,n=new hn;return function(){var r=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{var i=r.geometry.getAttribute("color");t.copy(this.light.color),n.copy(this.light.groundColor);for(var a=0,o=i.count;a<o;a++){var s=a<o/2?t:n;i.setXYZ(a,s.r,s.g,s.b)}i.needsUpdate=!0}r.lookAt(e.setFromMatrixPosition(this.light.matrixWorld).negate())}}(),_l.prototype=Object.create(fr.prototype),_l.prototype.constructor=_l,_l.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()},_l.prototype.onBeforeRender=function(){this.position.copy(this.lightProbe.position),this.scale.set(1,1,1).multiplyScalar(this.size),this.material.uniforms.intensity.value=this.lightProbe.intensity},Ml.prototype=Object.assign(Object.create(_a.prototype),{constructor:Ml,copy:function(e){return _a.prototype.copy.call(this,e),this.geometry.copy(e.geometry),this.material.copy(e.material),this},clone:function(){return(new this.constructor).copy(this)}}),El.prototype=Object.create(_a.prototype),El.prototype.constructor=El,Sl.prototype=Object.create(wa.prototype),Sl.prototype.constructor=Sl,Sl.prototype.update=function(){var e,t,n=this.audio,r=this.range,i=this.divisionsInnerAngle,a=this.divisionsOuterAngle,o=At.degToRad(n.panner.coneInnerAngle),s=At.degToRad(n.panner.coneOuterAngle),c=o/2,l=s/2,h=0,u=0,d=this.geometry,f=d.attributes.position;
//
function p(n,i,a,o){var s=(i-n)/a;for(f.setXYZ(h,0,0,0),u++,e=n;e<i;e+=s)t=h+u,f.setXYZ(t,Math.sin(e)*r,0,Math.cos(e)*r),f.setXYZ(t+1,Math.sin(Math.min(e+s,i))*r,0,Math.cos(Math.min(e+s,i))*r),f.setXYZ(t+2,0,0,0),u+=3;d.addGroup(h,u,o),h+=u,u=0}
//
d.clearGroups(),p(-l,-c,a,0),p(-c,c,i,1),p(c,l,a,0),
//
f.needsUpdate=!0,o===s&&(this.material[0].visible=!1)},Sl.prototype.dispose=function(){this.geometry.dispose(),this.material[0].dispose(),this.material[1].dispose()},Tl.prototype=Object.create(_a.prototype),Tl.prototype.constructor=Tl,Tl.prototype.update=function(){var e=new Ct,t=new Ct,n=new Rt;return function(){this.object.updateMatrixWorld(!0),n.getNormalMatrix(this.object.matrixWorld);for(var r=this.object.matrixWorld,i=this.geometry.attributes.position,a=this.object.geometry,o=a.vertices,s=a.faces,c=0,l=0,h=s.length;l<h;l++){var u=s[l],d=u.normal;e.copy(o[u.a]).add(o[u.b]).add(o[u.c]).divideScalar(3).applyMatrix4(r),t.copy(d).applyMatrix3(n).normalize().multiplyScalar(this.size).add(e),i.setXYZ(c,e.x,e.y,e.z),c+=1,i.setXYZ(c,t.x,t.y,t.z),c+=1}i.needsUpdate=!0}}(),Al.prototype=Object.create(En.prototype),Al.prototype.constructor=Al,Al.prototype.dispose=function(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()},Al.prototype.update=function(){var e=new Ct,t=new Ct,n=new Ct;return function(){e.setFromMatrixPosition(this.light.matrixWorld),t.setFromMatrixPosition(this.light.target.matrixWorld),n.subVectors(t,e),this.lightPlane.lookAt(t),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(t),this.targetLine.scale.z=n.length()}}(),Ll.prototype=Object.create(_a.prototype),Ll.prototype.constructor=Ll,Ll.prototype.update=function(){var e,t,n=new Ct,r=new Yi;function i(i,a,o,s){n.set(a,o,s).unproject(r);var c=t[i];if(void 0!==c)for(var l=e.getAttribute("position"),h=0,u=c.length;h<u;h++)l.setXYZ(c[h],n.x,n.y,n.z)}return function(){e=this.geometry,t=this.pointMap;
// we need just camera projection matrix inverse
// world matrix must be identity
r.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),
// center / target
i("c",0,0,-1),i("t",0,0,1),
// near
i("n1",-1,-1,-1),i("n2",1,-1,-1),i("n3",-1,1,-1),i("n4",1,1,-1),
// far
i("f1",-1,-1,1),i("f2",1,-1,1),i("f3",-1,1,1),i("f4",1,1,1),
// up
i("u1",.7,1.1,-1),i("u2",-.7,1.1,-1),i("u3",0,2,-1),
// cross
i("cf1",-1,0,1),i("cf2",1,0,1),i("cf3",0,-1,1),i("cf4",0,1,1),i("cn1",-1,0,-1),i("cn2",1,0,-1),i("cn3",0,-1,-1),i("cn4",0,1,-1),e.getAttribute("position").needsUpdate=!0}}(),Pl.prototype=Object.create(_a.prototype),Pl.prototype.constructor=Pl,Pl.prototype.update=function(){var e=new Qt;return function(t){if(void 0!==t&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&e.setFromObject(this.object),!e.isEmpty()){var n=e.min,r=e.max,i=this.geometry.attributes.position,a=i.array;a[0]=r.x,a[1]=r.y,a[2]=r.z,a[3]=n.x,a[4]=r.y,a[5]=r.z,a[6]=n.x,a[7]=n.y,a[8]=r.z,a[9]=r.x,a[10]=n.y,a[11]=r.z,a[12]=r.x,a[13]=r.y,a[14]=n.z,a[15]=n.x,a[16]=r.y,a[17]=n.z,a[18]=n.x,a[19]=n.y,a[20]=n.z,a[21]=r.x,a[22]=n.y,a[23]=n.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}}}(),Pl.prototype.setFromObject=function(e){return this.object=e,this.update(),this},Pl.prototype.copy=function(e){return _a.prototype.copy.call(this,e),this.object=e.object,this},Pl.prototype.clone=function(){return(new this.constructor).copy(this)},Cl.prototype=Object.create(_a.prototype),Cl.prototype.constructor=Cl,Cl.prototype.updateMatrixWorld=function(e){var t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),En.prototype.updateMatrixWorld.call(this,e))},Rl.prototype=Object.create(wa.prototype),Rl.prototype.constructor=Rl,Rl.prototype.updateMatrixWorld=function(e){var t=-this.plane.constant;Math.abs(t)<1e-8&&(t=1e-8),// sign does not matter
this.scale.set(.5*this.size,.5*this.size,t),this.children[0].material.side=t<0?m:p,// renderer flips side when determinant < 0; flipping not wanted here
this.lookAt(this.plane.normal),En.prototype.updateMatrixWorld.call(this,e)},Ol.prototype=Object.create(En.prototype),Ol.prototype.constructor=Ol,Ol.prototype.setDirection=(Kc=new Ct,function(e){
// dir is assumed to be normalized
e.y>.99999?this.quaternion.set(0,0,0,1):e.y<-.99999?this.quaternion.set(1,0,0,0):(Kc.set(e.z,0,-e.x).normalize(),Qc=Math.acos(e.y),this.quaternion.setFromAxisAngle(Kc,Qc))}),Ol.prototype.setLength=function(e,t,n){void 0===t&&(t=.2*e),void 0===n&&(n=.2*t),this.line.scale.set(1,Math.max(0,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()},Ol.prototype.setColor=function(e){this.line.material.color.copy(e),this.cone.material.color.copy(e)},Ol.prototype.copy=function(e){return En.prototype.copy.call(this,e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this},Ol.prototype.clone=function(){return(new this.constructor).copy(this)},Nl.prototype=Object.create(_a.prototype),Nl.prototype.constructor=Nl;
//
function Il(e){console.warn("THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),Ds.call(this,e),this.type="catmullrom",this.closed=!0}
//
function Dl(e){console.warn("THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),Ds.call(this,e),this.type="catmullrom"}
//
function zl(e){console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."),Ds.call(this,e),this.type="catmullrom"}
//
As.create=function(e,t){return console.log("THREE.Curve.create() has been deprecated"),e.prototype=Object.create(As.prototype),e.prototype.constructor=e,e.prototype.getPoint=t,e},
//
Object.assign(Xs.prototype,{createPointsGeometry:function(e){console.warn("THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");
// generate geometry from path points (for Line or Points objects)
var t=this.getPoints(e);return this.createGeometry(t)},createSpacedPointsGeometry:function(e){console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");
// generate geometry from equidistant sampling along the path
var t=this.getSpacedPoints(e);return this.createGeometry(t)},createGeometry:function(e){console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");for(var t=new Ln,n=0,r=e.length;n<r;n++){var i=e[n];t.vertices.push(new Ct(i.x,i.y,i.z||0))}return t}}),
//
Object.assign(Ys.prototype,{fromPoints:function(e){console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(e)}}),Il.prototype=Object.create(Ds.prototype),Dl.prototype=Object.create(Ds.prototype),zl.prototype=Object.create(Ds.prototype),Object.assign(zl.prototype,{initFromArray:function(){console.error("THREE.Spline: .initFromArray() has been removed.")},getControlPointsArray:function(){console.error("THREE.Spline: .getControlPointsArray() has been removed.")},reparametrizeByArcLength:function(){console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")}}),Ml.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},yl.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},
//
Object.assign(wc.prototype,{extractUrlBase:function(e){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),cc.extractUrlBase(e)}}),Object.assign(uc.prototype,{setTexturePath:function(e){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(e)}}),
//
Object.assign(fl.prototype,{center:function(e){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(e)},empty:function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(e){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},size:function(e){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(e)}}),Object.assign(Qt.prototype,{center:function(e){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(e)},empty:function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(e){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},isIntersectionSphere:function(e){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},size:function(e){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(e)}}),pl.prototype.center=function(e){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(e)},Object.assign(At,{random16:function(){return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."),Math.random()},nearestPowerOfTwo:function(e){return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."),At.floorPowerOfTwo(e)},nextPowerOfTwo:function(e){return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."),At.ceilPowerOfTwo(e)}}),Object.assign(Rt.prototype,{flattenToArrayOffset:function(e,t){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},multiplyVector3:function(e){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},multiplyVector3Array:function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},applyToBuffer:function(e/*, offset, length */){return console.warn("THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."),this.applyToBufferAttribute(e)},applyToVector3Array:function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")}}),Object.assign(tn.prototype,{extractPosition:function(e){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(e)},flattenToArrayOffset:function(e,t){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},getPosition:function(){var e;return function(){return void 0===e&&(e=new Ct),console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),e.setFromMatrixColumn(this,3)}}(),setRotationFromQuaternion:function(e){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(e)},multiplyToArray:function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},multiplyVector3:function(e){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector4:function(e){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector3Array:function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},rotateAxis:function(e){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),e.transformDirection(this)},crossVector:function(e){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},translate:function(){console.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},applyToBuffer:function(e/*, offset, length */){return console.warn("THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."),this.applyToBufferAttribute(e)},applyToVector3Array:function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},makeFrustum:function(e,t,n,r,i,a){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(e,t,r,n,i,a)}}),$t.prototype.isIntersectionLine=function(e){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(e)},Pt.prototype.multiplyVector3=function(e){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)},Object.assign(hr.prototype,{isIntersectionBox:function(e){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},isIntersectionPlane:function(e){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(e)},isIntersectionSphere:function(e){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)}}),Object.assign(ur.prototype,{area:function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},barycoordFromPoint:function(e,t){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(e,t)},midpoint:function(e){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(e)},normal:function(e){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(e)},plane:function(e){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(e)}}),Object.assign(ur,{barycoordFromPoint:function(e,t,n,r,i){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),ur.getBarycoord(e,t,n,r,i)},normal:function(e,t,n,r){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),ur.getNormal(e,t,n,r)}}),Object.assign(Zs.prototype,{extractAllPoints:function(e){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(e)},extrude:function(e){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new wo(this,e)},makeGeometry:function(e){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new No(this,e)}}),Object.assign(Lt.prototype,{fromAttribute:function(e,t,n){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},distanceToManhattan:function(e){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},lengthManhattan:function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(Ct.prototype,{setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(e){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(e)},getScaleFromMatrix:function(e){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(e)},getColumnFromMatrix:function(e,t){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(t,e)},applyProjection:function(e){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(e)},fromAttribute:function(e,t,n){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},distanceToManhattan:function(e){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},lengthManhattan:function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(qt.prototype,{fromAttribute:function(e,t,n){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},lengthManhattan:function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),
//
Object.assign(Ln.prototype,{computeTangents:function(){console.error("THREE.Geometry: .computeTangents() has been removed.")},computeLineDistances:function(){console.error("THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.")}}),Object.assign(En.prototype,{getChildByName:function(e){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(e)},renderDepth:function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},translate:function(e,t){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(t,e)},getWorldRotation:function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")}}),Object.defineProperties(En.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(e){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=e}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),Object.defineProperties(ga.prototype,{objects:{get:function(){return console.warn("THREE.LOD: .objects has been renamed to .levels."),this.levels}}}),Object.defineProperty(ya.prototype,"useVertexTexture",{get:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")},set:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")}}),va.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},Object.defineProperty(As.prototype,"__arcLengthDivisions",{get:function(){return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions},set:function(e){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions=e}}),
//
Zi.prototype.setLens=function(e,t){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==t&&(this.filmGauge=t),this.setFocalLength(e)},
//
Object.defineProperties(Js.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(e){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=e}},shadowCameraLeft:{set:function(e){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=e}},shadowCameraRight:{set:function(e){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=e}},shadowCameraTop:{set:function(e){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=e}},shadowCameraBottom:{set:function(e){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=e}},shadowCameraNear:{set:function(e){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=e}},shadowCameraFar:{set:function(e){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=e}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(e){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=e}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(e){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=e}},shadowMapHeight:{set:function(e){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=e}}}),
//
Object.defineProperties(Pn.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},copyIndicesArray:function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")}}),Object.assign(jn.prototype,{addIndex:function(e){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(e)},addDrawCall:function(e,t,n){void 0!==n&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(e,t)},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},computeTangents:function(){console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")},computeOffsets:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")}}),Object.defineProperties(jn.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),
//
Object.assign(_o.prototype,{getArrays:function(){console.error("THREE.ExtrudeBufferGeometry: .getArrays() has been removed.")},addShapeList:function(){console.error("THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.")},addShape:function(){console.error("THREE.ExtrudeBufferGeometry: .addShape() has been removed.")}}),
//
Object.defineProperties(il.prototype,{dynamic:{set:function(){console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")}},onUpdate:{value:function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this}}}),
//
Object.defineProperties(Yn.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new hn}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===e}}}),Object.defineProperties(Yo.prototype,{metal:{get:function(){return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),!1},set:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")}}}),Object.defineProperties(lr.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(e){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=e}}}),
//
Object.assign(ca.prototype,{clearTarget:function(e,t,n,r){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(e),this.clear(t,n,r)},animate:function(e){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(e)},getCurrentRenderTarget:function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},getMaxAnisotropy:function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},getPrecision:function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},resetGLState:function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},supportsFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},supportsHalfFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},supportsStandardDerivatives:function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},supportsCompressedTextureS3TC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},supportsCompressedTexturePVRTC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},supportsBlendMinMax:function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},supportsVertexTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},supportsInstancedArrays:function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},enableScissorTest:function(e){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(e)},initMaterial:function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},addPrePlugin:function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},addPostPlugin:function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},updateShadowMap:function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},setFaceCulling:function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},allocTextureUnit:function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},setTexture:function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},setTexture2D:function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},setTextureCube:function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")}}),Object.defineProperties(ca.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=e}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=e}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(Hi.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),
//
Object.defineProperties(Zt.prototype,{activeCubeFace:{set:function(){console.warn("THREE.WebGLRenderTargetCube: .activeCubeFace has been removed. It is now the second parameter of WebGLRenderer.setRenderTarget().")}},activeMipMapLevel:{set:function(){console.warn("THREE.WebGLRenderTargetCube: .activeMipMapLevel has been removed. It is now the third parameter of WebGLRenderer.setRenderTarget().")}}}),
//
Object.defineProperties(Xt.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=e}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=e}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=e}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=e}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(e){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=e}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(e){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=e}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(e){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=e}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(e){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=e}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(e){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=e}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(e){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=e}}}),
//
Object.defineProperties(oa.prototype,{standing:{set:function(){console.warn("THREE.WebVRManager: .standing has been removed.")}},userHeight:{set:function(){console.warn("THREE.WebVRManager: .userHeight has been removed.")}}}),
//
Ic.prototype.load=function(e){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");var t=this;return(new Mc).load(e,function(e){t.setBuffer(e)}),this},zc.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},
//
Rc.prototype.updateCubeMap=function(e,t){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(e,t)};
//
var kl={merge:function(e,t,n){var r;console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead."),t.isMesh&&(t.matrixAutoUpdate&&t.updateMatrix(),r=t.matrix,t=t.geometry),e.merge(t,r,n)},center:function(e){return console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."),e.center()}};Ht.crossOrigin=void 0,Ht.loadTexture=function(e,t,n,r){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");var i=new Ts;i.setCrossOrigin(this.crossOrigin);var a=i.load(e,n,void 0,r);return t&&(a.mapping=t),a},Ht.loadTextureCube=function(e,t,n,r){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");var i=new Ss;i.setCrossOrigin(this.crossOrigin);var a=i.load(e,n,void 0,r);return t&&(a.mapping=t),a},Ht.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},Ht.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};
//
var Bl={createMultiMaterialObject:function(){console.error("THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js")},detach:function(){console.error("THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js")},attach:function(){console.error("THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js")}};
//
var Ul=/* */Object.freeze({WebGLMultisampleRenderTarget:Yt,WebGLRenderTargetCube:Zt,WebGLRenderTarget:Xt,WebGLRenderer:ca,ShaderLib:fn,UniformsLib:dn,UniformsUtils:cn,ShaderChunk:nn,FogExp2:la,Fog:ha,Scene:ua,Sprite:ma,LOD:ga,SkinnedMesh:va,Skeleton:ya,Bone:ba,Mesh:fr,LineSegments:_a,LineLoop:Ma,Line:wa,Points:Sa,Group:Xi,VideoTexture:Ta,DataTexture:Jt,DataTexture2DArray:Tr,DataTexture3D:Ar,CompressedTexture:Aa,CubeTexture:Sr,CanvasTexture:La,DepthTexture:Pa,Texture:Wt,AnimationLoader:ws,CompressedTextureLoader:_s,DataTextureLoader:Ms,CubeTextureLoader:Ss,TextureLoader:Ts,ObjectLoader:uc,MaterialLoader:sc,BufferGeometryLoader:lc,DefaultLoadingManager:ys,LoadingManager:vs,ImageLoader:Es,ImageBitmapLoader:gc,FontLoader:xc,FileLoader:xs,Loader:wc,LoaderUtils:cc,Cache:gs,AudioLoader:Mc,SpotLightShadow:$s,SpotLight:ec,PointLight:tc,RectAreaLight:oc,HemisphereLight:Qs,HemisphereLightProbe:Tc,DirectionalLightShadow:rc,DirectionalLight:ic,AmbientLight:ac,AmbientLightProbe:Ac,LightShadow:Ks,Light:Js,LightProbe:Sc,StereoCamera:Lc,PerspectiveCamera:Zi,OrthographicCamera:nc,CubeCamera:Rc,ArrayCamera:Ji,Camera:Yi,AudioListener:Nc,PositionalAudio:Dc,AudioContext:_c,AudioAnalyser:zc,Audio:Ic,VectorKeyframeTrack:fs,StringKeyframeTrack:ds,QuaternionKeyframeTrack:us,NumberKeyframeTrack:ls,ColorKeyframeTrack:cs,BooleanKeyframeTrack:ss,PropertyMixer:kc,PropertyBinding:el,KeyframeTrack:os,AnimationUtils:ts,AnimationObjectGroup:tl,AnimationMixer:rl,AnimationClip:ps,Uniform:il,InstancedBufferGeometry:al,BufferGeometry:jn,Geometry:Ln,InterleavedBufferAttribute:fa,InstancedInterleavedBuffer:ol,InterleavedBuffer:da,InstancedBufferAttribute:sl,Face3:gn,Object3D:En,Raycaster:cl,Layers:yn,EventDispatcher:r,Clock:Oc,QuaternionLinearInterpolant:hs,LinearInterpolant:is,DiscreteInterpolant:as,CubicInterpolant:rs,Interpolant:ns,Triangle:ur,Math:At,Spherical:ul,Cylindrical:dl,Plane:$t,Frustum:en,Sphere:Kt,Ray:hr,Matrix4:tn,Matrix3:Rt,Box3:Qt,Box2:fl,Line3:pl,Euler:vn,Vector4:qt,Vector3:Ct,Vector2:Lt,Quaternion:Pt,Color:hn,SphericalHarmonics3:Ec,ImmediateRenderObject:ml,VertexNormalsHelper:gl,SpotLightHelper:vl,SkeletonHelper:yl,PointLightHelper:bl,RectAreaLightHelper:xl,HemisphereLightHelper:wl,LightProbeHelper:_l,GridHelper:Ml,PolarGridHelper:El,PositionalAudioHelper:Sl,FaceNormalsHelper:Tl,DirectionalLightHelper:Al,CameraHelper:Ll,BoxHelper:Pl,Box3Helper:Cl,PlaneHelper:Rl,ArrowHelper:Ol,AxesHelper:Nl,Shape:Zs,Path:Ys,ShapePath:vc,Font:yc,CurvePath:Xs,Curve:As,ImageUtils:Ht,ShapeUtils:yo,WebGLUtils:qi,WireframeGeometry:Ca,ParametricGeometry:Ra,ParametricBufferGeometry:Oa,TetrahedronGeometry:Da,TetrahedronBufferGeometry:za,OctahedronGeometry:ka,OctahedronBufferGeometry:Ba,IcosahedronGeometry:Ua,IcosahedronBufferGeometry:Fa,DodecahedronGeometry:Ga,DodecahedronBufferGeometry:ja,PolyhedronGeometry:Na,PolyhedronBufferGeometry:Ia,TubeGeometry:Ha,TubeBufferGeometry:Va,TorusKnotGeometry:Wa,TorusKnotBufferGeometry:qa,TorusGeometry:Xa,TorusBufferGeometry:Ya,TextGeometry:So,TextBufferGeometry:To,SphereGeometry:Ao,SphereBufferGeometry:Lo,RingGeometry:Po,RingBufferGeometry:Co,PlaneGeometry:Wn,PlaneBufferGeometry:qn,LatheGeometry:Ro,LatheBufferGeometry:Oo,ShapeGeometry:No,ShapeBufferGeometry:Io,ExtrudeGeometry:wo,ExtrudeBufferGeometry:_o,EdgesGeometry:zo,ConeGeometry:Uo,ConeBufferGeometry:Fo,CylinderGeometry:ko,CylinderBufferGeometry:Bo,CircleGeometry:Go,CircleBufferGeometry:jo,BoxGeometry:Hn,CubeGeometry:Hn,BoxBufferGeometry:Vn,ShadowMaterial:Vo,SpriteMaterial:pa,RawShaderMaterial:Wo,ShaderMaterial:lr,PointsMaterial:Ea,MeshPhysicalMaterial:Xo,MeshStandardMaterial:qo,MeshPhongMaterial:Yo,MeshToonMaterial:Zo,MeshNormalMaterial:Jo,MeshLambertMaterial:Qo,MeshDepthMaterial:Gi,MeshDistanceMaterial:ji,MeshBasicMaterial:dr,MeshMatcapMaterial:Ko,LineDashedMaterial:$o,LineBasicMaterial:xa,Material:Yn,Float64BufferAttribute:Bn,Float32BufferAttribute:kn,Uint32BufferAttribute:zn,Int32BufferAttribute:Dn,Uint16BufferAttribute:In,Int16BufferAttribute:Nn,Uint8ClampedBufferAttribute:On,Uint8BufferAttribute:Rn,Int8BufferAttribute:Cn,BufferAttribute:Pn,ArcCurve:Ps,CatmullRomCurve3:Ds,CubicBezierCurve:Us,CubicBezierCurve3:Fs,EllipseCurve:Ls,LineCurve:Gs,LineCurve3:js,QuadraticBezierCurve:Hs,QuadraticBezierCurve3:Vs,SplineCurve:Ws,REVISION:s,MOUSE:c,CullFaceNone:l,CullFaceBack:h,CullFaceFront:u,CullFaceFrontBack:3,FrontFaceDirectionCW:0,FrontFaceDirectionCCW:1,BasicShadowMap:0,PCFShadowMap:d,PCFSoftShadowMap:f,FrontSide:p,BackSide:m,DoubleSide:g,FlatShading:1,SmoothShading:2,NoColors:v,FaceColors:y,VertexColors:b,NoBlending:x,NormalBlending:w,AdditiveBlending:_,SubtractiveBlending:M,MultiplyBlending:E,CustomBlending:S,AddEquation:T,SubtractEquation:A,ReverseSubtractEquation:L,MinEquation:P,MaxEquation:C,ZeroFactor:R,OneFactor:O,SrcColorFactor:N,OneMinusSrcColorFactor:I,SrcAlphaFactor:D,OneMinusSrcAlphaFactor:z,DstAlphaFactor:k,OneMinusDstAlphaFactor:B,DstColorFactor:U,OneMinusDstColorFactor:F,SrcAlphaSaturateFactor:G,NeverDepth:j,AlwaysDepth:H,LessDepth:V,LessEqualDepth:W,EqualDepth:q,GreaterEqualDepth:X,GreaterDepth:Y,NotEqualDepth:Z,MultiplyOperation:J,MixOperation:Q,AddOperation:K,NoToneMapping:$,LinearToneMapping:ee,ReinhardToneMapping:te,Uncharted2ToneMapping:ne,CineonToneMapping:re,ACESFilmicToneMapping:ie,UVMapping:300,CubeReflectionMapping:ae,CubeRefractionMapping:oe,EquirectangularReflectionMapping:se,EquirectangularRefractionMapping:ce,SphericalReflectionMapping:le,CubeUVReflectionMapping:he,CubeUVRefractionMapping:ue,RepeatWrapping:de,ClampToEdgeWrapping:fe,MirroredRepeatWrapping:pe,NearestFilter:me,NearestMipMapNearestFilter:ge,NearestMipMapLinearFilter:ve,LinearFilter:ye,LinearMipMapNearestFilter:be,LinearMipMapLinearFilter:xe,UnsignedByteType:we,ByteType:_e,ShortType:Me,UnsignedShortType:Ee,IntType:Se,UnsignedIntType:Te,FloatType:Ae,HalfFloatType:Le,UnsignedShort4444Type:Pe,UnsignedShort5551Type:Ce,UnsignedShort565Type:Re,UnsignedInt248Type:Oe,AlphaFormat:Ne,RGBFormat:Ie,RGBAFormat:De,LuminanceFormat:ze,LuminanceAlphaFormat:ke,RGBEFormat:Be,DepthFormat:Ue,DepthStencilFormat:Fe,RedFormat:Ge,RGB_S3TC_DXT1_Format:je,RGBA_S3TC_DXT1_Format:He,RGBA_S3TC_DXT3_Format:Ve,RGBA_S3TC_DXT5_Format:We,RGB_PVRTC_4BPPV1_Format:qe,RGB_PVRTC_2BPPV1_Format:Xe,RGBA_PVRTC_4BPPV1_Format:Ye,RGBA_PVRTC_2BPPV1_Format:Ze,RGB_ETC1_Format:Je,RGBA_ASTC_4x4_Format:Qe,RGBA_ASTC_5x4_Format:Ke,RGBA_ASTC_5x5_Format:$e,RGBA_ASTC_6x5_Format:et,RGBA_ASTC_6x6_Format:tt,RGBA_ASTC_8x5_Format:nt,RGBA_ASTC_8x6_Format:rt,RGBA_ASTC_8x8_Format:it,RGBA_ASTC_10x5_Format:at,RGBA_ASTC_10x6_Format:ot,RGBA_ASTC_10x8_Format:st,RGBA_ASTC_10x10_Format:ct,RGBA_ASTC_12x10_Format:lt,RGBA_ASTC_12x12_Format:ht,LoopOnce:2200,LoopRepeat:ut,LoopPingPong:2202,InterpolateDiscrete:2300,InterpolateLinear:2301,InterpolateSmooth:2302,ZeroCurvatureEnding:dt,ZeroSlopeEnding:2401,WrapAroundEnding:2402,TrianglesDrawMode:ft,TriangleStripDrawMode:pt,TriangleFanDrawMode:mt,LinearEncoding:gt,sRGBEncoding:vt,GammaEncoding:yt,RGBEEncoding:bt,LogLuvEncoding:3003,RGBM7Encoding:xt,RGBM16Encoding:wt,RGBDEncoding:_t,BasicDepthPacking:Mt,RGBADepthPacking:Et,TangentSpaceNormalMap:St,ObjectSpaceNormalMap:Tt,Face4:
/**
   * @author mrdoob / http://mrdoob.com/
   */
function(e,t,n,r,i,a,o){return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."),new gn(e,t,n,i,a,o)},LineStrip:0,LinePieces:1,MeshFaceMaterial:function(e){return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."),e},MultiMaterial:function(e){return void 0===e&&(e=[]),console.warn("THREE.MultiMaterial has been removed. Use an Array instead."),e.isMultiMaterial=!0,e.materials=e,e.clone=function(){return e.slice()},e},PointCloud:function(e,t){return console.warn("THREE.PointCloud has been renamed to THREE.Points."),new Sa(e,t)},Particle:function(e){return console.warn("THREE.Particle has been renamed to THREE.Sprite."),new ma(e)},ParticleSystem:function(e,t){return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),new Sa(e,t)},PointCloudMaterial:function(e){return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),new Ea(e)},ParticleBasicMaterial:function(e){return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),new Ea(e)},ParticleSystemMaterial:function(e){return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),new Ea(e)},Vertex:function(e,t,n){return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),new Ct(e,t,n)}
//
,DynamicBufferAttribute:function(e,t){return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead."),new Pn(e,t).setDynamic(!0)},Int8Attribute:function(e,t){return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."),new Cn(e,t)},Uint8Attribute:function(e,t){return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."),new Rn(e,t)},Uint8ClampedAttribute:function(e,t){return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."),new On(e,t)},Int16Attribute:function(e,t){return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."),new Nn(e,t)},Uint16Attribute:function(e,t){return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."),new In(e,t)},Int32Attribute:function(e,t){return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."),new Dn(e,t)},Uint32Attribute:function(e,t){return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."),new zn(e,t)},Float32Attribute:function(e,t){return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."),new kn(e,t)},Float64Attribute:function(e,t){return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."),new Bn(e,t)},ClosedSplineCurve3:Il,SplineCurve3:Dl,Spline:zl,AxisHelper:
//
function(e){return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."),new Nl(e)},BoundingBoxHelper:function(e,t){return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."),new Pl(e,t)},EdgesHelper:function(e,t){return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),new _a(new zo(e.geometry),new xa({color:void 0!==t?t:16777215}))},WireframeHelper:function(e,t){return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."),new _a(new Ca(e.geometry),new xa({color:void 0!==t?t:16777215}))},XHRLoader:function(e){return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."),new xs(e)},BinaryTextureLoader:function(e){return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."),new Ms(e)},GeometryUtils:kl,Projector:
//
function(){console.error("THREE.Projector has been moved to /examples/js/renderers/Projector.js."),this.projectVector=function(e,t){console.warn("THREE.Projector: .projectVector() is now vector.project()."),e.project(t)},this.unprojectVector=function(e,t){console.warn("THREE.Projector: .unprojectVector() is now vector.unproject()."),e.unproject(t)},this.pickingRay=function(){console.error("THREE.Projector: .pickingRay() is now raycaster.setFromCamera().")}}
//
,CanvasRenderer:function(){console.error("THREE.CanvasRenderer has been removed")}
//
,JSONLoader:function(){console.error("THREE.JSONLoader has been removed.")},SceneUtils:Bl,LensFlare:function(){console.error("THREE.LensFlare has been moved to /examples/js/objects/Lensflare.js")}});
/*
   * @author zz85 / https://github.com/zz85
   * @author mrdoob / http://mrdoob.com
   * Running this will allow you to drag three.js objects around the screen.
   */function Fl(e,t,n){if(e.isCamera){console.warn("THREE.DragControls: Constructor now expects ( objects, camera, domElement )");var r=e;e=t,t=r}var i=new $t,a=new cl,o=new Lt,s=new Ct,c=new Ct,l=null,h=null,u=this;function d(){n.addEventListener("mousemove",p,!1),n.addEventListener("mousedown",m,!1),n.addEventListener("mouseup",g,!1),n.addEventListener("mouseleave",g,!1),n.addEventListener("touchmove",v,!1),n.addEventListener("touchstart",y,!1),n.addEventListener("touchend",b,!1)}function f(){n.removeEventListener("mousemove",p,!1),n.removeEventListener("mousedown",m,!1),n.removeEventListener("mouseup",g,!1),n.removeEventListener("mouseleave",g,!1),n.removeEventListener("touchmove",v,!1),n.removeEventListener("touchstart",y,!1),n.removeEventListener("touchend",b,!1)}function p(r){r.preventDefault();var d=n.getBoundingClientRect();if(o.x=(r.clientX-d.left)/d.width*2-1,o.y=-(r.clientY-d.top)/d.height*2+1,a.setFromCamera(o,t),l&&u.enabled)return a.ray.intersectPlane(i,c)&&l.position.copy(c.sub(s)),void u.dispatchEvent({type:"drag",object:l});a.setFromCamera(o,t);var f=a.intersectObjects(e);if(f.length>0){var p=f[0].object;i.setFromNormalAndCoplanarPoint(t.getWorldDirection(i.normal),p.position),h!==p&&(u.dispatchEvent({type:"hoveron",object:p}),n.style.cursor="pointer",h=p)}else null!==h&&(u.dispatchEvent({type:"hoveroff",object:h}),n.style.cursor="auto",h=null)}function m(r){r.preventDefault(),a.setFromCamera(o,t);var h=a.intersectObjects(e);h.length>0&&(l=h[0].object,a.ray.intersectPlane(i,c)&&s.copy(c).sub(l.position),n.style.cursor="move",u.dispatchEvent({type:"dragstart",object:l}))}function g(e){e.preventDefault(),l&&(u.dispatchEvent({type:"dragend",object:l}),l=null),n.style.cursor="auto"}function v(e){e.preventDefault(),e=e.changedTouches[0];var r=n.getBoundingClientRect();if(o.x=(e.clientX-r.left)/r.width*2-1,o.y=-(e.clientY-r.top)/r.height*2+1,a.setFromCamera(o,t),l&&u.enabled)return a.ray.intersectPlane(i,c)&&l.position.copy(c.sub(s)),void u.dispatchEvent({type:"drag",object:l})}function y(r){r.preventDefault(),r=r.changedTouches[0];var h=n.getBoundingClientRect();o.x=(r.clientX-h.left)/h.width*2-1,o.y=-(r.clientY-h.top)/h.height*2+1,a.setFromCamera(o,t);var d=a.intersectObjects(e);d.length>0&&(l=d[0].object,i.setFromNormalAndCoplanarPoint(t.getWorldDirection(i.normal),l.position),a.ray.intersectPlane(i,c)&&s.copy(c).sub(l.position),n.style.cursor="move",u.dispatchEvent({type:"dragstart",object:l}))}function b(e){e.preventDefault(),l&&(u.dispatchEvent({type:"dragend",object:l}),l=null),n.style.cursor="auto"}d(),
// API
this.enabled=!0,this.activate=d,this.deactivate=f,this.dispose=function(){f()},
// Backward compatibility
this.setObjects=function(){console.error("THREE.DragControls: setObjects() has been removed.")},this.on=function(e,t){console.warn("THREE.DragControls: on() has been deprecated. Use addEventListener() instead."),u.addEventListener(e,t)},this.off=function(e,t){console.warn("THREE.DragControls: off() has been deprecated. Use removeEventListener() instead."),u.removeEventListener(e,t)},this.notify=function(e){console.error("THREE.DragControls: notify() has been deprecated. Use dispatchEvent() instead."),u.dispatchEvent({type:e})}}function Gl(e,t,n){var r;function i(){var i,a,o=r.length,s=0,c=0,l=0;for(i=0;i<o;++i)s+=(a=r[i]).x||0,c+=a.y||0,l+=a.z||0;for(s=s/o-e,c=c/o-t,l=l/o-n,i=0;i<o;++i)a=r[i],s&&(a.x-=s),c&&(a.y-=c),l&&(a.z-=l)}return null==e&&(e=0),null==t&&(t=0),null==n&&(n=0),i.initialize=function(e){r=e},i.x=function(t){return arguments.length?(e=+t,i):e},i.y=function(e){return arguments.length?(t=+e,i):t},i.z=function(e){return arguments.length?(n=+e,i):n},i}function jl(e,t,n){if(isNaN(t))return e;// ignore invalid points
var r,i,a,o,s,c,l=e._root,h={data:n},u=e._x0,d=e._x1;
// If the tree is empty, initialize the root as a leaf.
if(!l)return e._root=h,e;
// Find the existing leaf for the new point, or add it.
for(;l.length;)if((o=t>=(i=(u+d)/2))?u=i:d=i,r=l,!(l=l[s=+o]))return r[s]=h,e;
// Is the new point is exactly coincident with the existing point?
if(t===(a=+e._x.call(null,l.data)))return h.next=l,r?r[s]=h:e._root=h,e;
// Otherwise, split the leaf node until the old and new point are separated.
do{r=r?r[s]=new Array(2):e._root=new Array(2),(o=t>=(i=(u+d)/2))?u=i:d=i}while((s=+o)==(c=+(a>=i)));return r[c]=l,r[s]=h,e}function Hl(e,t,n){this.node=e,this.x0=t,this.x1=n}function Vl(e){return e[0]}function Wl(e,t){var n=new ql(null==t?Vl:t,NaN,NaN);return null==e?n:n.addAll(e)}function ql(e,t,n){this._x=e,this._x0=t,this._x1=n,this._root=void 0}function Xl(e){for(var t={data:e.data},n=t;e=e.next;)n=n.next={data:e.data};return t}Fl.prototype=Object.create(r.prototype),Fl.prototype.constructor=Fl;var Yl=Wl.prototype=ql.prototype;function Zl(e,t,n,r){if(isNaN(t)||isNaN(n))return e;// ignore invalid points
var i,a,o,s,c,l,h,u,d,f=e._root,p={data:r},m=e._x0,g=e._y0,v=e._x1,y=e._y1;
// If the tree is empty, initialize the root as a leaf.
if(!f)return e._root=p,e;
// Find the existing leaf for the new point, or add it.
for(;f.length;)if((l=t>=(a=(m+v)/2))?m=a:v=a,(h=n>=(o=(g+y)/2))?g=o:y=o,i=f,!(f=f[u=h<<1|l]))return i[u]=p,e;
// Is the new point is exactly coincident with the existing point?
if(s=+e._x.call(null,f.data),c=+e._y.call(null,f.data),t===s&&n===c)return p.next=f,i?i[u]=p:e._root=p,e;
// Otherwise, split the leaf node until the old and new point are separated.
do{i=i?i[u]=new Array(4):e._root=new Array(4),(l=t>=(a=(m+v)/2))?m=a:v=a,(h=n>=(o=(g+y)/2))?g=o:y=o}while((u=h<<1|l)==(d=(c>=o)<<1|s>=a));return i[d]=f,i[u]=p,e}function Jl(e,t,n,r,i){this.node=e,this.x0=t,this.y0=n,this.x1=r,this.y1=i}function Ql(e){return e[0]}function Kl(e){return e[1]}function $l(e,t,n){var r=new eh(null==t?Ql:t,null==n?Kl:n,NaN,NaN,NaN,NaN);return null==e?r:r.addAll(e)}function eh(e,t,n,r,i,a){this._x=e,this._y=t,this._x0=n,this._y0=r,this._x1=i,this._y1=a,this._root=void 0}function th(e){for(var t={data:e.data},n=t;e=e.next;)n=n.next={data:e.data};return t}Yl.copy=function(){var e,t,n=new ql(this._x,this._x0,this._x1),r=this._root;if(!r)return n;if(!r.length)return n._root=Xl(r),n;for(e=[{source:r,target:n._root=new Array(2)}];r=e.pop();)for(var i=0;i<2;++i)(t=r.source[i])&&(t.length?e.push({source:t,target:r.target[i]=new Array(2)}):r.target[i]=Xl(t));return n},Yl.add=function(e){var t=+this._x.call(null,e);return jl(this.cover(t),t,e)},Yl.addAll=function(e){var t,n,r=e.length,i=new Array(r),a=1/0,o=-1/0;
// Compute the points and their extent.
for(t=0;t<r;++t)isNaN(n=+this._x.call(null,e[t]))||(i[t]=n,n<a&&(a=n),n>o&&(o=n));
// If there were no (valid) points, inherit the existing extent.
// Add the new points.
for(o<a&&(a=this._x0,o=this._x1),
// Expand the tree to cover the new points.
this.cover(a).cover(o),t=0;t<r;++t)jl(this,i[t],e[t]);return this},Yl.cover=function(e){if(isNaN(e=+e))return this;// ignore invalid points
var t=this._x0,n=this._x1;
// If the binarytree has no extent, initialize them.
// Integer extent are necessary so that if we later double the extent,
// the existing half boundaries don’t change due to floating point error!
if(isNaN(t))n=(t=Math.floor(e))+1;else{if(!(t>e||e>n))return this;var r,i,a=n-t,o=this._root;switch(i=+(e<(t+n)/2)){case 0:do{(r=new Array(2))[i]=o,o=r}while(e>(n=t+(a*=2)));break;case 1:do{(r=new Array(2))[i]=o,o=r}while((t=n-(a*=2))>e)}this._root&&this._root.length&&(this._root=o)}return this._x0=t,this._x1=n,this},Yl.data=function(){var e=[];return this.visit(function(t){if(!t.length)do{e.push(t.data)}while(t=t.next)}),e},Yl.extent=function(e){return arguments.length?this.cover(+e[0][0]).cover(+e[1][0]):isNaN(this._x0)?void 0:[[this._x0],[this._x1]]},Yl.find=function(e,t){var n,r,i,a,o,s=this._x0,c=this._x1,l=[],h=this._root;for(h&&l.push(new Hl(h,s,c)),null==t?t=1/0:(s=e-t,c=e+t);a=l.pop();)
// Stop searching if this half can’t contain a closer node.
if(!(!(h=a.node)||(r=a.x0)>c||(i=a.x1)<s))
// Bisect the current half.
if(h.length){var u=(r+i)/2;l.push(new Hl(h[1],u,i),new Hl(h[0],r,u)),
// Visit the closest half first.
(o=+(e>=u))&&(a=l[l.length-1],l[l.length-1]=l[l.length-1-o],l[l.length-1-o]=a)}
// Visit this point. (Visiting coincident points isn’t necessary!)
else{var d=Math.abs(e-+this._x.call(null,h.data));d<t&&(t=d,s=e-d,c=e+d,n=h.data)}return n},Yl.remove=function(e){if(isNaN(a=+this._x.call(null,e)))return this;// ignore invalid points
var t,n,r,i,a,o,s,c,l,h=this._root,u=this._x0,d=this._x1;
// If the tree is empty, initialize the root as a leaf.
if(!h)return this;
// Find the leaf node for the point.
// While descending, also retain the deepest parent with a non-removed sibling.
if(h.length)for(;;){if((s=a>=(o=(u+d)/2))?u=o:d=o,t=h,!(h=h[c=+s]))return this;if(!h.length)break;t[c+1&1]&&(n=t,l=c)}
// Find the point to remove.
for(;h.data!==e;)if(r=h,!(h=h.next))return this;
// If there are multiple coincident points, remove just the point.
return(i=h.next)&&delete h.next,r?(i?r.next=i:delete r.next,this):
// If this is the root point, remove it.
t?(
// Remove this leaf.
i?t[c]=i:delete t[c],
// If the parent now contains exactly one leaf, collapse superfluous parents.
(h=t[0]||t[1])&&h===(t[1]||t[0])&&!h.length&&(n?n[l]=h:this._root=h),this):(this._root=i,this)},Yl.removeAll=function(e){for(var t=0,n=e.length;t<n;++t)this.remove(e[t]);return this},Yl.root=function(){return this._root},Yl.size=function(){var e=0;return this.visit(function(t){if(!t.length)do{++e}while(t=t.next)}),e},Yl.visit=function(e){var t,n,r,i,a=[],o=this._root;for(o&&a.push(new Hl(o,this._x0,this._x1));t=a.pop();)if(!e(o=t.node,r=t.x0,i=t.x1)&&o.length){var s=(r+i)/2;(n=o[1])&&a.push(new Hl(n,s,i)),(n=o[0])&&a.push(new Hl(n,r,s))}return this},Yl.visitAfter=function(e){var t,n=[],r=[];for(this._root&&n.push(new Hl(this._root,this._x0,this._x1));t=n.pop();){var i=t.node;if(i.length){var a,o=t.x0,s=t.x1,c=(o+s)/2;(a=i[0])&&n.push(new Hl(a,o,c)),(a=i[1])&&n.push(new Hl(a,c,s))}r.push(t)}for(;t=r.pop();)e(t.node,t.x0,t.x1);return this},Yl.x=function(e){return arguments.length?(this._x=e,this):this._x};var nh=$l.prototype=eh.prototype;function rh(e,t,n,r,i){if(isNaN(t)||isNaN(n)||isNaN(r))return e;// ignore invalid points
var a,o,s,c,l,h,u,d,f,p,m,g,v=e._root,y={data:i},b=e._x0,x=e._y0,w=e._z0,_=e._x1,M=e._y1,E=e._z1;
// If the tree is empty, initialize the root as a leaf.
if(!v)return e._root=y,e;
// Find the existing leaf for the new point, or add it.
for(;v.length;)if((d=t>=(o=(b+_)/2))?b=o:_=o,(f=n>=(s=(x+M)/2))?x=s:M=s,(p=r>=(c=(w+E)/2))?w=c:E=c,a=v,!(v=v[m=p<<2|f<<1|d]))return a[m]=y,e;
// Is the new point is exactly coincident with the existing point?
if(l=+e._x.call(null,v.data),h=+e._y.call(null,v.data),u=+e._z.call(null,v.data),t===l&&n===h&&r===u)return y.next=v,a?a[m]=y:e._root=y,e;
// Otherwise, split the leaf node until the old and new point are separated.
do{a=a?a[m]=new Array(8):e._root=new Array(8),(d=t>=(o=(b+_)/2))?b=o:_=o,(f=n>=(s=(x+M)/2))?x=s:M=s,(p=r>=(c=(w+E)/2))?w=c:E=c}while((m=p<<2|f<<1|d)==(g=(u>=c)<<2|(h>=s)<<1|l>=o));return a[g]=v,a[m]=y,e}function ih(e,t,n,r,i,a,o){this.node=e,this.x0=t,this.y0=n,this.z0=r,this.x1=i,this.y1=a,this.z1=o}function ah(e){return e[0]}function oh(e){return e[1]}function sh(e){return e[2]}function ch(e,t,n,r){var i=new lh(null==t?ah:t,null==n?oh:n,null==r?sh:r,NaN,NaN,NaN,NaN,NaN,NaN);return null==e?i:i.addAll(e)}function lh(e,t,n,r,i,a,o,s,c){this._x=e,this._y=t,this._z=n,this._x0=r,this._y0=i,this._z0=a,this._x1=o,this._y1=s,this._z1=c,this._root=void 0}function hh(e){for(var t={data:e.data},n=t;e=e.next;)n=n.next={data:e.data};return t}nh.copy=function(){var e,t,n=new eh(this._x,this._y,this._x0,this._y0,this._x1,this._y1),r=this._root;if(!r)return n;if(!r.length)return n._root=th(r),n;for(e=[{source:r,target:n._root=new Array(4)}];r=e.pop();)for(var i=0;i<4;++i)(t=r.source[i])&&(t.length?e.push({source:t,target:r.target[i]=new Array(4)}):r.target[i]=th(t));return n},nh.add=function(e){var t=+this._x.call(null,e),n=+this._y.call(null,e);return Zl(this.cover(t,n),t,n,e)},nh.addAll=function(e){var t,n,r,i,a=e.length,o=new Array(a),s=new Array(a),c=1/0,l=1/0,h=-1/0,u=-1/0;
// Compute the points and their extent.
for(n=0;n<a;++n)isNaN(r=+this._x.call(null,t=e[n]))||isNaN(i=+this._y.call(null,t))||(o[n]=r,s[n]=i,r<c&&(c=r),r>h&&(h=r),i<l&&(l=i),i>u&&(u=i));
// If there were no (valid) points, inherit the existing extent.
// Add the new points.
for(h<c&&(c=this._x0,h=this._x1),u<l&&(l=this._y0,u=this._y1),
// Expand the tree to cover the new points.
this.cover(c,l).cover(h,u),n=0;n<a;++n)Zl(this,o[n],s[n],e[n]);return this},nh.cover=function(e,t){if(isNaN(e=+e)||isNaN(t=+t))return this;// ignore invalid points
var n=this._x0,r=this._y0,i=this._x1,a=this._y1;
// If the quadtree has no extent, initialize them.
// Integer extent are necessary so that if we later double the extent,
// the existing quadrant boundaries don’t change due to floating point error!
if(isNaN(n))i=(n=Math.floor(e))+1,a=(r=Math.floor(t))+1;else{if(!(n>e||e>i||r>t||t>a))return this;var o,s,c=i-n,l=this._root;switch(s=(t<(r+a)/2)<<1|e<(n+i)/2){case 0:do{(o=new Array(4))[s]=l,l=o}while(a=r+(c*=2),e>(i=n+c)||t>a);break;case 1:do{(o=new Array(4))[s]=l,l=o}while(a=r+(c*=2),(n=i-c)>e||t>a);break;case 2:do{(o=new Array(4))[s]=l,l=o}while(r=a-(c*=2),e>(i=n+c)||r>t);break;case 3:do{(o=new Array(4))[s]=l,l=o}while(r=a-(c*=2),(n=i-c)>e||r>t)}this._root&&this._root.length&&(this._root=l)}return this._x0=n,this._y0=r,this._x1=i,this._y1=a,this},nh.data=function(){var e=[];return this.visit(function(t){if(!t.length)do{e.push(t.data)}while(t=t.next)}),e},nh.extent=function(e){return arguments.length?this.cover(+e[0][0],+e[0][1]).cover(+e[1][0],+e[1][1]):isNaN(this._x0)?void 0:[[this._x0,this._y0],[this._x1,this._y1]]},nh.find=function(e,t,n){var r,i,a,o,s,c,l,h=this._x0,u=this._y0,d=this._x1,f=this._y1,p=[],m=this._root;for(m&&p.push(new Jl(m,h,u,d,f)),null==n?n=1/0:(h=e-n,u=t-n,d=e+n,f=t+n,n*=n);c=p.pop();)
// Stop searching if this quadrant can’t contain a closer node.
if(!(!(m=c.node)||(i=c.x0)>d||(a=c.y0)>f||(o=c.x1)<h||(s=c.y1)<u))
// Bisect the current quadrant.
if(m.length){var g=(i+o)/2,v=(a+s)/2;p.push(new Jl(m[3],g,v,o,s),new Jl(m[2],i,v,g,s),new Jl(m[1],g,a,o,v),new Jl(m[0],i,a,g,v)),
// Visit the closest quadrant first.
(l=(t>=v)<<1|e>=g)&&(c=p[p.length-1],p[p.length-1]=p[p.length-1-l],p[p.length-1-l]=c)}
// Visit this point. (Visiting coincident points isn’t necessary!)
else{var y=e-+this._x.call(null,m.data),b=t-+this._y.call(null,m.data),x=y*y+b*b;if(x<n){var w=Math.sqrt(n=x);h=e-w,u=t-w,d=e+w,f=t+w,r=m.data}}return r},nh.remove=function(e){if(isNaN(a=+this._x.call(null,e))||isNaN(o=+this._y.call(null,e)))return this;// ignore invalid points
var t,n,r,i,a,o,s,c,l,h,u,d,f=this._root,p=this._x0,m=this._y0,g=this._x1,v=this._y1;
// If the tree is empty, initialize the root as a leaf.
if(!f)return this;
// Find the leaf node for the point.
// While descending, also retain the deepest parent with a non-removed sibling.
if(f.length)for(;;){if((l=a>=(s=(p+g)/2))?p=s:g=s,(h=o>=(c=(m+v)/2))?m=c:v=c,t=f,!(f=f[u=h<<1|l]))return this;if(!f.length)break;(t[u+1&3]||t[u+2&3]||t[u+3&3])&&(n=t,d=u)}
// Find the point to remove.
for(;f.data!==e;)if(r=f,!(f=f.next))return this;
// If there are multiple coincident points, remove just the point.
return(i=f.next)&&delete f.next,r?(i?r.next=i:delete r.next,this):
// If this is the root point, remove it.
t?(
// Remove this leaf.
i?t[u]=i:delete t[u],
// If the parent now contains exactly one leaf, collapse superfluous parents.
(f=t[0]||t[1]||t[2]||t[3])&&f===(t[3]||t[2]||t[1]||t[0])&&!f.length&&(n?n[d]=f:this._root=f),this):(this._root=i,this)},nh.removeAll=function(e){for(var t=0,n=e.length;t<n;++t)this.remove(e[t]);return this},nh.root=function(){return this._root},nh.size=function(){var e=0;return this.visit(function(t){if(!t.length)do{++e}while(t=t.next)}),e},nh.visit=function(e){var t,n,r,i,a,o,s=[],c=this._root;for(c&&s.push(new Jl(c,this._x0,this._y0,this._x1,this._y1));t=s.pop();)if(!e(c=t.node,r=t.x0,i=t.y0,a=t.x1,o=t.y1)&&c.length){var l=(r+a)/2,h=(i+o)/2;(n=c[3])&&s.push(new Jl(n,l,h,a,o)),(n=c[2])&&s.push(new Jl(n,r,h,l,o)),(n=c[1])&&s.push(new Jl(n,l,i,a,h)),(n=c[0])&&s.push(new Jl(n,r,i,l,h))}return this},nh.visitAfter=function(e){var t,n=[],r=[];for(this._root&&n.push(new Jl(this._root,this._x0,this._y0,this._x1,this._y1));t=n.pop();){var i=t.node;if(i.length){var a,o=t.x0,s=t.y0,c=t.x1,l=t.y1,h=(o+c)/2,u=(s+l)/2;(a=i[0])&&n.push(new Jl(a,o,s,h,u)),(a=i[1])&&n.push(new Jl(a,h,s,c,u)),(a=i[2])&&n.push(new Jl(a,o,u,h,l)),(a=i[3])&&n.push(new Jl(a,h,u,c,l))}r.push(t)}for(;t=r.pop();)e(t.node,t.x0,t.y0,t.x1,t.y1);return this},nh.x=function(e){return arguments.length?(this._x=e,this):this._x},nh.y=function(e){return arguments.length?(this._y=e,this):this._y};var uh=ch.prototype=lh.prototype;function dh(e){return function(){return e}}function fh(){return 1e-6*(Math.random()-.5)}function ph(e){return e.index}function mh(e,t){var n=e.get(t);if(!n)throw new Error("missing: "+t);return n}function gh(e){var t,n,r,i,a,o,s=ph,c=function(e){return 1/Math.min(a[e.source.index],a[e.target.index])},l=dh(30),h=1;function u(r){for(var a=0,s=e.length;a<h;++a)for(var c,l,u,d,f,p=0,m=0,g=0,v=0;p<s;++p)l=(c=e[p]).source,m=(u=c.target).x+u.vx-l.x-l.vx||fh(),i>1&&(g=u.y+u.vy-l.y-l.vy||fh()),i>2&&(v=u.z+u.vz-l.z-l.vz||fh()),m*=d=((d=Math.sqrt(m*m+g*g+v*v))-n[p])/d*r*t[p],g*=d,v*=d,u.vx-=m*(f=o[p]),i>1&&(u.vy-=g*f),i>2&&(u.vz-=v*f),l.vx+=m*(f=1-f),i>1&&(l.vy+=g*f),i>2&&(l.vz+=v*f)}function d(){if(r){var i,c,l=r.length,h=e.length,u=new Map(r.map((e,t)=>[s(e,t,r),e]));for(i=0,a=new Array(l);i<h;++i)(c=e[i]).index=i,"object"!=typeof c.source&&(c.source=mh(u,c.source)),"object"!=typeof c.target&&(c.target=mh(u,c.target)),a[c.source.index]=(a[c.source.index]||0)+1,a[c.target.index]=(a[c.target.index]||0)+1;for(i=0,o=new Array(h);i<h;++i)c=e[i],o[i]=a[c.source.index]/(a[c.source.index]+a[c.target.index]);t=new Array(h),f(),n=new Array(h),p()}}function f(){if(r)for(var n=0,i=e.length;n<i;++n)t[n]=+c(e[n],n,e)}function p(){if(r)for(var t=0,i=e.length;t<i;++t)n[t]=+l(e[t],t,e)}return null==e&&(e=[]),u.initialize=function(e,t){r=e,i=t,d()},u.links=function(t){return arguments.length?(e=t,d(),u):e},u.id=function(e){return arguments.length?(s=e,u):s},u.iterations=function(e){return arguments.length?(h=+e,u):h},u.strength=function(e){return arguments.length?(c="function"==typeof e?e:dh(+e),f(),u):c},u.distance=function(e){return arguments.length?(l="function"==typeof e?e:dh(+e),p(),u):l},u}uh.copy=function(){var e,t,n=new lh(this._x,this._y,this._z,this._x0,this._y0,this._z0,this._x1,this._y1,this._z1),r=this._root;if(!r)return n;if(!r.length)return n._root=hh(r),n;for(e=[{source:r,target:n._root=new Array(8)}];r=e.pop();)for(var i=0;i<8;++i)(t=r.source[i])&&(t.length?e.push({source:t,target:r.target[i]=new Array(8)}):r.target[i]=hh(t));return n},uh.add=function(e){var t=+this._x.call(null,e),n=+this._y.call(null,e),r=+this._z.call(null,e);return rh(this.cover(t,n,r),t,n,r,e)},uh.addAll=function(e){var t,n,r,i,a,o=e.length,s=new Array(o),c=new Array(o),l=new Array(o),h=1/0,u=1/0,d=1/0,f=-1/0,p=-1/0,m=-1/0;
// Compute the points and their extent.
for(n=0;n<o;++n)isNaN(r=+this._x.call(null,t=e[n]))||isNaN(i=+this._y.call(null,t))||isNaN(a=+this._z.call(null,t))||(s[n]=r,c[n]=i,l[n]=a,r<h&&(h=r),r>f&&(f=r),i<u&&(u=i),i>p&&(p=i),a<d&&(d=a),a>m&&(m=a));
// If there were no (valid) points, inherit the existing extent.
// Add the new points.
for(f<h&&(h=this._x0,f=this._x1),p<u&&(u=this._y0,p=this._y1),m<d&&(d=this._z0,m=this._z1),
// Expand the tree to cover the new points.
this.cover(h,u,d).cover(f,p,m),n=0;n<o;++n)rh(this,s[n],c[n],l[n],e[n]);return this},uh.cover=function(e,t,n){if(isNaN(e=+e)||isNaN(t=+t)||isNaN(n=+n))return this;// ignore invalid points
var r=this._x0,i=this._y0,a=this._z0,o=this._x1,s=this._y1,c=this._z1;
// If the octree has no extent, initialize them.
// Integer extent are necessary so that if we later double the extent,
// the existing octant boundaries don’t change due to floating point error!
if(isNaN(r))o=(r=Math.floor(e))+1,s=(i=Math.floor(t))+1,c=(a=Math.floor(n))+1;else{if(!(r>e||e>o||i>t||t>s||a>n||n>c))return this;var l,h,u=o-r,d=this._root;switch(h=(n<(a+c)/2)<<2|(t<(i+s)/2)<<1|e<(r+o)/2){case 0:do{(l=new Array(8))[h]=d,d=l}while(s=i+(u*=2),c=a+u,e>(o=r+u)||t>s||n>c);break;case 1:do{(l=new Array(8))[h]=d,d=l}while(s=i+(u*=2),c=a+u,(r=o-u)>e||t>s||n>c);break;case 2:do{(l=new Array(8))[h]=d,d=l}while(i=s-(u*=2),c=a+u,e>(o=r+u)||i>t||n>c);break;case 3:do{(l=new Array(8))[h]=d,d=l}while(i=s-(u*=2),c=a+u,(r=o-u)>e||i>t||n>c);break;case 4:do{(l=new Array(8))[h]=d,d=l}while(s=i+(u*=2),a=c-u,e>(o=r+u)||t>s||a>n);break;case 5:do{(l=new Array(8))[h]=d,d=l}while(s=i+(u*=2),a=c-u,(r=o-u)>e||t>s||a>n);break;case 6:do{(l=new Array(8))[h]=d,d=l}while(i=s-(u*=2),a=c-u,e>(o=r+u)||i>t||a>n);break;case 7:do{(l=new Array(8))[h]=d,d=l}while(i=s-(u*=2),a=c-u,(r=o-u)>e||i>t||a>n)}this._root&&this._root.length&&(this._root=d)}return this._x0=r,this._y0=i,this._z0=a,this._x1=o,this._y1=s,this._z1=c,this},uh.data=function(){var e=[];return this.visit(function(t){if(!t.length)do{e.push(t.data)}while(t=t.next)}),e},uh.extent=function(e){return arguments.length?this.cover(+e[0][0],+e[0][1],+e[0][2]).cover(+e[1][0],+e[1][1],+e[1][2]):isNaN(this._x0)?void 0:[[this._x0,this._y0,this._z0],[this._x1,this._y1,this._z1]]},uh.find=function(e,t,n,r){var i,a,o,s,c,l,h,u,d,f=this._x0,p=this._y0,m=this._z0,g=this._x1,v=this._y1,y=this._z1,b=[],x=this._root;for(x&&b.push(new ih(x,f,p,m,g,v,y)),null==r?r=1/0:(f=e-r,p=t-r,m=n-r,g=e+r,v=t+r,y=n+r,r*=r);u=b.pop();)
// Stop searching if this octant can’t contain a closer node.
if(!(!(x=u.node)||(a=u.x0)>g||(o=u.y0)>v||(s=u.z0)>y||(c=u.x1)<f||(l=u.y1)<p||(h=u.z1)<m))
// Bisect the current octant.
if(x.length){var w=(a+c)/2,_=(o+l)/2,M=(s+h)/2;b.push(new ih(x[7],w,_,M,c,l,h),new ih(x[6],a,_,M,w,l,h),new ih(x[5],w,o,M,c,_,h),new ih(x[4],a,o,M,w,_,h),new ih(x[3],w,_,s,c,l,M),new ih(x[2],a,_,s,w,l,M),new ih(x[1],w,o,s,c,_,M),new ih(x[0],a,o,s,w,_,M)),
// Visit the closest octant first.
(d=(n>=M)<<2|(t>=_)<<1|e>=w)&&(u=b[b.length-1],b[b.length-1]=b[b.length-1-d],b[b.length-1-d]=u)}
// Visit this point. (Visiting coincident points isn’t necessary!)
else{var E=e-+this._x.call(null,x.data),S=t-+this._y.call(null,x.data),T=n-+this._z.call(null,x.data),A=E*E+S*S+T*T;if(A<r){var L=Math.sqrt(r=A);f=e-L,p=t-L,m=n-L,g=e+L,v=t+L,y=n+L,i=x.data}}return i},uh.remove=function(e){if(isNaN(a=+this._x.call(null,e))||isNaN(o=+this._y.call(null,e))||isNaN(s=+this._z.call(null,e)))return this;// ignore invalid points
var t,n,r,i,a,o,s,c,l,h,u,d,f,p,m,g=this._root,v=this._x0,y=this._y0,b=this._z0,x=this._x1,w=this._y1,_=this._z1;
// If the tree is empty, initialize the root as a leaf.
if(!g)return this;
// Find the leaf node for the point.
// While descending, also retain the deepest parent with a non-removed sibling.
if(g.length)for(;;){if((u=a>=(c=(v+x)/2))?v=c:x=c,(d=o>=(l=(y+w)/2))?y=l:w=l,(f=s>=(h=(b+_)/2))?b=h:_=h,t=g,!(g=g[p=f<<2|d<<1|u]))return this;if(!g.length)break;(t[p+1&7]||t[p+2&7]||t[p+3&7]||t[p+4&7]||t[p+5&7]||t[p+6&7]||t[p+7&7])&&(n=t,m=p)}
// Find the point to remove.
for(;g.data!==e;)if(r=g,!(g=g.next))return this;
// If there are multiple coincident points, remove just the point.
return(i=g.next)&&delete g.next,r?(i?r.next=i:delete r.next,this):
// If this is the root point, remove it.
t?(
// Remove this leaf.
i?t[p]=i:delete t[p],
// If the parent now contains exactly one leaf, collapse superfluous parents.
(g=t[0]||t[1]||t[2]||t[3]||t[4]||t[5]||t[6]||t[7])&&g===(t[7]||t[6]||t[5]||t[4]||t[3]||t[2]||t[1]||t[0])&&!g.length&&(n?n[m]=g:this._root=g),this):(this._root=i,this)},uh.removeAll=function(e){for(var t=0,n=e.length;t<n;++t)this.remove(e[t]);return this},uh.root=function(){return this._root},uh.size=function(){var e=0;return this.visit(function(t){if(!t.length)do{++e}while(t=t.next)}),e},uh.visit=function(e){var t,n,r,i,a,o,s,c,l=[],h=this._root;for(h&&l.push(new ih(h,this._x0,this._y0,this._z0,this._x1,this._y1,this._z1));t=l.pop();)if(!e(h=t.node,r=t.x0,i=t.y0,a=t.z0,o=t.x1,s=t.y1,c=t.z1)&&h.length){var u=(r+o)/2,d=(i+s)/2,f=(a+c)/2;(n=h[7])&&l.push(new ih(n,u,d,f,o,s,c)),(n=h[6])&&l.push(new ih(n,r,d,f,u,s,c)),(n=h[5])&&l.push(new ih(n,u,i,f,o,d,c)),(n=h[4])&&l.push(new ih(n,r,i,f,u,d,c)),(n=h[3])&&l.push(new ih(n,u,d,a,o,s,f)),(n=h[2])&&l.push(new ih(n,r,d,a,u,s,f)),(n=h[1])&&l.push(new ih(n,u,i,a,o,d,f)),(n=h[0])&&l.push(new ih(n,r,i,a,u,d,f))}return this},uh.visitAfter=function(e){var t,n=[],r=[];for(this._root&&n.push(new ih(this._root,this._x0,this._y0,this._z0,this._x1,this._y1,this._z1));t=n.pop();){var i=t.node;if(i.length){var a,o=t.x0,s=t.y0,c=t.z0,l=t.x1,h=t.y1,u=t.z1,d=(o+l)/2,f=(s+h)/2,p=(c+u)/2;(a=i[0])&&n.push(new ih(a,o,s,c,d,f,p)),(a=i[1])&&n.push(new ih(a,d,s,c,l,f,p)),(a=i[2])&&n.push(new ih(a,o,f,c,d,h,p)),(a=i[3])&&n.push(new ih(a,d,f,c,l,h,p)),(a=i[4])&&n.push(new ih(a,o,s,p,d,f,u)),(a=i[5])&&n.push(new ih(a,d,s,p,l,f,u)),(a=i[6])&&n.push(new ih(a,o,f,p,d,h,u)),(a=i[7])&&n.push(new ih(a,d,f,p,l,h,u))}r.push(t)}for(;t=r.pop();)e(t.node,t.x0,t.y0,t.z0,t.x1,t.y1,t.z1);return this},uh.x=function(e){return arguments.length?(this._x=e,this):this._x},uh.y=function(e){return arguments.length?(this._y=e,this):this._y},uh.z=function(e){return arguments.length?(this._z=e,this):this._z};var vh={value:function(){}};function yh(){for(var e,t=0,n=arguments.length,r={};t<n;++t){if(!(e=arguments[t]+"")||e in r)throw new Error("illegal type: "+e);r[e]=[]}return new bh(r)}function bh(e){this._=e}function xh(e,t){for(var n,r=0,i=e.length;r<i;++r)if((n=e[r]).name===t)return n.value}function wh(e,t,n){for(var r=0,i=e.length;r<i;++r)if(e[r].name===t){e[r]=vh,e=e.slice(0,r).concat(e.slice(r+1));break}return null!=n&&e.push({name:t,value:n}),e}bh.prototype=yh.prototype={constructor:bh,on:function(e,t){var n,r,i=this._,a=(r=i,(e+"").trim().split(/^|\s+/).map(function(e){var t="",n=e.indexOf(".");if(n>=0&&(t=e.slice(n+1),e=e.slice(0,n)),e&&!r.hasOwnProperty(e))throw new Error("unknown type: "+e);return{type:e,name:t}})),o=-1,s=a.length;
// If no callback was specified, return the callback of the given type and name.
if(!(arguments.length<2)){
// If a type was specified, set the callback for the given type and name.
// Otherwise, if a null callback was specified, remove callbacks of the given name.
if(null!=t&&"function"!=typeof t)throw new Error("invalid callback: "+t);for(;++o<s;)if(n=(e=a[o]).type)i[n]=wh(i[n],e.name,t);else if(null==t)for(n in i)i[n]=wh(i[n],e.name,null);return this}for(;++o<s;)if((n=(e=a[o]).type)&&(n=xh(i[n],e.name)))return n},copy:function(){var e={},t=this._;for(var n in t)e[n]=t[n].slice();return new bh(e)},call:function(e,t){if((n=arguments.length-2)>0)for(var n,r,i=new Array(n),a=0;a<n;++a)i[a]=arguments[a+2];if(!this._.hasOwnProperty(e))throw new Error("unknown type: "+e);for(a=0,n=(r=this._[e]).length;a<n;++a)r[a].value.apply(t,i)},apply:function(e,t,n){if(!this._.hasOwnProperty(e))throw new Error("unknown type: "+e);for(var r=this._[e],i=0,a=r.length;i<a;++i)r[i].value.apply(t,n)}};var// how frequently we check for clock skew
_h,Mh,Eh=0,// is an animation frame pending?
Sh=0,// is a timeout pending?
Th=0,// are any timers active?
Ah=1e3,Lh=0,Ph=0,Ch=0,Rh="object"==typeof performance&&performance.now?performance:Date,Oh="object"==typeof window&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(e){setTimeout(e,17)};function Nh(){return Ph||(Oh(Ih),Ph=Rh.now()+Ch)}function Ih(){Ph=0}function Dh(){this._call=this._time=this._next=null}function zh(e,t,n){var r=new Dh;return r.restart(e,t,n),r}function kh(){Ph=(Lh=Rh.now())+Ch,Eh=Sh=0;try{!function(){Nh(),// Get the current time, if not already set.
++Eh;for(// Pretend we’ve set an alarm, if we haven’t already.
var e,t=_h;t;)(e=Ph-t._time)>=0&&t._call.call(null,e),t=t._next;--Eh}()}finally{Eh=0,function(){var e,t,n=_h,r=1/0;for(;n;)n._call?(r>n._time&&(r=n._time),e=n,n=n._next):(t=n._next,n._next=null,n=e?e._next=t:_h=t);Mh=e,Uh(r)}(),Ph=0}}function Bh(){var e=Rh.now(),t=e-Lh;t>Ah&&(Ch-=t,Lh=e)}function Uh(e){Eh||(// Soonest alarm already set, or will be.
Sh&&(Sh=clearTimeout(Sh)),// Strictly less than if we recomputed clockNow.
e-Ph>24?(e<1/0&&(Sh=setTimeout(kh,e-Rh.now()-Ch)),Th&&(Th=clearInterval(Th))):(Th||(Lh=Rh.now(),Th=setInterval(Bh,Ah)),Eh=1,Oh(kh)))}Dh.prototype=zh.prototype={constructor:Dh,restart:function(e,t,n){if("function"!=typeof e)throw new TypeError("callback is not a function");n=(null==n?Nh():+n)+(null==t?0:+t),this._next||Mh===this||(Mh?Mh._next=this:_h=this,Mh=this),this._call=e,this._time=n,Uh()},stop:function(){this._call&&(this._call=null,this._time=1/0,Uh())}};var Fh=3;function Gh(e){return e.x}function jh(e){return e.y}function Hh(e){return e.z}var Vh=10,Wh=Math.PI*(3-Math.sqrt(5)),// Golden angle
qh=Math.PI/24;// Sequential
function Xh(e,t){t=t||2;var n,r=Math.min(Fh,Math.max(1,Math.round(t))),i=1,a=.001,o=1-Math.pow(a,1/300),s=0,c=.6,l=new Map,h=zh(d),u=yh("tick","end");function d(){f(),u.call("tick",n),i<a&&(h.stop(),u.call("end",n))}function f(t){var a,h,u=e.length;void 0===t&&(t=1);for(var d=0;d<t;++d)for(i+=(s-i)*o,l.forEach(function(e){e(i)}),a=0;a<u;++a)null==(h=e[a]).fx?h.x+=h.vx*=c:(h.x=h.fx,h.vx=0),r>1&&(null==h.fy?h.y+=h.vy*=c:(h.y=h.fy,h.vy=0)),r>2&&(null==h.fz?h.z+=h.vz*=c:(h.z=h.fz,h.vz=0));return n}function p(){for(var t,n=0,i=e.length;n<i;++n){if((t=e[n]).index=n,isNaN(t.fx)||(t.x=t.fx),isNaN(t.fy)||(t.y=t.fy),isNaN(t.fz)||(t.z=t.fz),isNaN(t.x)||r>1&&isNaN(t.y)||r>2&&isNaN(t.z)){var a=Vh*(r>2?Math.cbrt(n):r>1?Math.sqrt(n):n),o=n*Wh,s=n*qh;t.x=a*(r>1?Math.cos(o):1),r>1&&(t.y=a*Math.sin(o)),r>2&&(t.z=a*Math.sin(s))}(isNaN(t.vx)||r>1&&isNaN(t.vy)||r>2&&isNaN(t.vz))&&(t.vx=0,r>1&&(t.vy=0),r>2&&(t.vz=0))}}function m(t){return t.initialize&&t.initialize(e,r),t}return null==e&&(e=[]),p(),n={tick:f,restart:function(){return h.restart(d),n},stop:function(){return h.stop(),n},numDimensions:function(e){return arguments.length?(r=Math.min(Fh,Math.max(1,Math.round(e))),l.forEach(m),n):r},nodes:function(t){return arguments.length?(e=t,p(),l.forEach(m),n):e},alpha:function(e){return arguments.length?(i=+e,n):i},alphaMin:function(e){return arguments.length?(a=+e,n):a},alphaDecay:function(e){return arguments.length?(o=+e,n):+o},alphaTarget:function(e){return arguments.length?(s=+e,n):s},velocityDecay:function(e){return arguments.length?(c=1-e,n):1-c},force:function(e,t){return arguments.length>1?(null==t?l.delete(e):l.set(e,m(t)),n):l.get(e)},find:function(){var t,n,i,a,o,s,c=Array.prototype.slice.call(arguments),l=c.shift()||0,h=(r>1?c.shift():null)||0,u=(r>2?c.shift():null)||0,d=c.shift()||1/0,f=0,p=e.length;for(d*=d,f=0;f<p;++f)(a=(t=l-(o=e[f]).x)*t+(n=h-(o.y||0))*n+(i=u-(o.z||0))*i)<d&&(s=o,d=a);return s},on:function(e,t){return arguments.length>1?(u.on(e,t),n):u.on(e)}}}function Yh(){var e,t,n,r,i,a=dh(-30),o=1,s=1/0,c=.81;function l(i){var a,o=e.length,s=(1===t?Wl(e,Gh):2===t?$l(e,Gh,jh):3===t?ch(e,Gh,jh,Hh):null).visitAfter(u);for(r=i,a=0;a<o;++a)n=e[a],s.visit(d)}function h(){if(e){var t,n,r=e.length;for(i=new Array(r),t=0;t<r;++t)n=e[t],i[n.index]=+a(n,t,e)}}function u(e){var n,r,a,o,s,c,l=0,h=0;
// For internal nodes, accumulate forces from children.
if(e.length){for(a=o=s=c=0;c<4;++c)(n=e[c])&&(r=Math.abs(n.value))&&(l+=n.value,h+=r,a+=r*(n.x||0),o+=r*(n.y||0),s+=r*(n.z||0));e.x=a/h,t>1&&(e.y=o/h),t>2&&(e.z=s/h)}
// For leaf nodes, accumulate forces from coincident nodes.
else{(n=e).x=n.data.x,t>1&&(n.y=n.data.y),t>2&&(n.z=n.data.z);do{l+=i[n.data.index]}while(n=n.next)}e.value=l}function d(e,a,l,h,u){if(!e.value)return!0;var d=[l,h,u][t-1],f=e.x-n.x,p=t>1?e.y-n.y:0,m=t>2?e.z-n.z:0,g=d-a,v=f*f+p*p+m*m;
// Apply the Barnes-Hut approximation if possible.
// Limit forces for very close nodes; randomize direction if coincident.
if(g*g/c<v)return v<s&&(0===f&&(v+=(f=fh())*f),t>1&&0===p&&(v+=(p=fh())*p),t>2&&0===m&&(v+=(m=fh())*m),v<o&&(v=Math.sqrt(o*v)),n.vx+=f*e.value*r/v,t>1&&(n.vy+=p*e.value*r/v),t>2&&(n.vz+=m*e.value*r/v)),!0;
// Limit forces for very close nodes; randomize direction if coincident.
if(!(e.length||v>=s)){(e.data!==n||e.next)&&(0===f&&(v+=(f=fh())*f),t>1&&0===p&&(v+=(p=fh())*p),t>2&&0===m&&(v+=(m=fh())*m),v<o&&(v=Math.sqrt(o*v)));do{e.data!==n&&(g=i[e.data.index]*r/v,n.vx+=f*g,t>1&&(n.vy+=p*g),t>2&&(n.vz+=m*g))}while(e=e.next)}}return l.initialize=function(n,r){e=n,t=r,h()},l.strength=function(e){return arguments.length?(a="function"==typeof e?e:dh(+e),h(),l):a},l.distanceMin=function(e){return arguments.length?(o=e*e,l):Math.sqrt(o)},l.distanceMax=function(e){return arguments.length?(s=e*e,l):Math.sqrt(s)},l.theta=function(e){return arguments.length?(c=e*e,l):Math.sqrt(c)},l}var Zh=function(e){!function(e){if(!e)throw new Error("Eventify cannot use falsy object as events subject");for(var t=["on","fire","off"],n=0;n<t.length;++n)if(e.hasOwnProperty(t[n]))throw new Error("Subject cannot be eventified, since it already has property '"+t[n]+"'")}
/**
   * @fileOverview Contains definition of the core graph object.
   */
// TODO: need to change storage layer:
// 1. Be able to get all nodes O(1)
// 2. Be able to get number of links O(1)
/**
   * @example
   *  var graph = require('ngraph.graph')();
   *  graph.addNode(1);     // graph has one node.
   *  graph.addLink(2, 3);  // now graph contains three nodes and one link.
   *
   */(e);var t=function(e){
// Store all event listeners to this hash. Key is event name, value is array
// of callback records.
//
// A callback record consists of callback function and its optional context:
// { 'eventName' => [{callback: function, ctx: object}] }
var t=Object.create(null);return{on:function(n,r,i){if("function"!=typeof r)throw new Error("callback is expected to be a function");var a=t[n];return a||(a=t[n]=[]),a.push({callback:r,ctx:i}),e},off:function(n,r){var i=void 0===n;if(i)
// Killing old events storage should be enough in this case:
return t=Object.create(null),e;if(t[n]){var a="function"!=typeof r;if(a)delete t[n];else for(var o=t[n],s=0;s<o.length;++s)o[s].callback===r&&o.splice(s,1)}return e},fire:function(n){var r,i=t[n];if(!i)return e;arguments.length>1&&(r=Array.prototype.splice.call(arguments,1));for(var a=0;a<i.length;++a){var o=i[a];o.callback.apply(o.ctx,r)}return e}}}(e);return e.on=t.on,e.off=t.off,e.fire=t.fire,e};var Jh=
/**
   * Creates a new graph
   */
function(e){"uniqueLinkId"in(
// Graph structure is maintained as dictionary of nodes
// and array of links. Each node has 'links' property which
// hold all links related to that node. And general links
// array is used to speed up all links enumeration. This is inefficient
// in terms of memory, but simplifies coding.
e=e||{})&&(console.warn("ngraph.graph: Starting from version 0.14 `uniqueLinkId` is deprecated.\nUse `multigraph` option instead\n","\n","Note: there is also change in default behavior: From now on each graph\nis considered to be not a multigraph by default (each edge is unique)."),e.multigraph=e.uniqueLinkId);
// Dear reader, the non-multigraphs do not guarantee that there is only
// one link for a given pair of node. When this option is set to false
// we can save some memory and CPU (18% faster for non-multigraph);
void 0===e.multigraph&&(e.multigraph=!1);var t="function"==typeof Object.create?Object.create(null):{},n=[],
// Hash of multi-edges. Used to track ids of edges between same nodes
r={},i=0,a=0,o=Object.keys?S:T,s=e.multigraph?function(e,t,n){
// TODO: Get rid of this method.
var i=tu(e,t),a=r.hasOwnProperty(i);if(a||w(e,t)){a||(r[i]=0);var o="@"+ ++r[i];i=tu(e+o,t+o)}return new eu(e,t,n,i)}:function(e,t,n){var r=tu(e,t);return new eu(e,t,n,r)},
// Our graph API provides means to listen to graph changes. Users can subscribe
// to be notified about changes in the graph by using `on` method. However
// in some cases they don't use it. To avoid unnecessary memory consumption
// we will not record graph changes until we have at least one subscriber.
// Code below supports this optimization.
//
// Accumulates all changes made during graph updates.
// Each change element contains:
//  changeType - one of the strings: 'add', 'remove' or 'update';
//  node - if change is related to node this property is set to changed graph's node;
//  link - if change is related to link this property is set to changed graph's link;
c=[],l=_,h=_,u=_,d=_,f={
/**
       * Adds node to the graph. If node with given id already exists in the graph
       * its data is extended with whatever comes in 'data' argument.
       *
       * @param nodeId the node's identifier. A string or number is preferred.
       * @param [data] additional data for the node being added. If node already
       *   exists its data object is augmented with the new one.
       *
       * @return {node} The newly added node or node with given id if it already exists.
       */
addNode:v,
/**
       * Adds a link to the graph. The function always create a new
       * link between two nodes. If one of the nodes does not exists
       * a new node is created.
       *
       * @param fromId link start node id;
       * @param toId link end node id;
       * @param [data] additional data to be set on the new link;
       *
       * @return {link} The newly created link
       */
addLink:function(e,t,r){u();var i=y(e)||v(e),a=y(t)||v(t),o=s(e,t,r);n.push(o),
// TODO: this is not cool. On large graphs potentially would consume more memory.
$h(i,o),e!==t&&
// make sure we are not duplicating links for self-loops
$h(a,o);return l(o,"add"),d(),o},
/**
       * Removes link from the graph. If link does not exist does nothing.
       *
       * @param link - object returned by addLink() or getLinks() methods.
       *
       * @returns true if link was removed; false otherwise.
       */
removeLink:x,
/**
       * Removes node with given id from the graph. If node does not exist in the graph
       * does nothing.
       *
       * @param nodeId node's identifier passed to addNode() function.
       *
       * @returns true if node was removed; false otherwise.
       */
removeNode:b,
/**
       * Gets node with given identifier. If node does not exist undefined value is returned.
       *
       * @param nodeId requested node identifier;
       *
       * @return {node} in with requested identifier or undefined if no such node exists.
       */
getNode:y,
/**
       * Gets number of nodes in this graph.
       *
       * @return number of nodes in the graph.
       */
getNodesCount:function(){return i},
/**
       * Gets total number of links in the graph.
       */
getLinksCount:function(){return n.length},
/**
       * Gets all links (inbound and outbound) from the node with given id.
       * If node with given id is not found null is returned.
       *
       * @param nodeId requested node identifier.
       *
       * @return Array of links from and to requested node if such node exists;
       *   otherwise null is returned.
       */
getLinks:function(e){var t=y(e);return t?t.links:null},
/**
       * Invokes callback on each node of the graph.
       *
       * @param {Function(node)} callback Function to be invoked. The function
       *   is passed one argument: visited node.
       */
forEachNode:o,
/**
       * Invokes callback on every linked (adjacent) node to the given one.
       *
       * @param nodeId Identifier of the requested node.
       * @param {Function(node, link)} callback Function to be called on all linked nodes.
       *   The function is passed two parameters: adjacent node and link object itself.
       * @param oriented if true graph treated as oriented.
       */
forEachLinkedNode:function(e,n,r){var i=y(e);if(i&&i.links&&"function"==typeof n)return r?function(e,n,r){for(var i=0;i<e.length;++i){var a=e[i];if(a.fromId===n&&r(t[a.toId],a))return!0;// Client does not need more iterations. Break now.
}}
// we will not fire anything until users of this library explicitly call `on()`
// method.
(i.links,e,n):function(e,n,r){for(var i=0;i<e.length;++i){var a=e[i],o=a.fromId===n?a.toId:a.fromId;if(r(t[o],a))return!0;// Client does not need more iterations. Break now.
}}(i.links,e,n)},
/**
       * Enumerates all links in the graph
       *
       * @param {Function(link)} callback Function to be called on all links in the graph.
       *   The function is passed one parameter: graph's link object.
       *
       * Link object contains at least the following fields:
       *  fromId - node id where link starts;
       *  toId - node id where link ends,
       *  data - additional data passed to graph.addLink() method.
       */
forEachLink:function(e){var t,r;if("function"==typeof e)for(t=0,r=n.length;t<r;++t)e(n[t])},
/**
       * Suspend all notifications about graph changes until
       * endUpdate is called.
       */
beginUpdate:u,
/**
       * Resumes all notifications about graph changes and fires
       * graph 'changed' event in case there are any pending changes.
       */
endUpdate:d,
/**
       * Removes all nodes and links from the graph.
       */
clear:function(){u(),o(function(e){b(e.id)}),d()},
/**
       * Detects whether there is a link between two nodes.
       * Operation complexity is O(n) where n - number of links of a node.
       * NOTE: this function is synonim for getLink()
       *
       * @returns link if there is one. null otherwise.
       */
hasLink:w,
/**
       * Detects whether there is a node with given id
       * 
       * Operation complexity is O(1)
       * NOTE: this function is synonim for getNode()
       *
       * @returns node if there is one; Falsy value otherwise.
       */
hasNode:y,
/**
       * Gets an edge between two nodes.
       * Operation complexity is O(n) where n - number of links of a node.
       *
       * @param {string} fromId link start identifier
       * @param {string} toId link end identifier
       *
       * @returns link if there is one. null otherwise.
       */
getLink:w};
// this is our public API:
// this will add `on()` and `fire()` methods.
return Zh(f),p=f.on,
// replace real `on` with our temporary on, which will trigger change
// modification monitoring:
f.on=function(){
// delegate to real `on` handler:
// now it's time to start tracking stuff:
return f.beginUpdate=u=M,f.endUpdate=d=E,l=m,h=g,
// this will replace current `on` method with real pub/sub from `eventify`.
f.on=p,p.apply(f,arguments)},f;var p;function m(e,t){c.push({link:e,changeType:t})}function g(e,t){c.push({node:e,changeType:t})}function v(e,n){if(void 0===e)throw new Error("Invalid node identifier");u();var r=y(e);return r?(r.data=n,h(r,"update")):(r=new Kh(e,n),i++,h(r,"add")),t[e]=r,d(),r}function y(e){return t[e]}function b(e){var n=y(e);if(!n)return!1;u();var r=n.links;if(r){n.links=null;for(var a=0;a<r.length;++a)x(r[a])}return delete t[e],i--,h(n,"remove"),d(),!0}function x(e){if(!e)return!1;var t=Qh(e,n);if(t<0)return!1;u(),n.splice(t,1);var r=y(e.fromId),i=y(e.toId);return r&&(t=Qh(e,r.links))>=0&&r.links.splice(t,1),i&&(t=Qh(e,i.links))>=0&&i.links.splice(t,1),l(e,"remove"),d(),!0}function w(e,t){
// TODO: Use sorted links to speed this up
var n,r=y(e);if(!r||!r.links)return null;for(n=0;n<r.links.length;++n){var i=r.links[n];if(i.fromId===e&&i.toId===t)return i}return null;// no link.
}function _(){}
// Enter, Exit modification allows bulk graph updates without firing events.
function M(){a+=1}function E(){0===(a-=1)&&c.length>0&&(f.fire("changed",c),c.length=0)}function S(e){if("function"==typeof e)for(var n=Object.keys(t),r=0;r<n.length;++r)if(e(t[n[r]]))return!0;// client doesn't want to proceed. Return.
}function T(e){var n;if("function"==typeof e)for(n in t)if(e(t[n]))return!0;// client doesn't want to proceed. Return.
}}
// need this for old browsers. Should this be a separate module?;
function Qh(e,t){if(!t)return-1;if(t.indexOf)return t.indexOf(e);var n,r=t.length;for(n=0;n<r;n+=1)if(t[n]===e)return n;return-1}
/**
   * Internal structure to represent node;
   */function Kh(e,t){this.id=e,this.links=null,this.data=t}function $h(e,t){e.links?e.links.push(t):e.links=[t]}
/**
   * Internal structure to represent links;
   */function eu(e,t,n,r){this.fromId=e,this.toId=t,this.data=n,this.id=r}function tu(e,t){return e.toString()+"👉 "+t.toString()}var nu=
/**
   * Represents a physical spring. Spring connects two bodies, has rest length
   * stiffness coefficient and optional weight
   */
function(e,t,n,r,i){this.from=e,this.to=t,this.length=n,this.coeff=r,this.weight="number"==typeof i?i:1};var ru=
/**
   * Augments `target` object with getter/setter functions, which modify settings
   *
   * @example
   *  var target = {};
   *  exposeProperties({ age: 42}, target);
   *  target.age(); // returns 42
   *  target.age(24); // make age 24;
   *
   *  var filteredTarget = {};
   *  exposeProperties({ age: 42, name: 'John'}, filteredTarget, ['name']);
   *  filteredTarget.name(); // returns 'John'
   *  filteredTarget.age === undefined; // true
   */
function(e,t,n){if("[object Array]"===Object.prototype.toString.call(n))for(var r=0;r<n.length;++r)iu(e,t,n[r]);else for(var i in e)iu(e,t,i)};function iu(e,t,n){if(e.hasOwnProperty(n)){if("function"==typeof t[n])
// this accessor is already defined. Ignore it
return;t[n]=function(r){return void 0!==r?(e[n]=r,t):e[n]}}}var au=
/**
   * Augments `target` with properties in `options`. Does not override
   * target's properties if they are defined and matches expected type in 
   * options
   *
   * @returns {Object} merged object
   */
function e(t,n){var r;t||(t={});if(n)for(r in n)if(n.hasOwnProperty(r)){var i=t.hasOwnProperty(r),a=typeof n[r],o=!i||typeof t[r]!==a;o?t[r]=n[r]:"object"===a&&(
// go deep, don't care about loops here, we are simple API!:
t[r]=e(t[r],n[r]))}return t};var ou={random:su,randomIterator:
/*
   * Creates iterator over array, which returns items of array in random order
   * Time complexity is guaranteed to be O(n);
   */
function(e,t){var n=t||su();if("function"!=typeof n.next)throw new Error("customRandom does not match expected API: next() function is missing");return{forEach:function(t){var r,i,a;for(r=e.length-1;r>0;--r)i=n.next(r+1),// i inclusive
a=e[i],e[i]=e[r],e[r]=a,t(a);e.length&&t(e[0])},
/**
           * Shuffles array randomly, in place.
           */
shuffle:function(){var t,r,i;for(t=e.length-1;t>0;--t)r=n.next(t+1),// i inclusive
i=e[r],e[r]=e[t],e[t]=i;return e}}}
/**
   * Internal data structure to represent 2D QuadTree node
   */};
/**
   * Creates seeded PRNG with two methods:
   *   next() and nextDouble()
   */function su(e){var t="number"==typeof e?e:+new Date,n=function(){return(268435455&(t=4294967295&(3042594569^(t=(t=4294967295&((t=(t=4294967295&(3345072700^(
// Robert Jenkins' 32 bit integer hash function.
t=t+2127912214+(t<<12)&4294967295)^t>>>19))+374761393+(t<<5)&4294967295)+3550635116^t<<9))+4251993797+(t<<3)&4294967295)^t>>>16)))/268435456};return{
/**
         * Generates random integer number in the range from 0 (inclusive) to maxValue (exclusive)
         *
         * @param maxValue Number REQUIRED. Ommitting this number will result in NaN values from PRNG.
         */
next:function(e){return Math.floor(n()*e)},
/**
         * Generates random double number in the range from 0 (inclusive) to 1 (exclusive)
         * This function is the same as Math.random() (except that it could be seeded)
         */
nextDouble:function(){return n()}}}var cu=function(){
// body stored inside this node. In quad tree only leaf nodes (by construction)
// contain boides:
this.body=null,
// Child nodes are stored in quads. Each quad is presented by number:
// 0 | 1
// -----
// 2 | 3
this.quad0=null,this.quad1=null,this.quad2=null,this.quad3=null,
// Total mass of current node
this.mass=0,
// Center of mass coordinates
this.massX=0,this.massY=0,
// bounding box coordinates
this.left=0,this.top=0,this.bottom=0,this.right=0},lu=hu;
/**
   * Our implmentation of QuadTree is non-recursive to avoid GC hit
   * This data structure represent stack of elements
   * which we are trying to insert into quad tree.
   */
function hu(){this.stack=[],this.popIdx=0}function uu(e,t){this.node=e,// QuadTree node
this.body=t}hu.prototype={isEmpty:function(){return 0===this.popIdx},push:function(e,t){var n=this.stack[this.popIdx];n?(n.node=e,n.body=t):
// we are trying to avoid memory pressue: create new element
// only when absolutely necessary
this.stack[this.popIdx]=new uu(e,t),++this.popIdx},pop:function(){if(this.popIdx>0)return this.stack[--this.popIdx]},reset:function(){this.popIdx=0}};var du=function(e,t){var n=Math.abs(e.x-t.x),r=Math.abs(e.y-t.y);return n<1e-8&&r<1e-8},fu=function(e){(e=e||{}).gravity="number"==typeof e.gravity?e.gravity:-1,e.theta="number"==typeof e.theta?e.theta:.8;
// we require deterministic randomness here
var t=ou.random(1984),n=cu,r=lu,i=du,a=e.gravity,o=[],s=new r,c=e.theta,l=[],h=0,u=d();return{insertBodies:function(e){var t,n=Number.MAX_VALUE,r=Number.MAX_VALUE,i=Number.MIN_VALUE,a=Number.MIN_VALUE,o=e.length;
// To reduce quad tree depth we are looking for exact bounding box of all particles.
t=o;for(;t--;){var s=e[t].pos.x,c=e[t].pos.y;s<n&&(n=s),s>i&&(i=s),c<r&&(r=c),c>a&&(a=c)}
// Squarify the bounds.
var l=i-n,p=a-r;l>p?a=r+l:i=n+p;h=0,(u=d()).left=n,u.right=i,u.top=r,u.bottom=a,(t=o-1)>=0&&(u.body=e[t]);for(;t--;)f(e[t])},
/**
       * Gets root node if its present
       */
getRoot:function(){return u},updateBodyForce:function(e){var n,r,i,s,l=o,h=0,d=0,f=1,p=0,m=1;l[0]=u;for(;f;){var g=l[p],v=g.body;f-=1,p+=1;var y=v!==e;v&&y?(
// If the current node is a leaf node (and it is not source body),
// calculate the force exerted by the current node on body, and add this
// amount to body's net force.
r=v.pos.x-e.pos.x,i=v.pos.y-e.pos.y,0===(s=Math.sqrt(r*r+i*i))&&(
// Poor man's protection against zero distance.
r=(t.nextDouble()-.5)/50,i=(t.nextDouble()-.5)/50,s=Math.sqrt(r*r+i*i)),
// This is standard gravition force calculation but we divide
// by r^3 to save two operations when normalizing force vector.
n=a*v.mass*e.mass/(s*s*s),h+=n*r,d+=n*i):y&&(
// Otherwise, calculate the ratio s / r,  where s is the width of the region
// represented by the internal node, and r is the distance between the body
// and the node's center-of-mass
r=g.massX/g.mass-e.pos.x,i=g.massY/g.mass-e.pos.y,0===(s=Math.sqrt(r*r+i*i))&&(
// Sorry about code duplucation. I don't want to create many functions
// right away. Just want to see performance first.
r=(t.nextDouble()-.5)/50,i=(t.nextDouble()-.5)/50,s=Math.sqrt(r*r+i*i)),
// If s / r < θ, treat this internal node as a single body, and calculate the
// force it exerts on sourceBody, and add this amount to sourceBody's net force.
(g.right-g.left)/s<c?(
// in the if statement above we consider node's width only
// because the region was squarified during tree creation.
// Thus there is no difference between using width or height.
n=a*g.mass*e.mass/(s*s*s),h+=n*r,d+=n*i):(
// Otherwise, run the procedure recursively on each of the current node's children.
// I intentionally unfolded this loop, to save several CPU cycles.
g.quad0&&(l[m]=g.quad0,f+=1,m+=1),g.quad1&&(l[m]=g.quad1,f+=1,m+=1),g.quad2&&(l[m]=g.quad2,f+=1,m+=1),g.quad3&&(l[m]=g.quad3,f+=1,m+=1)))}e.force.x+=h,e.force.y+=d},options:function(e){return e?("number"==typeof e.gravity&&(a=e.gravity),"number"==typeof e.theta&&(c=e.theta),this):{gravity:a,theta:c}}};function d(){
// To avoid pressure on GC we reuse nodes.
var e=l[h];return e?(e.quad0=null,e.quad1=null,e.quad2=null,e.quad3=null,e.body=null,e.mass=e.massX=e.massY=0,e.left=e.right=e.top=e.bottom=0):(e=new n,l[h]=e),++h,e}function f(e){for(s.reset(),s.push(u,e);!s.isEmpty();){var n=s.pop(),r=n.node,a=n.body;if(r.body){
// We are trying to add to the leaf node.
// We have to convert current leaf into internal node
// and continue adding two nodes.
var o=r.body;// internal nodes do not cary bodies
if(r.body=null,i(o.pos,a.pos)){
// Prevent infinite subdivision by bumping one node
// anywhere in this quadrant
var c=3;do{var l=t.nextDouble(),h=(r.right-r.left)*l,f=(r.bottom-r.top)*l;o.pos.x=r.left+h,o.pos.y=r.top+f,c-=1}while(c>0&&i(o.pos,a.pos));if(0===c&&i(o.pos,a.pos))
// This is very bad, we ran out of precision.
// if we do not return from the method we'll get into
// infinite loop here. So we sacrifice correctness of layout, and keep the app running
// Next layout iteration should get larger bounding box in the first step and fix this
return}
// Next iteration should subdivide node further.
s.push(r,o),s.push(r,a)}else{
// This is internal node. Update the total mass of the node and center-of-mass.
var p=a.pos.x,m=a.pos.y;r.mass=r.mass+a.mass,r.massX=r.massX+a.mass*p,r.massY=r.massY+a.mass*m;
// Recursively insert the body in the appropriate quadrant.
// But first find the appropriate quadrant.
var g=0,// Assume we are in the 0's quad.
v=r.left,y=(r.right+v)/2,b=r.top,x=(r.bottom+b)/2;p>y&&(// somewhere in the eastern part.
g+=1,v=y,y=r.right),m>x&&(// and in south.
g+=2,b=x,x=r.bottom);var w=pu(r,g);w?
// continue searching in this quadrant.
s.push(w,a):(
// The node is internal but this quadrant is not taken. Add
// subnode to it.
(w=d()).left=v,w.top=b,w.right=y,w.bottom=x,w.body=a,mu(r,g,w))}}}};
/**
   * This is Barnes Hut simulation algorithm for 2d case. Implementation
   * is highly optimized (avoids recusion and gc pressure)
   *
   * http://www.cs.princeton.edu/courses/archive/fall03/cs126/assignments/barnes-hut.html
   */function pu(e,t){return 0===t?e.quad0:1===t?e.quad1:2===t?e.quad2:3===t?e.quad3:null}function mu(e,t,n){0===t?e.quad0=n:1===t?e.quad1=n:2===t?e.quad2=n:3===t&&(e.quad3=n)}var gu=function(e,t){var n=ou.random(42),r={x1:0,y1:0,x2:0,y2:0};return{box:r,update:function(){var t=e.length;if(0===t)return;// don't have to wory here.
var n=Number.MAX_VALUE,i=Number.MAX_VALUE,a=Number.MIN_VALUE,o=Number.MIN_VALUE;for(;t--;){
// this is O(n), could it be done faster with quadtree?
// how about pinned nodes?
var s=e[t];s.isPinned?(s.pos.x=s.prevPos.x,s.pos.y=s.prevPos.y):(s.prevPos.x=s.pos.x,s.prevPos.y=s.pos.y),s.pos.x<n&&(n=s.pos.x),s.pos.x>a&&(a=s.pos.x),s.pos.y<i&&(i=s.pos.y),s.pos.y>o&&(o=s.pos.y)}r.x1=n,r.x2=a,r.y1=i,r.y2=o},reset:function(){r.x1=r.y1=0,r.x2=r.y2=0},getBestNewPosition:function(e){var i=r,a=0,o=0;if(e.length){for(var s=0;s<e.length;++s)a+=e[s].pos.x,o+=e[s].pos.y;a/=e.length,o/=e.length}else a=(i.x1+i.x2)/2,o=(i.y1+i.y2)/2;var c=t.springLength;return{x:a+n.next(c)-c/2,y:o+n.next(c)-c/2}}}},vu=function(e){var t={update:function(t){t.force.x-=e.dragCoeff*t.velocity.x,t.force.y-=e.dragCoeff*t.velocity.y}};
// let easy access to dragCoeff:
return ru(e=au(e,{dragCoeff:.02}),t,["dragCoeff"]),t},yu=function(e){var t=au,n=ou.random(42),r={
/**
       * Upsates forces acting on a spring
       */
update:function(t){var r=t.from,i=t.to,a=t.length<0?e.springLength:t.length,o=i.pos.x-r.pos.x,s=i.pos.y-r.pos.y,c=Math.sqrt(o*o+s*s);0===c&&(o=(n.nextDouble()-.5)/50,s=(n.nextDouble()-.5)/50,c=Math.sqrt(o*o+s*s));var l=c-a,h=(!t.coeff||t.coeff<0?e.springCoeff:t.coeff)*l/c*t.weight;r.force.x+=h*o,r.force.y+=h*s,i.force.x-=h*o,i.force.y-=h*s}};return ru(e=t(e,{springCoeff:2e-4,springLength:80}),r,["springCoeff","springLength"]),r},bu=function(e,t){var n,r=0,i=0,a=0,o=0,s=e.length;if(0===s)return 0;for(n=0;n<s;++n){var c=e[n],l=t/c.mass;c.velocity.x+=l*c.force.x,c.velocity.y+=l*c.force.y;var h=c.velocity.x,u=c.velocity.y,d=Math.sqrt(h*h+u*u);d>1&&(c.velocity.x=h/d,c.velocity.y=u/d),r=t*c.velocity.x,a=t*c.velocity.y,c.pos.x+=r,c.pos.y+=a,i+=Math.abs(r),o+=Math.abs(a)}return(i*i+o*o)/s};
/**
   * Represents drag force, which reduces force value on each step by given
   * coefficient.
   *
   * @param {Object} options for the drag force
   * @param {Number=} options.dragCoeff drag force coefficient. 0.1 by default
   */var xu={Body:wu,Vector2d:_u,Body3d:Mu,Vector3d:Eu};function wu(e,t){this.pos=new _u(e,t),this.prevPos=new _u(e,t),this.force=new _u,this.velocity=new _u,this.mass=1}function _u(e,t){e&&"number"!=typeof e?(
// could be another vector
this.x="number"==typeof e.x?e.x:0,this.y="number"==typeof e.y?e.y:0):(this.x="number"==typeof e?e:0,this.y="number"==typeof t?t:0)}function Mu(e,t,n){this.pos=new Eu(e,t,n),this.prevPos=new Eu(e,t,n),this.force=new Eu,this.velocity=new Eu,this.mass=1}function Eu(e,t,n){e&&"number"!=typeof e?(
// could be another vector
this.x="number"==typeof e.x?e.x:0,this.y="number"==typeof e.y?e.y:0,this.z="number"==typeof e.z?e.z:0):(this.x="number"==typeof e?e:0,this.y="number"==typeof t?t:0,this.z="number"==typeof n?n:0)}wu.prototype.setPosition=function(e,t){this.prevPos.x=this.pos.x=e,this.prevPos.y=this.pos.y=t},_u.prototype.reset=function(){this.x=this.y=0},Mu.prototype.setPosition=function(e,t,n){this.prevPos.x=this.pos.x=e,this.prevPos.y=this.pos.y=t,this.prevPos.z=this.pos.z=n},Eu.prototype.reset=function(){this.x=this.y=this.z=0};var Su=function(e){return new xu.Body(e)},Tu=function(e){var t=nu,n=ru,r=Zh,i=(e=au(e,{
/**
         * Ideal length for links (springs in physical model).
         */
springLength:30,
/**
         * Hook's law coefficient. 1 - solid spring.
         */
springCoeff:8e-4,
/**
         * Coulomb's law coefficient. It's used to repel nodes thus should be negative
         * if you make it positive nodes start attract each other :).
         */
gravity:-1.2,
/**
         * Theta coefficient from Barnes Hut simulation. Ranged between (0, 1).
         * The closer it's to 1 the more nodes algorithm will have to go through.
         * Setting it to one makes Barnes Hut simulation no different from
         * brute-force forces calculation (each node is considered).
         */
theta:.8,
/**
         * Drag force coefficient. Used to slow down system, thus should be less than 1.
         * The closer it is to 0 the less tight system will be.
         */
dragCoeff:.02,
/**
         * Default time step (dt) for forces integration
         */
timeStep:20})).createQuadTree||fu,a=e.createBounds||gu,o=e.createDragForce||vu,s=e.createSpringForce||yu,c=e.integrator||bu,l=e.createBody||Su,h=[],// Bodies in this simulation.
u=[],// Springs in this simulation.
d=i(e),f=a(h,e),p=s(e),m=o(e),g=!0,v={
/**
       * Array of bodies, registered with current simulator
       *
       * Note: To add new body, use addBody() method. This property is only
       * exposed for testing/performance purposes.
       */
bodies:h,quadTree:d,
/**
       * Array of springs, registered with current simulator
       *
       * Note: To add new spring, use addSpring() method. This property is only
       * exposed for testing/performance purposes.
       */
springs:u,
/**
       * Returns settings with which current simulator was initialized
       */
settings:e,
/**
       * Performs one step of force simulation.
       *
       * @returns {boolean} true if system is considered stable; False otherwise.
       */
step:function(){!function(){
// Accumulate forces acting on bodies.
var e,t=h.length;if(t)// performance: O(n * log n)
for(
// only add bodies if there the array is not empty:
d.insertBodies(h);t--;)
// If body is pinned there is no point updating its forces - it should
// never move:
(e=h[t]).isPinned||(e.force.reset(),d.updateBodyForce(e),m.update(e));t=u.length;for(;t--;)p.update(u[t])}();var t=c(h,e.timeStep);return f.update(),t},
/**
       * Adds body to the system
       *
       * @param {ngraph.physics.primitives.Body} body physical body
       *
       * @returns {ngraph.physics.primitives.Body} added body
       */
addBody:function(e){if(!e)throw new Error("Body is required");return h.push(e),e},
/**
       * Adds body to the system at given position
       *
       * @param {Object} pos position of a body
       *
       * @returns {ngraph.physics.primitives.Body} added body
       */
addBodyAt:function(e){if(!e)throw new Error("Body position is required");var t=l(e);return h.push(t),t},
/**
       * Removes body from the system
       *
       * @param {ngraph.physics.primitives.Body} body to remove
       *
       * @returns {Boolean} true if body found and removed. falsy otherwise;
       */
removeBody:function(e){if(e){var t=h.indexOf(e);if(!(t<0))return h.splice(t,1),0===h.length&&f.reset(),!0}},
/**
       * Adds a spring to this simulation.
       *
       * @returns {Object} - a handle for a spring. If you want to later remove
       * spring pass it to removeSpring() method.
       */
addSpring:function(e,n,r,i,a){if(!e||!n)throw new Error("Cannot add null spring to force simulator");"number"!=typeof r&&(r=-1);var o=new t(e,n,r,a>=0?a:-1,i);
// TODO: could mark simulator as dirty.
return u.push(o),o},
/**
       * Returns amount of movement performed on last step() call
       */
getTotalMovement:function(){return 0},
/**
       * Removes spring from the system
       *
       * @param {Object} spring to remove. Spring is an object returned by addSpring
       *
       * @returns {Boolean} true if spring found and removed. falsy otherwise;
       */
removeSpring:function(e){if(e){var t=u.indexOf(e);return t>-1?(u.splice(t,1),!0):void 0}},getBestNewBodyPosition:function(e){return f.getBestNewPosition(e)},
/**
       * Returns bounding box which covers all bodies
       */
getBBox:function(){return g&&(f.update(),g=!1),f.box},invalidateBBox:function(){g=!0},gravity:function(t){return void 0!==t?(e.gravity=t,d.options({gravity:t}),this):e.gravity},theta:function(t){return void 0!==t?(e.theta=t,d.options({theta:t}),this):e.theta}};
// allow settings modification via public API:
return n(e,v),r(v),v};
/**
   * Manages a simulation of physical forces acting on bodies and springs.
   */var Au=function(e){!function(e){if(!e)throw new Error("Eventify cannot use falsy object as events subject");for(var t=["on","fire","off"],n=0;n<t.length;++n)if(e.hasOwnProperty(t[n]))throw new Error("Subject cannot be eventified, since it already has property '"+t[n]+"'")}(e);var t=function(e){
// Store all event listeners to this hash. Key is event name, value is array
// of callback records.
//
// A callback record consists of callback function and its optional context:
// { 'eventName' => [{callback: function, ctx: object}] }
var t=Object.create(null);return{on:function(n,r,i){if("function"!=typeof r)throw new Error("callback is expected to be a function");var a=t[n];return a||(a=t[n]=[]),a.push({callback:r,ctx:i}),e},off:function(n,r){var i=void 0===n;if(i)
// Killing old events storage should be enough in this case:
return t=Object.create(null),e;if(t[n]){var a="function"!=typeof r;if(a)delete t[n];else for(var o=t[n],s=0;s<o.length;++s)o[s].callback===r&&o.splice(s,1)}return e},fire:function(n){var r,i=t[n];if(!i)return e;arguments.length>1&&(r=Array.prototype.splice.call(arguments,1));for(var a=0;a<i.length;++a){var o=i[a];o.callback.apply(o.ctx,r)}return e}}}(e);return e.on=t.on,e.off=t.off,e.fire=t.fire,e};var Lu=
/**
   * Creates force based layout for a given graph.
   *
   * @param {ngraph.graph} graph which needs to be laid out
   * @param {object} physicsSettings if you need custom settings
   * for physics simulator you can pass your own settings here. If it's not passed
   * a default one will be created.
   */
function(e,t){if(!e)throw new Error("Graph structure cannot be undefined");var n=Tu(t),r=
/**
     * Calculates mass of a body, which corresponds to node with given id.
     *
     * @param {String|Number} nodeId identifier of a node, for which body mass needs to be calculated
     * @returns {Number} recommended mass of the body;
     */
function(t){var n=e.getLinks(t);return n?1+n.length/3:1};t&&"function"==typeof t.nodeMass&&(r=t.nodeMass);var i=Object.create(null),a={},o=0,s=n.settings.springTransform||Cu;
// Initialize physics with what we have in the graph:
o=0,e.forEachNode(function(e){u(e.id),o+=1}),e.forEachLink(f),e.on("changed",h);var c=!1,l={
/**
       * Performs one step of iterative layout algorithm
       *
       * @returns {boolean} true if the system should be considered stable; Flase otherwise.
       * The system is stable if no further call to `step()` can improve the layout.
       */
step:function(){if(0===o)return!0;// TODO: This will never fire 'stable'
var e=n.step();
// Save the movement in case if someone wants to query it in the step
// callback.
l.lastMove=e,
// Allow listeners to perform low-level actions after nodes are updated.
l.fire("step");var t,r=e/o,i=r<=.01;// TODO: The number is somewhat arbitrary...
return c!==i&&(c=i,t=i,l.fire("stable",t)),i},
/**
       * For a given `nodeId` returns position
       */
getNodePosition:function(e){return g(e).pos},
/**
       * Sets position of a node to a given coordinates
       * @param {string} nodeId node identifier
       * @param {number} x position of a node
       * @param {number} y position of a node
       * @param {number=} z position of node (only if applicable to body)
       */
setNodePosition:function(e){var t=g(e);t.setPosition.apply(t,Array.prototype.slice.call(arguments,1)),n.invalidateBBox()},
/**
       * @returns {Object} Link position by link id
       * @returns {Object.from} {x, y} coordinates of link start
       * @returns {Object.to} {x, y} coordinates of link end
       */
getLinkPosition:function(e){var t=a[e];if(t)return{from:t.from.pos,to:t.to.pos}},
/**
       * @returns {Object} area required to fit in the graph. Object contains
       * `x1`, `y1` - top left coordinates
       * `x2`, `y2` - bottom right coordinates
       */
getGraphRect:function(){return n.getBBox()},
/**
       * Iterates over each body in the layout simulator and performs a callback(body, nodeId)
       */
forEachBody:function(e){Object.keys(i).forEach(function(t){e(i[t],t)})},
/*
       * Requests layout algorithm to pin/unpin node to its current position
       * Pinned nodes should not be affected by layout algorithm and always
       * remain at their position
       */
pinNode:function(e,t){var n=g(e.id);n.isPinned=!!t},
/**
       * Checks whether given graph's node is currently pinned
       */
isNodePinned:function(e){return g(e.id).isPinned},
/**
       * Request to release all resources
       */
dispose:function(){e.off("changed",h),l.fire("disposed")},
/**
       * Gets physical body for a given node id. If node is not found undefined
       * value is returned.
       */
getBody:function(e){return i[e]},
/**
       * Gets spring for a given edge.
       *
       * @param {string} linkId link identifer. If two arguments are passed then
       * this argument is treated as formNodeId
       * @param {string=} toId when defined this parameter denotes head of the link
       * and first argument is trated as tail of the link (fromId)
       */
getSpring:function(t,n){var r;if(void 0===n)
// assume fromId as a linkId:
r="object"!=typeof t?t:t.id;else{
// toId is defined, should grab link:
var i=e.hasLink(t,n);if(!i)return;r=i.id}return a[r]},
/**
       * [Read only] Gets current physics simulator
       */
simulator:n,
/**
       * Gets the graph that was used for layout
       */
graph:e,
/**
       * Gets amount of movement performed during last step opeartion
       */
lastMove:0};return Au(l),l;function h(t){for(var n=0;n<t.length;++n){var r=t[n];"add"===r.changeType?(r.node&&u(r.node.id),r.link&&f(r.link)):"remove"===r.changeType&&(r.node&&d(r.node),r.link&&p(r.link))}o=e.getNodesCount()}function u(t){var r=i[t];if(!r){var a=e.getNode(t);if(!a)throw new Error("initBody() was called with unknown node id");var o=a.position;if(!o){var s=function(e){
// TODO: Could probably be done better on memory
var t=[];if(!e.links)return t;for(var n=Math.min(e.links.length,2),r=0;r<n;++r){var a=e.links[r],o=a.fromId!==e.id?i[a.fromId]:i[a.toId];o&&o.pos&&t.push(o)}return t}(a);o=n.getBestNewBodyPosition(s)}(r=n.addBodyAt(o)).id=t,i[t]=r,m(t),
/**
     * Checks whether graph node has in its settings pinned attribute,
     * which means layout algorithm cannot move it. Node can be preconfigured
     * as pinned, if it has "isPinned" attribute, or when node.data has it.
     *
     * @param {Object} node a graph node to check
     * @return {Boolean} true if node should be treated as pinned; false otherwise.
     */
function(e){return e&&(e.isPinned||e.data&&e.data.isPinned)}(a)&&(r.isPinned=!0)}}function d(e){var t=e.id,r=i[t];r&&(i[t]=null,delete i[t],n.removeBody(r))}function f(e){m(e.fromId),m(e.toId);var t=i[e.fromId],r=i[e.toId],o=n.addSpring(t,r,e.length);s(e,o),a[e.id]=o}function p(t){var r=a[t.id];if(r){var i=e.getNode(t.fromId),o=e.getNode(t.toId);i&&m(i.id),o&&m(o.id),delete a[t.id],n.removeSpring(r)}}function m(e){var t=i[e];if(t.mass=r(e),Number.isNaN(t.mass))throw new Error("Node mass should be a number")}function g(e){var t=i[e];return t||(u(e),t=i[e]),t}},Pu=Tu;function Cu(){}Lu.simulator=Pu;var Ru=
/**
   * Represents a physical spring. Spring connects two bodies, has rest length
   * stiffness coefficient and optional weight
   */
function(e,t,n,r,i){this.from=e,this.to=t,this.length=n,this.coeff=r,this.weight="number"==typeof i?i:1}
/**
   * Internal data structure to represent 2D QuadTree node
   */;var Ou=function(){
// body stored inside this node. In quad tree only leaf nodes (by construction)
// contain boides:
this.body=null,
// Child nodes are stored in quads. Each quad is presented by number:
// 0 | 1
// -----
// 2 | 3
this.quad0=null,this.quad1=null,this.quad2=null,this.quad3=null,
// Total mass of current node
this.mass=0,
// Center of mass coordinates
this.massX=0,this.massY=0,
// bounding box coordinates
this.left=0,this.top=0,this.bottom=0,this.right=0},Nu=Iu;
/**
   * Our implmentation of QuadTree is non-recursive to avoid GC hit
   * This data structure represent stack of elements
   * which we are trying to insert into quad tree.
   */
function Iu(){this.stack=[],this.popIdx=0}function Du(e,t){this.node=e,// QuadTree node
this.body=t}Iu.prototype={isEmpty:function(){return 0===this.popIdx},push:function(e,t){var n=this.stack[this.popIdx];n?(n.node=e,n.body=t):
// we are trying to avoid memory pressue: create new element
// only when absolutely necessary
this.stack[this.popIdx]=new Du(e,t),++this.popIdx},pop:function(){if(this.popIdx>0)return this.stack[--this.popIdx]},reset:function(){this.popIdx=0}};var zu=function(e,t){var n=Math.abs(e.x-t.x),r=Math.abs(e.y-t.y);return n<1e-8&&r<1e-8},ku=function(e){(e=e||{}).gravity="number"==typeof e.gravity?e.gravity:-1,e.theta="number"==typeof e.theta?e.theta:.8;
// we require deterministic randomness here
var t=ou.random(1984),n=Ou,r=Nu,i=zu,a=e.gravity,o=[],s=new r,c=e.theta,l=[],h=0,u=function(){
// To avoid pressure on GC we reuse nodes.
var e=l[h];return e?(e.quad0=null,e.quad1=null,e.quad2=null,e.quad3=null,e.body=null,e.mass=e.massX=e.massY=0,e.left=e.right=e.top=e.bottom=0):(e=new n,l[h]=e),++h,e},d=u(),
// Inserts body to the tree
f=function(e){for(s.reset(),s.push(d,e);!s.isEmpty();){var n=s.pop(),r=n.node,a=n.body;if(r.body){
// We are trying to add to the leaf node.
// We have to convert current leaf into internal node
// and continue adding two nodes.
var o=r.body;// internal nodes do not cary bodies
if(r.body=null,i(o.pos,a.pos)){
// Prevent infinite subdivision by bumping one node
// anywhere in this quadrant
var c=3;do{var l=t.nextDouble(),h=(r.right-r.left)*l,f=(r.bottom-r.top)*l;o.pos.x=r.left+h,o.pos.y=r.top+f,c-=1}while(c>0&&i(o.pos,a.pos));if(0===c&&i(o.pos,a.pos))
// This is very bad, we ran out of precision.
// if we do not return from the method we'll get into
// infinite loop here. So we sacrifice correctness of layout, and keep the app running
// Next layout iteration should get larger bounding box in the first step and fix this
return}
// Next iteration should subdivide node further.
s.push(r,o),s.push(r,a)}else{
// This is internal node. Update the total mass of the node and center-of-mass.
var p=a.pos.x,m=a.pos.y;r.mass=r.mass+a.mass,r.massX=r.massX+a.mass*p,r.massY=r.massY+a.mass*m;
// Recursively insert the body in the appropriate quadrant.
// But first find the appropriate quadrant.
var g=0,// Assume we are in the 0's quad.
v=r.left,y=(r.right+v)/2,b=r.top,x=(r.bottom+b)/2;if(p>y){// somewhere in the eastern part.
g+=1;var w=v;v=y,y+=y-w}if(m>x){// and in south.
g+=2;var _=b;b=x,x+=x-_}var M=Bu(r,g);M?
// continue searching in this quadrant.
s.push(M,a):(
// The node is internal but this quadrant is not taken. Add
// subnode to it.
(M=u()).left=v,M.top=b,M.right=y,M.bottom=x,M.body=a,Uu(r,g,M))}}};return{insertBodies:function(e){var t,n=Number.MAX_VALUE,r=Number.MAX_VALUE,i=Number.MIN_VALUE,a=Number.MIN_VALUE,o=e.length;
// To reduce quad tree depth we are looking for exact bounding box of all particles.
for(t=o;t--;){var s=e[t].pos.x,c=e[t].pos.y;s<n&&(n=s),s>i&&(i=s),c<r&&(r=c),c>a&&(a=c)}
// Squarify the bounds.
var l=i-n,p=a-r;for(l>p?a=r+l:i=n+p,h=0,(d=u()).left=n,d.right=i,d.top=r,d.bottom=a,(t=o-1)>0&&(d.body=e[t]);t--;)f(e[t])},updateBodyForce:function(e){var n,r,i,s,l=o,h=0,u=0,f=1,p=0,m=1;for(l[0]=d;f;){var g=l[p],v=g.body;f-=1,p+=1;var y=v!==e;v&&y?(
// If the current node is a leaf node (and it is not source body),
// calculate the force exerted by the current node on body, and add this
// amount to body's net force.
r=v.pos.x-e.pos.x,i=v.pos.y-e.pos.y,0===(s=Math.sqrt(r*r+i*i))&&(
// Poor man's protection against zero distance.
r=(t.nextDouble()-.5)/50,i=(t.nextDouble()-.5)/50,s=Math.sqrt(r*r+i*i)),h+=(
// This is standard gravition force calculation but we divide
// by r^3 to save two operations when normalizing force vector.
n=a*v.mass*e.mass/(s*s*s))*r,u+=n*i):y&&(
// Otherwise, calculate the ratio s / r,  where s is the width of the region
// represented by the internal node, and r is the distance between the body
// and the node's center-of-mass
r=g.massX/g.mass-e.pos.x,i=g.massY/g.mass-e.pos.y,0===(s=Math.sqrt(r*r+i*i))&&(
// Sorry about code duplucation. I don't want to create many functions
// right away. Just want to see performance first.
r=(t.nextDouble()-.5)/50,i=(t.nextDouble()-.5)/50,s=Math.sqrt(r*r+i*i)),
// If s / r < θ, treat this internal node as a single body, and calculate the
// force it exerts on sourceBody, and add this amount to sourceBody's net force.
(g.right-g.left)/s<c?(
// in the if statement above we consider node's width only
// because the region was squarified during tree creation.
// Thus there is no difference between using width or height.
h+=(n=a*g.mass*e.mass/(s*s*s))*r,u+=n*i):(
// Otherwise, run the procedure recursively on each of the current node's children.
// I intentionally unfolded this loop, to save several CPU cycles.
g.quad0&&(l[m]=g.quad0,f+=1,m+=1),g.quad1&&(l[m]=g.quad1,f+=1,m+=1),g.quad2&&(l[m]=g.quad2,f+=1,m+=1),g.quad3&&(l[m]=g.quad3,f+=1,m+=1)))}e.force.x+=h,e.force.y+=u},options:function(e){return e?("number"==typeof e.gravity&&(a=e.gravity),"number"==typeof e.theta&&(c=e.theta),this):{gravity:a,theta:c}}}};
/**
   * This is Barnes Hut simulation algorithm for 2d case. Implementation
   * is highly optimized (avoids recusion and gc pressure)
   *
   * http://www.cs.princeton.edu/courses/archive/fall03/cs126/assignments/barnes-hut.html
   */function Bu(e,t){return 0===t?e.quad0:1===t?e.quad1:2===t?e.quad2:3===t?e.quad3:null}function Uu(e,t,n){0===t?e.quad0=n:1===t?e.quad1=n:2===t?e.quad2=n:3===t&&(e.quad3=n)}var Fu=function(e,t){var n=ou.random(42),r={x1:0,y1:0,x2:0,y2:0};return{box:r,update:function(){var t=e.length;if(0===t)return;// don't have to wory here.
var n=Number.MAX_VALUE,i=Number.MAX_VALUE,a=Number.MIN_VALUE,o=Number.MIN_VALUE;for(;t--;){
// this is O(n), could it be done faster with quadtree?
// how about pinned nodes?
var s=e[t];s.isPinned?(s.pos.x=s.prevPos.x,s.pos.y=s.prevPos.y):(s.prevPos.x=s.pos.x,s.prevPos.y=s.pos.y),s.pos.x<n&&(n=s.pos.x),s.pos.x>a&&(a=s.pos.x),s.pos.y<i&&(i=s.pos.y),s.pos.y>o&&(o=s.pos.y)}r.x1=n,r.x2=a,r.y1=i,r.y2=o},reset:function(){r.x1=r.y1=0,r.x2=r.y2=0},getBestNewPosition:function(e){var i=r,a=0,o=0;if(e.length){for(var s=0;s<e.length;++s)a+=e[s].pos.x,o+=e[s].pos.y;a/=e.length,o/=e.length}else a=(i.x1+i.x2)/2,o=(i.y1+i.y2)/2;var c=t.springLength;return{x:a+n.next(c)-c/2,y:o+n.next(c)-c/2}}}},Gu=function(e){var t={update:function(t){t.force.x-=e.dragCoeff*t.velocity.x,t.force.y-=e.dragCoeff*t.velocity.y}};
// let easy access to dragCoeff:
return ru(e=au(e,{dragCoeff:.02}),t,["dragCoeff"]),t},ju=function(e){var t=au,n=ou.random(42),r={
/**
       * Upsates forces acting on a spring
       */
update:function(t){var r=t.from,i=t.to,a=t.length<0?e.springLength:t.length,o=i.pos.x-r.pos.x,s=i.pos.y-r.pos.y,c=Math.sqrt(o*o+s*s);0===c&&(o=(n.nextDouble()-.5)/50,s=(n.nextDouble()-.5)/50,c=Math.sqrt(o*o+s*s));var l=c-a,h=(!t.coeff||t.coeff<0?e.springCoeff:t.coeff)*l/c*t.weight;r.force.x+=h*o,r.force.y+=h*s,i.force.x-=h*o,i.force.y-=h*s}};return ru(e=t(e,{springCoeff:2e-4,springLength:80}),r,["springCoeff","springLength"]),r},Hu=function(e,t){var n,r=0,i=0,a=0,o=0,s=e.length;if(0===s)return 0;for(n=0;n<s;++n){var c=e[n],l=t/c.mass;c.velocity.x+=l*c.force.x,c.velocity.y+=l*c.force.y;var h=c.velocity.x,u=c.velocity.y,d=Math.sqrt(h*h+u*u);d>1&&(c.velocity.x=h/d,c.velocity.y=u/d),r=t*c.velocity.x,a=t*c.velocity.y,c.pos.x+=r,c.pos.y+=a,i+=Math.abs(r),o+=Math.abs(a)}return(i*i+o*o)/s};
/**
   * Represents drag force, which reduces force value on each step by given
   * coefficient.
   *
   * @param {Object} options for the drag force
   * @param {Number=} options.dragCoeff drag force coefficient. 0.1 by default
   */var Vu=function(e){return new xu.Body(e)},Wu=function(e){var t=Ru,n=ru,r=Zh,i=(e=au(e,{
/**
         * Ideal length for links (springs in physical model).
         */
springLength:30,
/**
         * Hook's law coefficient. 1 - solid spring.
         */
springCoeff:8e-4,
/**
         * Coulomb's law coefficient. It's used to repel nodes thus should be negative
         * if you make it positive nodes start attract each other :).
         */
gravity:-1.2,
/**
         * Theta coefficient from Barnes Hut simulation. Ranged between (0, 1).
         * The closer it's to 1 the more nodes algorithm will have to go through.
         * Setting it to one makes Barnes Hut simulation no different from
         * brute-force forces calculation (each node is considered).
         */
theta:.8,
/**
         * Drag force coefficient. Used to slow down system, thus should be less than 1.
         * The closer it is to 0 the less tight system will be.
         */
dragCoeff:.02,
/**
         * Default time step (dt) for forces integration
         */
timeStep:20,
/**
          * Maximum movement of the system which can be considered as stabilized
          */
stableThreshold:.009})).createQuadTree||ku,a=e.createBounds||Fu,o=e.createDragForce||Gu,s=e.createSpringForce||ju,c=e.integrator||Hu,l=e.createBody||Vu,h=[],// Bodies in this simulation.
u=[],// Springs in this simulation.
d=i(e),f=a(h,e),p=s(e),m=o(e),g=0,v=!1,y={
/**
       * Array of bodies, registered with current simulator
       *
       * Note: To add new body, use addBody() method. This property is only
       * exposed for testing/performance purposes.
       */
bodies:h,
/**
       * Array of springs, registered with current simulator
       *
       * Note: To add new spring, use addSpring() method. This property is only
       * exposed for testing/performance purposes.
       */
springs:u,
/**
       * Returns settings with which current simulator was initialized
       */
settings:e,
/**
       * Performs one step of force simulation.
       *
       * @returns {boolean} true if system is considered stable; False otherwise.
       */
step:function(){!function(){
// Accumulate forces acting on bodies.
var e,t=h.length;if(t)// performance: O(n * log n)
for(
// only add bodies if there the array is not empty:
d.insertBodies(h);t--;)
// If body is pinned there is no point updating its forces - it should
// never move:
(e=h[t]).isPinned||(e.force.reset(),d.updateBodyForce(e),m.update(e));t=u.length;for(;t--;)p.update(u[t])}(),g=c(h,e.timeStep),f.update();var t=g<e.stableThreshold;return v!==t&&y.fire("stable",t),v=t,t},
/**
       * Adds body to the system
       *
       * @param {ngraph.physics.primitives.Body} body physical body
       *
       * @returns {ngraph.physics.primitives.Body} added body
       */
addBody:function(e){if(!e)throw new Error("Body is required");return h.push(e),e},
/**
       * Adds body to the system at given position
       *
       * @param {Object} pos position of a body
       *
       * @returns {ngraph.physics.primitives.Body} added body
       */
addBodyAt:function(e){if(!e)throw new Error("Body position is required");var t=l(e);return h.push(t),t},
/**
       * Removes body from the system
       *
       * @param {ngraph.physics.primitives.Body} body to remove
       *
       * @returns {Boolean} true if body found and removed. falsy otherwise;
       */
removeBody:function(e){if(e){var t=h.indexOf(e);if(!(t<0))return h.splice(t,1),0===h.length&&f.reset(),!0}},
/**
       * Adds a spring to this simulation.
       *
       * @returns {Object} - a handle for a spring. If you want to later remove
       * spring pass it to removeSpring() method.
       */
addSpring:function(e,n,r,i,a){if(!e||!n)throw new Error("Cannot add null spring to force simulator");"number"!=typeof r&&(r=-1);var o=new t(e,n,r,a>=0?a:-1,i);
// TODO: could mark simulator as dirty.
return u.push(o),o},
/**
       * Returns amount of movement performed on last step() call
       */
getTotalMovement:function(){return g},
/**
       * Removes spring from the system
       *
       * @param {Object} spring to remove. Spring is an object returned by addSpring
       *
       * @returns {Boolean} true if spring found and removed. falsy otherwise;
       */
removeSpring:function(e){if(e){var t=u.indexOf(e);return t>-1?(u.splice(t,1),!0):void 0}},getBestNewBodyPosition:function(e){return f.getBestNewPosition(e)},
/**
       * Returns bounding box which covers all bodies
       */
getBBox:function(){return f.box},gravity:function(t){return void 0!==t?(e.gravity=t,d.options({gravity:t}),this):e.gravity},theta:function(t){return void 0!==t?(e.theta=t,d.options({theta:t}),this):e.theta}};
// allow settings modification via public API:
return n(e,y),r(y),y};
/**
   * Manages a simulation of physical forces acting on bodies and springs.
   */var qu=
/**
   * Creates force based layout for a given graph.
   * @param {ngraph.graph} graph which needs to be laid out
   * @param {object} physicsSettings if you need custom settings
   * for physics simulator you can pass your own settings here. If it's not passed
   * a default one will be created.
   */
function(e,t){if(!e)throw new Error("Graph structure cannot be undefined");var n=Wu(t),r="function"==typeof Object.create?Object.create(null):{},i={},a=n.settings.springTransform||Yu;
// Initialize physical objects according to what we have in the graph:
e.forEachNode(function(e){l(e.id)}),e.forEachLink(u),e.on("changed",c),n.on("stable",s);var o={
/**
       * Performs one step of iterative layout algorithm
       */
step:function(){return n.step()},
/**
       * For a given `nodeId` returns position
       */
getNodePosition:function(e){return p(e).pos},
/**
       * Sets position of a node to a given coordinates
       * @param {string} nodeId node identifier
       * @param {number} x position of a node
       * @param {number} y position of a node
       * @param {number=} z position of node (only if applicable to body)
       */
setNodePosition:function(e){var t=p(e);t.setPosition.apply(t,Array.prototype.slice.call(arguments,1))},
/**
       * @returns {Object} Link position by link id
       * @returns {Object.from} {x, y} coordinates of link start
       * @returns {Object.to} {x, y} coordinates of link end
       */
getLinkPosition:function(e){var t=i[e];if(t)return{from:t.from.pos,to:t.to.pos}},
/**
       * @returns {Object} area required to fit in the graph. Object contains
       * `x1`, `y1` - top left coordinates
       * `x2`, `y2` - bottom right coordinates
       */
getGraphRect:function(){return n.getBBox()},
/*
       * Requests layout algorithm to pin/unpin node to its current position
       * Pinned nodes should not be affected by layout algorithm and always
       * remain at their position
       */
pinNode:function(e,t){var n=p(e.id);n.isPinned=!!t},
/**
       * Checks whether given graph's node is currently pinned
       */
isNodePinned:function(e){return p(e.id).isPinned},
/**
       * Request to release all resources
       */
dispose:function(){e.off("changed",c),n.off("stable",s)},
/**
       * Gets physical body for a given node id. If node is not found undefined
       * value is returned.
       */
getBody:function(e){return r[e]},
/**
       * Gets spring for a given edge.
       *
       * @param {string} linkId link identifer. If two arguments are passed then
       * this argument is treated as formNodeId
       * @param {string=} toId when defined this parameter denotes head of the link
       * and first argument is trated as tail of the link (fromId)
       */
getSpring:function(t,n){var r;if(void 0===n)
// assume fromId as a linkId:
r="object"!=typeof t?t:t.id;else{
// toId is defined, should grab link:
var a=e.hasLink(t,n);if(!a)return;r=a.id}return i[r]},
/**
       * [Read only] Gets current physics simulator
       */
simulator:n};return Zh(o),o;function s(e){o.fire("stable",e)}function c(e){for(var t=0;t<e.length;++t){var n=e[t];"add"===n.changeType?(n.node&&l(n.node.id),n.link&&u(n.link)):"remove"===n.changeType&&(n.node&&h(n.node),n.link&&d(n.link))}}function l(t){var i=r[t];if(!i){var a=e.getNode(t);if(!a)throw new Error("initBody() was called with unknown node id");var o=a.position;if(!o){var s=function(e){
// TODO: Could probably be done better on memory
var t=[];if(!e.links)return t;for(var n=Math.min(e.links.length,2),i=0;i<n;++i){var a=e.links[i],o=a.fromId!==e.id?r[a.fromId]:r[a.toId];o&&o.pos&&t.push(o)}return t}(a);o=n.getBestNewBodyPosition(s)}i=n.addBodyAt(o),r[t]=i,f(t),
/**
     * Checks whether graph node has in its settings pinned attribute,
     * which means layout algorithm cannot move it. Node can be preconfigured
     * as pinned, if it has "isPinned" attribute, or when node.data has it.
     *
     * @param {Object} node a graph node to check
     * @return {Boolean} true if node should be treated as pinned; false otherwise.
     */
function(e){return e&&(e.isPinned||e.data&&e.data.isPinned)}(a)&&(i.isPinned=!0)}}function h(e){var t=e.id,i=r[t];i&&(r[t]=null,delete r[t],n.removeBody(i))}function u(e){f(e.fromId),f(e.toId);var t=r[e.fromId],o=r[e.toId],s=n.addSpring(t,o,e.length);a(e,s),i[e.id]=s}function d(t){var r=i[t.id];if(r){var a=e.getNode(t.fromId),o=e.getNode(t.toId);a&&f(a.id),o&&f(o.id),delete i[t.id],n.removeSpring(r)}}function f(t){var n=r[t];n.mass=
/**
     * Calculates mass of a body, which corresponds to node with given id.
     *
     * @param {String|Number} nodeId identifier of a node, for which body mass needs to be calculated
     * @returns {Number} recommended mass of the body;
     */
function(t){var n=e.getLinks(t);return n?1+n.length/3:1}(t)}function p(e){var t=r[e];return t||(l(e),t=r[e]),t}},Xu=Wu;function Yu(){}qu.simulator=Xu;
/**
   * Internal data structure to represent 3D QuadTree node
   */
var Zu=function(){
// body stored inside this node. In quad tree only leaf nodes (by construction)
// contain boides:
this.body=null,
// Child nodes are stored in quads. Each quad is presented by number:
// Behind Z median:
// 0 | 1
// -----
// 2 | 3
// In front of Z median:
// 4 | 5
// -----
// 6 | 7
this.quad0=null,this.quad1=null,this.quad2=null,this.quad3=null,this.quad4=null,this.quad5=null,this.quad6=null,this.quad7=null,
// Total mass of current node
this.mass=0,
// Center of mass coordinates
this.massX=0,this.massY=0,this.massZ=0,
// bounding box coordinates
this.left=0,this.top=0,this.bottom=0,this.right=0,this.front=0,this.back=0},Ju=Qu;
/**
   * Our implementation of QuadTree is non-recursive to avoid GC hit
   * This data structure represent stack of elements
   * which we are trying to insert into quad tree.
   */
function Qu(){this.stack=[],this.popIdx=0}function Ku(e,t){this.node=e,// QuadTree node
this.body=t}Qu.prototype={isEmpty:function(){return 0===this.popIdx},push:function(e,t){var n=this.stack[this.popIdx];n?(n.node=e,n.body=t):
// we are trying to avoid memory pressure: create new element
// only when absolutely necessary
this.stack[this.popIdx]=new Ku(e,t),++this.popIdx},pop:function(){if(this.popIdx>0)return this.stack[--this.popIdx]},reset:function(){this.popIdx=0}};var $u=function(e,t){var n=Math.abs(e.x-t.x),r=Math.abs(e.y-t.y),i=Math.abs(e.z-t.z);return n<1e-8&&r<1e-8&&i<1e-8},ed=function(e){(e=e||{}).gravity="number"==typeof e.gravity?e.gravity:-1,e.theta="number"==typeof e.theta?e.theta:.8;
// we require deterministic randomness here
var t=ou.random(1984),n=Zu,r=Ju,i=$u,a=e.gravity,o=[],s=new r,c=e.theta,l=[],h=0,u=function(){
// To avoid pressure on GC we reuse nodes.
var e=l[h];return e?(e.quad0=null,e.quad4=null,e.quad1=null,e.quad5=null,e.quad2=null,e.quad6=null,e.quad3=null,e.quad7=null,e.body=null,e.mass=e.massX=e.massY=e.massZ=0,e.left=e.right=e.top=e.bottom=e.front=e.back=0):(e=new n,l[h]=e),++h,e},d=u(),
// Inserts body to the tree
f=function(e){for(s.reset(),s.push(d,e);!s.isEmpty();){var n=s.pop(),r=n.node,a=n.body;if(r.body){
// We are trying to add to the leaf node.
// We have to convert current leaf into internal node
// and continue adding two nodes.
var o=r.body;// internal nodes do not carry bodies
if(r.body=null,i(o.pos,a.pos)){
// Prevent infinite subdivision by bumping one node
// anywhere in this quadrant
var c=3;do{var l=t.nextDouble(),h=(r.right-r.left)*l,f=(r.bottom-r.top)*l,p=(r.front-r.back)*l;o.pos.x=r.left+h,o.pos.y=r.top+f,o.pos.z=r.back+p,c-=1}while(c>0&&i(o.pos,a.pos));if(0===c&&i(o.pos,a.pos))
// This is very bad, we ran out of precision.
// if we do not return from the method we'll get into
// infinite loop here. So we sacrifice correctness of layout, and keep the app running
// Next layout iteration should get larger bounding box in the first step and fix this
return}
// Next iteration should subdivide node further.
s.push(r,o),s.push(r,a)}else{
// This is internal node. Update the total mass of the node and center-of-mass.
var m=a.pos.x,g=a.pos.y,v=a.pos.z;r.mass+=a.mass,r.massX+=a.mass*m,r.massY+=a.mass*g,r.massZ+=a.mass*v;
// Recursively insert the body in the appropriate quadrant.
// But first find the appropriate quadrant.
var y=0,// Assume we are in the 0's quad.
b=r.left,x=(r.right+b)/2,w=r.top,_=(r.bottom+w)/2,M=r.back,E=(r.front+M)/2;if(m>x){// somewhere in the eastern part.
y+=1;var S=b;b=x,x+=x-S}if(g>_){// and in south.
y+=2;var T=w;w=_,_+=_-T}if(v>E){// and in frontal part
y+=4;var A=M;E=(M=E)+(M-A)}var L=td(r,y);L?
// continue searching in this quadrant.
s.push(L,a):(
// The node is internal but this quadrant is not taken. Add subnode to it.
(L=u()).left=b,L.top=w,L.right=x,L.bottom=_,L.back=M,L.front=E,L.body=a,nd(r,y,L))}}};return{insertBodies:function(e){var t,n=Number.MAX_VALUE,r=Number.MAX_VALUE,i=Number.MAX_VALUE,a=Number.MIN_VALUE,o=Number.MIN_VALUE,s=Number.MIN_VALUE,c=e.length;
// To reduce quad tree depth we are looking for exact bounding box of all particles.
for(t=c;t--;){var l=e[t].pos,p=l.x,m=l.y,g=l.z;p<n&&(n=p),p>a&&(a=p),m<r&&(r=m),m>o&&(o=m),g<i&&(i=g),g>s&&(s=g)}
// Squarify the bounds.
var v=Math.max(a-n,Math.max(o-r,s-i));for(a=n+v,o=r+v,s=i+v,h=0,(d=u()).left=n,d.right=a,d.top=r,d.bottom=o,d.back=i,d.front=s,(t=c-1)>0&&(d.body=e[t]);t--;)f(e[t])},updateBodyForce:function(e){var n,r,i,s,l,h=o,u=0,f=0,p=0,m=1,g=0,v=1;for(h[0]=d;m;){var y=h[g],b=y.body;m-=1,g+=1;var x=b!==e;b&&x?(
// If the current node is a leaf node (and it is not source body),
// calculate the force exerted by the current node on body, and add this
// amount to body's net force.
r=b.pos.x-e.pos.x,i=b.pos.y-e.pos.y,s=b.pos.z-e.pos.z,0===(l=Math.sqrt(r*r+i*i+s*s))&&(
// Poor man's protection against zero distance.
r=(t.nextDouble()-.5)/50,i=(t.nextDouble()-.5)/50,s=(t.nextDouble()-.5)/50,l=Math.sqrt(r*r+i*i+s*s)),u+=(
// This is standard gravitation force calculation but we divide
// by r^3 to save two operations when normalizing force vector.
n=a*b.mass*e.mass/(l*l*l))*r,f+=n*i,p+=n*s):x&&(
// Otherwise, calculate the ratio s / r,  where s is the width of the region
// represented by the internal node, and r is the distance between the body
// and the node's center-of-mass
r=y.massX/y.mass-e.pos.x,i=y.massY/y.mass-e.pos.y,s=y.massZ/y.mass-e.pos.z,0===(l=Math.sqrt(r*r+i*i+s*s))&&(
// Sorry about code duplication. I don't want to create many functions
// right away. Just want to see performance first.
r=(t.nextDouble()-.5)/50,i=(t.nextDouble()-.5)/50,s=(t.nextDouble()-.5)/50,l=Math.sqrt(r*r+i*i+s*s)),
// If s / r < θ, treat this internal node as a single body, and calculate the
// force it exerts on sourceBody, and add this amount to sourceBody's net force.
(y.right-y.left)/l<c?(
// in the if statement above we consider node's width only
// because the region was squarified during tree creation.
// Thus there is no difference between using width or height.
u+=(n=a*y.mass*e.mass/(l*l*l))*r,f+=n*i,p+=n*s):(
// Otherwise, run the procedure recursively on each of the current node's children.
// I intentionally unfolded this loop, to save several CPU cycles.
y.quad0&&(h[v]=y.quad0,m+=1,v+=1),y.quad1&&(h[v]=y.quad1,m+=1,v+=1),y.quad2&&(h[v]=y.quad2,m+=1,v+=1),y.quad3&&(h[v]=y.quad3,m+=1,v+=1),y.quad4&&(h[v]=y.quad4,m+=1,v+=1),y.quad5&&(h[v]=y.quad5,m+=1,v+=1),y.quad6&&(h[v]=y.quad6,m+=1,v+=1),y.quad7&&(h[v]=y.quad7,m+=1,v+=1)))}e.force.x+=u,e.force.y+=f,e.force.z+=p},options:function(e){return e?("number"==typeof e.gravity&&(a=e.gravity),"number"==typeof e.theta&&(c=e.theta),this):{gravity:a,theta:c}}}};
/**
   * This is Barnes Hut simulation algorithm for 3d case. Implementation
   * is highly optimized (avoids recusion and gc pressure)
   *
   * http://www.cs.princeton.edu/courses/archive/fall03/cs126/assignments/barnes-hut.html
   *
   * NOTE: This module duplicates a lot of code from 2d case. Primary reason for
   * this is performance. Every time I tried to abstract away vector operations
   * I had negative impact on performance. So in this case I'm scarifying code
   * reuse in favor of speed
   */function td(e,t){return 0===t?e.quad0:1===t?e.quad1:2===t?e.quad2:3===t?e.quad3:4===t?e.quad4:5===t?e.quad5:6===t?e.quad6:7===t?e.quad7:null}function nd(e,t,n){0===t?e.quad0=n:1===t?e.quad1=n:2===t?e.quad2=n:3===t?e.quad3=n:4===t?e.quad4=n:5===t?e.quad5=n:6===t?e.quad6=n:7===t&&(e.quad7=n)}var rd=function(e,t){var n=ou.random(42),r={x1:0,y1:0,z1:0,x2:0,y2:0,z2:0};return{box:r,update:function(){var t=e.length;if(0===t)return;// don't have to wory here.
var n=Number.MAX_VALUE,i=Number.MAX_VALUE,a=Number.MAX_VALUE,o=Number.MIN_VALUE,s=Number.MIN_VALUE,c=Number.MIN_VALUE;for(;t--;){
// this is O(n), could it be done faster with quadtree?
// how about pinned nodes?
var l=e[t];l.isPinned?(l.pos.x=l.prevPos.x,l.pos.y=l.prevPos.y,l.pos.z=l.prevPos.z):(l.prevPos.x=l.pos.x,l.prevPos.y=l.pos.y,l.prevPos.z=l.pos.z),l.pos.x<n&&(n=l.pos.x),l.pos.x>o&&(o=l.pos.x),l.pos.y<i&&(i=l.pos.y),l.pos.y>s&&(s=l.pos.y),l.pos.z<a&&(a=l.pos.z),l.pos.z>c&&(c=l.pos.z)}r.x1=n,r.x2=o,r.y1=i,r.y2=s,r.z1=a,r.z2=c},reset:function(){r.x1=r.y1=0,r.x2=r.y2=0,r.z1=r.z2=0},getBestNewPosition:function(e){var i=r,a=0,o=0,s=0;if(e.length){for(var c=0;c<e.length;++c)a+=e[c].pos.x,o+=e[c].pos.y,s+=e[c].pos.z;a/=e.length,o/=e.length,s/=e.length}else a=(i.x1+i.x2)/2,o=(i.y1+i.y2)/2,s=(i.z1+i.z2)/2;var l=t.springLength;return{x:a+n.next(l)-l/2,y:o+n.next(l)-l/2,z:s+n.next(l)-l/2}}}},id=function(e){var t={update:function(t){t.force.x-=e.dragCoeff*t.velocity.x,t.force.y-=e.dragCoeff*t.velocity.y,t.force.z-=e.dragCoeff*t.velocity.z}};
// let easy access to dragCoeff:
return ru(e=au(e,{dragCoeff:.02}),t,["dragCoeff"]),t},ad=function(e){var t=au,n=ou.random(42),r={
/**
       * Upsates forces acting on a spring
       */
update:function(t){var r=t.from,i=t.to,a=t.length<0?e.springLength:t.length,o=i.pos.x-r.pos.x,s=i.pos.y-r.pos.y,c=i.pos.z-r.pos.z,l=Math.sqrt(o*o+s*s+c*c);0===l&&(o=(n.nextDouble()-.5)/50,s=(n.nextDouble()-.5)/50,c=(n.nextDouble()-.5)/50,l=Math.sqrt(o*o+s*s+c*c));var h=l-a,u=(!t.coeff||t.coeff<0?e.springCoeff:t.coeff)*h/l*t.weight;r.force.x+=u*o,r.force.y+=u*s,r.force.z+=u*c,i.force.x-=u*o,i.force.y-=u*s,i.force.z-=u*c}};return ru(e=t(e,{springCoeff:2e-4,springLength:80}),r,["springCoeff","springLength"]),r},od=function(e){return new xu.Body3d(e)},sd=function(e,t){var n,r=0,i=0,a=0,o=e.length;for(n=0;n<o;++n){var s=e[n],c=t*t/s.mass;s.pos.x=2*s.pos.x-s.prevPos.x+s.force.x*c,s.pos.y=2*s.pos.y-s.prevPos.y+s.force.y*c,s.pos.z=2*s.pos.z-s.prevPos.z+s.force.z*c,r+=Math.abs(s.pos.x-s.prevPos.x),i+=Math.abs(s.pos.y-s.prevPos.y),a+=Math.abs(s.pos.z-s.prevPos.z)}return(r*r+i*i+a*a)/e.length}
/**
   * Performs 3d forces integration, using given timestep. Uses Euler method to solve
   * differential equation (http://en.wikipedia.org/wiki/Euler_method ).
   *
   * @returns {Number} squared distance of total position updates.
   */;
/**
   * Represents 3d drag force, which reduces force value on each step by given
   * coefficient.
   *
   * @param {Object} options for the drag force
   * @param {Number=} options.dragCoeff drag force coefficient. 0.1 by default
   */var cd=function(e,t){var n,r=0,i=0,a=0,o=0,s=0,c=0,l=e.length;for(n=0;n<l;++n){var h=e[n],u=t/h.mass;h.velocity.x+=u*h.force.x,h.velocity.y+=u*h.force.y,h.velocity.z+=u*h.force.z;var d=h.velocity.x,f=h.velocity.y,p=h.velocity.z,m=Math.sqrt(d*d+f*f+p*p);m>1&&(h.velocity.x=d/m,h.velocity.y=f/m,h.velocity.z=p/m),r=t*h.velocity.x,a=t*h.velocity.y,s=t*h.velocity.z,h.pos.x+=r,h.pos.y+=a,h.pos.z+=s,i+=Math.abs(r),o+=Math.abs(a),c+=Math.abs(s)}return(i*i+o*o+c*c)/e.length}
/**
   * This module provides all required forces to regular ngraph.physics.simulator
   * to make it 3D simulator. Ideally ngraph.physics.simulator should operate
   * with vectors, but on practices that showed performance decrease... Maybe
   * I was doing it wrong, will see if I can refactor/throw away this module.
   */;var ld=hd;function hd(e,t){return t=au(t,{createQuadTree:ed,createBounds:rd,createDragForce:id,createSpringForce:ad,integrator:ud(t),createBody:od}),hd.get2dLayout(e,t)}function ud(e){return e&&"verlet"===e.integrator?sd:cd}hd.get2dLayout=qu;"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self&&self;function dd(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}function fd(e,t){return e(t={exports:{}},t.exports),t.exports}var pd=fd(function(e,t){"undefined"!=typeof self&&self,e.exports=function(e){var t={};function n(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:r})},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){var r,i,a,o;o=function(e,t,n){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=e.stateInit,n=void 0===t?function(){return{}}:t,r=e.props,s=void 0===r?{}:r,c=e.methods,l=void 0===c?{}:c,h=e.aliases,u=void 0===h?{}:h,d=e.init,f=void 0===d?function(){}:d,p=e.update,m=void 0===p?function(){}:p,g=Object.keys(s).map(function(e){return new o(e,s[e])});return function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=Object.assign({},n instanceof Function?n(e):n,{initialised:!1});function r(t){return o(t,e),s(),r}var o=function(e,n){f.call(r,e,t,n),t.initialised=!0},s=(0,i.default)(function(){t.initialised&&m.call(r,t)},1);return g.forEach(function(e){r[e.name]=function(e){var n=arguments.length>1&&void 0!==arguments[1]&&arguments[1],i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:function(e,t){};return function(a){var o=t[e];return arguments.length?(t[e]=a,i.call(r,a,t,o),n&&s(),r):o}}(e.name,e.triggerUpdate,e.onChange)}),Object.keys(l).forEach(function(e){r[e]=function(){for(var n,i=arguments.length,a=Array(i),o=0;o<i;o++)a[o]=arguments[o];return(n=l[e]).call.apply(n,[r,t].concat(a))}}),Object.entries(u).forEach(function(e){var t=a(e,2),n=t[0],i=t[1];return r[n]=r[i]}),r.resetProps=function(){return g.forEach(function(e){r[e.name](e.defaultVal)}),r},r.resetProps(),t._rerender=s,r}};var r,i=(r=n)&&r.__esModule?r:{default:r},a=function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var n=[],r=!0,i=!1,a=void 0;try{for(var o,s=e[Symbol.iterator]();!(r=(o=s.next()).done)&&(n.push(o.value),!t||n.length!==t);r=!0);}catch(e){i=!0,a=e}finally{try{!r&&s.return&&s.return()}finally{if(i)throw a}}return n}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")},o=function e(t,n){var r=n.default,i=void 0===r?null:r,a=n.triggerUpdate,o=void 0===a||a,s=n.onChange,c=void 0===s?function(e,t){}:s;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.name=t,this.defaultVal=i,this.triggerUpdate=o,this.onChange=c};e.exports=t.default},i=[e,t,n(1)],void 0===(a="function"==typeof(r=o)?r.apply(t,i):r)||(e.exports=a)},function(e,t){e.exports=function(e,t,n){var r,i,a,o,s;function c(){var l=Date.now()-o;l<t&&l>=0?r=setTimeout(c,t-l):(r=null,n||(s=e.apply(a,i),a=i=null))}null==t&&(t=100);var l=function(){a=this,i=arguments,o=Date.now();var l=n&&!r;return r||(r=setTimeout(c,t)),l&&(s=e.apply(a,i),a=i=null),s};return l.clear=function(){r&&(clearTimeout(r),r=null)},l.flush=function(){r&&(s=e.apply(a,i),a=i=null,clearTimeout(r),r=null)},l}}])}),md=dd(pd),gd=(pd.Kapsule,fd(function(e,t){e.exports=function(e){function t(r){if(n[r])return n[r].exports;var i=n[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,t),i.l=!0,i.exports}var n={};return t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:r})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=0)}([function(e,t,n){var r,i,a;i=[e,t],void 0!==(a="function"==typeof(r=function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return e instanceof Function?e:"string"==typeof e?function(t){return t[e]}:function(t){return e}},e.exports=t.default})?r.apply(t,i):r)&&(e.exports=a)}])})),vd=dd(gd);gd.accessorFn;function yd(e){for(var t=e.length/6|0,n=new Array(t),r=0;r<t;)n[r]="#"+e.slice(6*r,6*++r);return n}yd("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf"),yd("7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666"),yd("1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666");var bd=yd("a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928");function xd(e,t,n){e.prototype=t.prototype=n,n.constructor=e}function wd(e,t){var n=Object.create(e.prototype);for(var r in t)n[r]=t[r];return n}function _d(){}yd("fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2"),yd("b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc"),yd("e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999"),yd("66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3"),yd("8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f");var Md="\\s*([+-]?\\d+)\\s*",Ed="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",Sd="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",Td=/^#([0-9a-f]{3})$/,Ad=/^#([0-9a-f]{6})$/,Ld=new RegExp("^rgb\\("+[Md,Md,Md]+"\\)$"),Pd=new RegExp("^rgb\\("+[Sd,Sd,Sd]+"\\)$"),Cd=new RegExp("^rgba\\("+[Md,Md,Md,Ed]+"\\)$"),Rd=new RegExp("^rgba\\("+[Sd,Sd,Sd,Ed]+"\\)$"),Od=new RegExp("^hsl\\("+[Ed,Sd,Sd]+"\\)$"),Nd=new RegExp("^hsla\\("+[Ed,Sd,Sd,Ed]+"\\)$"),Id={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function Dd(e){var t;return e=(e+"").trim().toLowerCase(),(t=Td.exec(e))?new Fd((t=parseInt(t[1],16))>>8&15|t>>4&240,t>>4&15|240&t,(15&t)<<4|15&t,1):(t=Ad.exec(e))?zd(parseInt(t[1],16)):(t=Ld.exec(e))?new Fd(t[1],t[2],t[3],1):(t=Pd.exec(e))?new Fd(255*t[1]/100,255*t[2]/100,255*t[3]/100,1):(t=Cd.exec(e))?kd(t[1],t[2],t[3],t[4]):(t=Rd.exec(e))?kd(255*t[1]/100,255*t[2]/100,255*t[3]/100,t[4]):(t=Od.exec(e))?jd(t[1],t[2]/100,t[3]/100,1):(t=Nd.exec(e))?jd(t[1],t[2]/100,t[3]/100,t[4]):Id.hasOwnProperty(e)?zd(Id[e]):"transparent"===e?new Fd(NaN,NaN,NaN,0):null}function zd(e){return new Fd(e>>16&255,e>>8&255,255&e,1)}function kd(e,t,n,r){return r<=0&&(e=t=n=NaN),new Fd(e,t,n,r)}function Bd(e){return e instanceof _d||(e=Dd(e)),e?new Fd((e=e.rgb()).r,e.g,e.b,e.opacity):new Fd}function Ud(e,t,n,r){return 1===arguments.length?Bd(e):new Fd(e,t,n,null==r?1:r)}function Fd(e,t,n,r){this.r=+e,this.g=+t,this.b=+n,this.opacity=+r}function Gd(e){return((e=Math.max(0,Math.min(255,Math.round(e)||0)))<16?"0":"")+e.toString(16)}function jd(e,t,n,r){return r<=0?e=t=n=NaN:n<=0||n>=1?e=t=NaN:t<=0&&(e=NaN),new Hd(e,t,n,r)}function Hd(e,t,n,r){this.h=+e,this.s=+t,this.l=+n,this.opacity=+r}
/* From FvD 13.37, CSS Color Module Level 3 */
function Vd(e,t,n){return 255*(e<60?t+(n-t)*e/60:e<180?n:e<240?t+(n-t)*(240-e)/60:t)}xd(_d,Dd,{displayable:function(){return this.rgb().displayable()},hex:function(){return this.rgb().hex()},toString:function(){return this.rgb()+""}}),xd(Fd,Ud,wd(_d,{brighter:function(e){return e=null==e?1/.7:Math.pow(1/.7,e),new Fd(this.r*e,this.g*e,this.b*e,this.opacity)},darker:function(e){return e=null==e?.7:Math.pow(.7,e),new Fd(this.r*e,this.g*e,this.b*e,this.opacity)},rgb:function(){return this},displayable:function(){return 0<=this.r&&this.r<=255&&0<=this.g&&this.g<=255&&0<=this.b&&this.b<=255&&0<=this.opacity&&this.opacity<=1},hex:function(){return"#"+Gd(this.r)+Gd(this.g)+Gd(this.b)},toString:function(){var e=this.opacity;return(1===(e=isNaN(e)?1:Math.max(0,Math.min(1,e)))?"rgb(":"rgba(")+Math.max(0,Math.min(255,Math.round(this.r)||0))+", "+Math.max(0,Math.min(255,Math.round(this.g)||0))+", "+Math.max(0,Math.min(255,Math.round(this.b)||0))+(1===e?")":", "+e+")")}})),xd(Hd,function(e,t,n,r){return 1===arguments.length?function(e){if(e instanceof Hd)return new Hd(e.h,e.s,e.l,e.opacity);if(e instanceof _d||(e=Dd(e)),!e)return new Hd;if(e instanceof Hd)return e;var t=(e=e.rgb()).r/255,n=e.g/255,r=e.b/255,i=Math.min(t,n,r),a=Math.max(t,n,r),o=NaN,s=a-i,c=(a+i)/2;return s?(o=t===a?(n-r)/s+6*(n<r):n===a?(r-t)/s+2:(t-n)/s+4,s/=c<.5?a+i:2-a-i,o*=60):s=c>0&&c<1?0:o,new Hd(o,s,c,e.opacity)}(e):new Hd(e,t,n,null==r?1:r)},wd(_d,{brighter:function(e){return e=null==e?1/.7:Math.pow(1/.7,e),new Hd(this.h,this.s,this.l*e,this.opacity)},darker:function(e){return e=null==e?.7:Math.pow(.7,e),new Hd(this.h,this.s,this.l*e,this.opacity)},rgb:function(){var e=this.h%360+360*(this.h<0),t=isNaN(e)||isNaN(this.s)?0:this.s,n=this.l,r=n+(n<.5?n:1-n)*t,i=2*n-r;return new Fd(Vd(e>=240?e-240:e+120,i,r),Vd(e,i,r),Vd(e<120?e+240:e-120,i,r),this.opacity)},displayable:function(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1}}));var Wd=Math.PI/180,qd=180/Math.PI,Xd=.96422,Yd=1,Zd=.82521,Jd=4/29,Qd=6/29,Kd=3*Qd*Qd,$d=Qd*Qd*Qd;function ef(e){if(e instanceof tf)return new tf(e.l,e.a,e.b,e.opacity);if(e instanceof sf){if(isNaN(e.h))return new tf(e.l,0,0,e.opacity);var t=e.h*Wd;return new tf(e.l,Math.cos(t)*e.c,Math.sin(t)*e.c,e.opacity)}e instanceof Fd||(e=Bd(e));var n,r,i=of(e.r),a=of(e.g),o=of(e.b),s=nf((.2225045*i+.7168786*a+.0606169*o)/Yd);return i===a&&a===o?n=r=s:(n=nf((.4360747*i+.3850649*a+.1430804*o)/Xd),r=nf((.0139322*i+.0971045*a+.7141733*o)/Zd)),new tf(116*s-16,500*(n-s),200*(s-r),e.opacity)}function tf(e,t,n,r){this.l=+e,this.a=+t,this.b=+n,this.opacity=+r}function nf(e){return e>$d?Math.pow(e,1/3):e/Kd+Jd}function rf(e){return e>Qd?e*e*e:Kd*(e-Jd)}function af(e){return 255*(e<=.0031308?12.92*e:1.055*Math.pow(e,1/2.4)-.055)}function of(e){return(e/=255)<=.04045?e/12.92:Math.pow((e+.055)/1.055,2.4)}function sf(e,t,n,r){this.h=+e,this.c=+t,this.l=+n,this.opacity=+r}xd(tf,function(e,t,n,r){return 1===arguments.length?ef(e):new tf(e,t,n,null==r?1:r)},wd(_d,{brighter:function(e){return new tf(this.l+18*(null==e?1:e),this.a,this.b,this.opacity)},darker:function(e){return new tf(this.l-18*(null==e?1:e),this.a,this.b,this.opacity)},rgb:function(){var e=(this.l+16)/116,t=isNaN(this.a)?e:e+this.a/500,n=isNaN(this.b)?e:e-this.b/200;return new Fd(af(3.1338561*(t=Xd*rf(t))-1.6168667*(e=Yd*rf(e))-.4906146*(n=Zd*rf(n))),af(-.9787684*t+1.9161415*e+.033454*n),af(.0719453*t-.2289914*e+1.4052427*n),this.opacity)}})),xd(sf,function(e,t,n,r){return 1===arguments.length?function(e){if(e instanceof sf)return new sf(e.h,e.c,e.l,e.opacity);if(e instanceof tf||(e=ef(e)),0===e.a&&0===e.b)return new sf(NaN,0,e.l,e.opacity);var t=Math.atan2(e.b,e.a)*qd;return new sf(t<0?t+360:t,Math.sqrt(e.a*e.a+e.b*e.b),e.l,e.opacity)}(e):new sf(e,t,n,null==r?1:r)},wd(_d,{brighter:function(e){return new sf(this.h,this.c,this.l+18*(null==e?1:e),this.opacity)},darker:function(e){return new sf(this.h,this.c,this.l-18*(null==e?1:e),this.opacity)},rgb:function(){return ef(this).rgb()}}));var cf=-.14861,lf=1.78277,hf=-.29227,uf=-.90649,df=1.97294,ff=df*uf,pf=df*lf,mf=lf*hf-uf*cf;function gf(e,t,n,r){return 1===arguments.length?function(e){if(e instanceof vf)return new vf(e.h,e.s,e.l,e.opacity);e instanceof Fd||(e=Bd(e));var t=e.r/255,n=e.g/255,r=e.b/255,i=(mf*r+ff*t-pf*n)/(mf+ff-pf),a=r-i,o=(df*(n-i)-hf*a)/uf,s=Math.sqrt(o*o+a*a)/(df*i*(1-i)),// NaN if l=0 or l=1
c=s?Math.atan2(o,a)*qd-120:NaN;return new vf(c<0?c+360:c,s,i,e.opacity)}(e):new vf(e,t,n,null==r?1:r)}function vf(e,t,n,r){this.h=+e,this.s=+t,this.l=+n,this.opacity=+r}function yf(e){return function(){return e}}function bf(e,t){return function(n){return e+n*t}}function xf(e,t){var n=t-e;return n?bf(e,n):yf(isNaN(e)?t:e)}xd(vf,gf,wd(_d,{brighter:function(e){return e=null==e?1/.7:Math.pow(1/.7,e),new vf(this.h,this.s,this.l*e,this.opacity)},darker:function(e){return e=null==e?.7:Math.pow(.7,e),new vf(this.h,this.s,this.l*e,this.opacity)},rgb:function(){var e=isNaN(this.h)?0:(this.h+120)*Wd,t=+this.l,n=isNaN(this.s)?0:this.s*t*(1-t),r=Math.cos(e),i=Math.sin(e);return new Fd(255*(t+n*(cf*r+lf*i)),255*(t+n*(hf*r+uf*i)),255*(t+n*(df*r)),this.opacity)}}));var wf,_f=(wf=function(e){var t=e.length-1;return function(n){var r=n<=0?n=0:n>=1?(n=1,t-1):Math.floor(n*t),i=e[r],a=e[r+1],o=r>0?e[r-1]:2*i-a,s=r<t-1?e[r+2]:2*a-i;return function(e,t,n,r,i){var a=e*e,o=a*e;return((1-3*e+3*a-o)*t+(4-6*a+3*o)*n+(1+3*e+3*a-3*o)*r+o*i)/6}((n-r/t)*t,o,i,a,s)}},function(e){var t,n,r=e.length,i=new Array(r),a=new Array(r),o=new Array(r);for(t=0;t<r;++t)n=Ud(e[t]),i[t]=n.r||0,a[t]=n.g||0,o[t]=n.b||0;return i=wf(i),a=wf(a),o=wf(o),n.opacity=1,function(e){return n.r=i(e),n.g=a(e),n.b=o(e),n+""}});Math.PI,Math.SQRT2;function Mf(e){return function t(n){function r(t,r){var i=e((t=gf(t)).h,(r=gf(r)).h),a=xf(t.s,r.s),o=xf(t.l,r.l),s=xf(t.opacity,r.opacity);return function(e){return t.h=i(e),t.s=a(e),t.l=o(Math.pow(e,n)),t.opacity=s(e),t+""}}return n=+n,r.gamma=t,r}(1)}Mf(function(e,t){var n=t-e;return n?bf(e,n>180||n<-180?n-360*Math.round(n/360):n):yf(isNaN(e)?t:e)});var Ef=Mf(xf);function Sf(e){return _f(e[e.length-1])}Sf(new Array(3).concat("d8b365f5f5f55ab4ac","a6611adfc27d80cdc1018571","a6611adfc27df5f5f580cdc1018571","8c510ad8b365f6e8c3c7eae55ab4ac01665e","8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e","8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e","8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e","5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30","5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30").map(yd)),Sf(new Array(3).concat("af8dc3f7f7f77fbf7b","7b3294c2a5cfa6dba0008837","7b3294c2a5cff7f7f7a6dba0008837","762a83af8dc3e7d4e8d9f0d37fbf7b1b7837","762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837","762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837","762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837","40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b","40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b").map(yd)),Sf(new Array(3).concat("e9a3c9f7f7f7a1d76a","d01c8bf1b6dab8e1864dac26","d01c8bf1b6daf7f7f7b8e1864dac26","c51b7de9a3c9fde0efe6f5d0a1d76a4d9221","c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221","c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221","c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221","8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419","8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419").map(yd)),Sf(new Array(3).concat("998ec3f7f7f7f1a340","5e3c99b2abd2fdb863e66101","5e3c99b2abd2f7f7f7fdb863e66101","542788998ec3d8daebfee0b6f1a340b35806","542788998ec3d8daebf7f7f7fee0b6f1a340b35806","5427888073acb2abd2d8daebfee0b6fdb863e08214b35806","5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806","2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08","2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08").map(yd)),Sf(new Array(3).concat("ef8a62f7f7f767a9cf","ca0020f4a58292c5de0571b0","ca0020f4a582f7f7f792c5de0571b0","b2182bef8a62fddbc7d1e5f067a9cf2166ac","b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac","b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac","b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac","67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061","67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061").map(yd)),Sf(new Array(3).concat("ef8a62ffffff999999","ca0020f4a582bababa404040","ca0020f4a582ffffffbababa404040","b2182bef8a62fddbc7e0e0e09999994d4d4d","b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d","b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d","b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d","67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a","67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a").map(yd)),Sf(new Array(3).concat("fc8d59ffffbf91bfdb","d7191cfdae61abd9e92c7bb6","d7191cfdae61ffffbfabd9e92c7bb6","d73027fc8d59fee090e0f3f891bfdb4575b4","d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4","d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4","d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4","a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695","a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695").map(yd)),Sf(new Array(3).concat("fc8d59ffffbf91cf60","d7191cfdae61a6d96a1a9641","d7191cfdae61ffffbfa6d96a1a9641","d73027fc8d59fee08bd9ef8b91cf601a9850","d73027fc8d59fee08bffffbfd9ef8b91cf601a9850","d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850","d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850","a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837","a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837").map(yd)),Sf(new Array(3).concat("fc8d59ffffbf99d594","d7191cfdae61abdda42b83ba","d7191cfdae61ffffbfabdda42b83ba","d53e4ffc8d59fee08be6f59899d5943288bd","d53e4ffc8d59fee08bffffbfe6f59899d5943288bd","d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd","d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd","9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2","9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2").map(yd)),Sf(new Array(3).concat("e5f5f999d8c92ca25f","edf8fbb2e2e266c2a4238b45","edf8fbb2e2e266c2a42ca25f006d2c","edf8fbccece699d8c966c2a42ca25f006d2c","edf8fbccece699d8c966c2a441ae76238b45005824","f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824","f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b").map(yd)),Sf(new Array(3).concat("e0ecf49ebcda8856a7","edf8fbb3cde38c96c688419d","edf8fbb3cde38c96c68856a7810f7c","edf8fbbfd3e69ebcda8c96c68856a7810f7c","edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b","f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b","f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b").map(yd)),Sf(new Array(3).concat("e0f3dba8ddb543a2ca","f0f9e8bae4bc7bccc42b8cbe","f0f9e8bae4bc7bccc443a2ca0868ac","f0f9e8ccebc5a8ddb57bccc443a2ca0868ac","f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e","f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e","f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081").map(yd)),Sf(new Array(3).concat("fee8c8fdbb84e34a33","fef0d9fdcc8afc8d59d7301f","fef0d9fdcc8afc8d59e34a33b30000","fef0d9fdd49efdbb84fc8d59e34a33b30000","fef0d9fdd49efdbb84fc8d59ef6548d7301f990000","fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000","fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000").map(yd)),Sf(new Array(3).concat("ece2f0a6bddb1c9099","f6eff7bdc9e167a9cf02818a","f6eff7bdc9e167a9cf1c9099016c59","f6eff7d0d1e6a6bddb67a9cf1c9099016c59","f6eff7d0d1e6a6bddb67a9cf3690c002818a016450","fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450","fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636").map(yd)),Sf(new Array(3).concat("ece7f2a6bddb2b8cbe","f1eef6bdc9e174a9cf0570b0","f1eef6bdc9e174a9cf2b8cbe045a8d","f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d","f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b","fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b","fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858").map(yd)),Sf(new Array(3).concat("e7e1efc994c7dd1c77","f1eef6d7b5d8df65b0ce1256","f1eef6d7b5d8df65b0dd1c77980043","f1eef6d4b9dac994c7df65b0dd1c77980043","f1eef6d4b9dac994c7df65b0e7298ace125691003f","f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f","f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f").map(yd)),Sf(new Array(3).concat("fde0ddfa9fb5c51b8a","feebe2fbb4b9f768a1ae017e","feebe2fbb4b9f768a1c51b8a7a0177","feebe2fcc5c0fa9fb5f768a1c51b8a7a0177","feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177","fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177","fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a").map(yd)),Sf(new Array(3).concat("edf8b17fcdbb2c7fb8","ffffcca1dab441b6c4225ea8","ffffcca1dab441b6c42c7fb8253494","ffffccc7e9b47fcdbb41b6c42c7fb8253494","ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84","ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84","ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58").map(yd)),Sf(new Array(3).concat("f7fcb9addd8e31a354","ffffccc2e69978c679238443","ffffccc2e69978c67931a354006837","ffffccd9f0a3addd8e78c67931a354006837","ffffccd9f0a3addd8e78c67941ab5d238443005a32","ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32","ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529").map(yd)),Sf(new Array(3).concat("fff7bcfec44fd95f0e","ffffd4fed98efe9929cc4c02","ffffd4fed98efe9929d95f0e993404","ffffd4fee391fec44ffe9929d95f0e993404","ffffd4fee391fec44ffe9929ec7014cc4c028c2d04","ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04","ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506").map(yd)),Sf(new Array(3).concat("ffeda0feb24cf03b20","ffffb2fecc5cfd8d3ce31a1c","ffffb2fecc5cfd8d3cf03b20bd0026","ffffb2fed976feb24cfd8d3cf03b20bd0026","ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026","ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026","ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026").map(yd)),Sf(new Array(3).concat("deebf79ecae13182bd","eff3ffbdd7e76baed62171b5","eff3ffbdd7e76baed63182bd08519c","eff3ffc6dbef9ecae16baed63182bd08519c","eff3ffc6dbef9ecae16baed64292c62171b5084594","f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594","f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b").map(yd)),Sf(new Array(3).concat("e5f5e0a1d99b31a354","edf8e9bae4b374c476238b45","edf8e9bae4b374c47631a354006d2c","edf8e9c7e9c0a1d99b74c47631a354006d2c","edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32","f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32","f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b").map(yd)),Sf(new Array(3).concat("f0f0f0bdbdbd636363","f7f7f7cccccc969696525252","f7f7f7cccccc969696636363252525","f7f7f7d9d9d9bdbdbd969696636363252525","f7f7f7d9d9d9bdbdbd969696737373525252252525","fffffff0f0f0d9d9d9bdbdbd969696737373525252252525","fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000").map(yd)),Sf(new Array(3).concat("efedf5bcbddc756bb1","f2f0f7cbc9e29e9ac86a51a3","f2f0f7cbc9e29e9ac8756bb154278f","f2f0f7dadaebbcbddc9e9ac8756bb154278f","f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486","fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486","fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d").map(yd)),Sf(new Array(3).concat("fee0d2fc9272de2d26","fee5d9fcae91fb6a4acb181d","fee5d9fcae91fb6a4ade2d26a50f15","fee5d9fcbba1fc9272fb6a4ade2d26a50f15","fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d","fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d","fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d").map(yd)),Sf(new Array(3).concat("fee6cefdae6be6550d","feeddefdbe85fd8d3cd94701","feeddefdbe85fd8d3ce6550da63603","feeddefdd0a2fdae6bfd8d3ce6550da63603","feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04","fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04","fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704").map(yd)),Ef(gf(300,.5,0),gf(-240,.5,1));Ef(gf(-100,.75,.35),gf(80,1.5,.8)),Ef(gf(260,.75,.35),gf(80,1.5,.8)),gf(),Ud(),Math.PI,Math.PI;function Tf(e){var t=e.length;return function(n){return e[Math.max(0,Math.min(t-1,Math.floor(n*t)))]}}Tf(yd("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725"));Tf(yd("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf")),Tf(yd("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4")),Tf(yd("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921"));var Af=fd(function(e){
// TinyColor v1.4.1
// https://github.com/bgrins/TinyColor
// Brian Grinstead, MIT License
!function(t){var n=/^\s+/,r=/\s+$/,i=0,a=t.round,o=t.min,s=t.max,c=t.random;function l(e,c){
// If input is already a tinycolor, return itself
if(c=c||{},(e=e||"")instanceof l)return e;
// If we are called as a function, call using new instead
if(!(this instanceof l))return new l(e,c);var h=
// Given a string or object, convert that input to RGB
// Possible string inputs:
//
//     "red"
//     "#f00" or "f00"
//     "#ff0000" or "ff0000"
//     "#ff000000" or "ff000000"
//     "rgb 255 0 0" or "rgb (255, 0, 0)"
//     "rgb 1.0 0 0" or "rgb (1, 0, 0)"
//     "rgba (255, 0, 0, 1)" or "rgba 255, 0, 0, 1"
//     "rgba (1.0, 0, 0, 1)" or "rgba 1.0, 0, 0, 1"
//     "hsl(0, 100%, 50%)" or "hsl 0 100% 50%"
//     "hsla(0, 100%, 50%, 1)" or "hsla 0 100% 50%, 1"
//     "hsv(0, 100%, 100%)" or "hsv 0 100% 100%"
//
function(e){var i={r:0,g:0,b:0},a=1,c=null,l=null,h=null,u=!1,d=!1;"string"==typeof e&&(e=
// `stringInputToObject`
// Permissive string parsing.  Take in a number of formats, and output an object
// based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`
function(e){e=e.replace(n,"").replace(r,"").toLowerCase();var t,i=!1;if(A[e])e=A[e],i=!0;else if("transparent"==e)return{r:0,g:0,b:0,a:0,format:"name"};
// Try to match string input using regular expressions.
// Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]
// Just return an object and let the conversion functions handle that.
// This way the result will be the same whether the tinycolor is initialized with string or object.
if(t=F.rgb.exec(e))return{r:t[1],g:t[2],b:t[3]};if(t=F.rgba.exec(e))return{r:t[1],g:t[2],b:t[3],a:t[4]};if(t=F.hsl.exec(e))return{h:t[1],s:t[2],l:t[3]};if(t=F.hsla.exec(e))return{h:t[1],s:t[2],l:t[3],a:t[4]};if(t=F.hsv.exec(e))return{h:t[1],s:t[2],v:t[3]};if(t=F.hsva.exec(e))return{h:t[1],s:t[2],v:t[3],a:t[4]};if(t=F.hex8.exec(e))return{r:O(t[1]),g:O(t[2]),b:O(t[3]),a:z(t[4]),format:i?"name":"hex8"};if(t=F.hex6.exec(e))return{r:O(t[1]),g:O(t[2]),b:O(t[3]),format:i?"name":"hex"};if(t=F.hex4.exec(e))return{r:O(t[1]+""+t[1]),g:O(t[2]+""+t[2]),b:O(t[3]+""+t[3]),a:z(t[4]+""+t[4]),format:i?"name":"hex8"};if(t=F.hex3.exec(e))return{r:O(t[1]+""+t[1]),g:O(t[2]+""+t[2]),b:O(t[3]+""+t[3]),format:i?"name":"hex"};return!1}(e));"object"==typeof e&&(G(e.r)&&G(e.g)&&G(e.b)?(f=e.r,p=e.g,m=e.b,i={r:255*C(f,255),g:255*C(p,255),b:255*C(m,255)},u=!0,d="%"===String(e.r).substr(-1)?"prgb":"rgb"):G(e.h)&&G(e.s)&&G(e.v)?(c=I(e.s),l=I(e.v),i=
// `hsvToRgb`
// Converts an HSV color value to RGB.
// *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]
// *Returns:* { r, g, b } in the set [0, 255]
function(e,n,r){e=6*C(e,360),n=C(n,100),r=C(r,100);var i=t.floor(e),a=e-i,o=r*(1-n),s=r*(1-a*n),c=r*(1-(1-a)*n),l=i%6;return{r:255*[r,s,o,o,c,r][l],g:255*[c,r,r,s,o,o][l],b:255*[o,o,c,r,r,s][l]}}
// `rgbToHex`
// Converts an RGB color to hex
// Assumes r, g, and b are contained in the set [0, 255]
// Returns a 3 or 6 character hex
(e.h,c,l),u=!0,d="hsv"):G(e.h)&&G(e.s)&&G(e.l)&&(c=I(e.s),h=I(e.l),i=
// `hslToRgb`
// Converts an HSL color value to RGB.
// *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]
// *Returns:* { r, g, b } in the set [0, 255]
function(e,t,n){var r,i,a;function o(e,t,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+6*(t-e)*n:n<.5?t:n<2/3?e+(t-e)*(2/3-n)*6:e}if(e=C(e,360),t=C(t,100),n=C(n,100),0===t)r=i=a=n;// achromatic
else{var s=n<.5?n*(1+t):n+t-n*t,c=2*n-s;r=o(c,s,e+1/3),i=o(c,s,e),a=o(c,s,e-1/3)}return{r:255*r,g:255*i,b:255*a}}
// `rgbToHsv`
// Converts an RGB color value to HSV
// *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]
// *Returns:* { h, s, v } in [0,1]
(e.h,c,h),u=!0,d="hsl"),e.hasOwnProperty("a")&&(a=e.a));
// Conversion Functions
// --------------------
// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:
// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>
// `rgbToRgb`
// Handle bounds / percentage checking to conform to CSS color spec
// <http://www.w3.org/TR/css3-color/>
// *Assumes:* r, g, b in [0, 255] or [0, 1]
// *Returns:* { r, g, b } in [0, 255]
var f,p,m;
// `rgbToHsl`
// Converts an RGB color value to HSL.
// *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]
// *Returns:* { h, s, l } in [0,1]
return a=P(a),{ok:u,format:e.format||d,r:o(255,s(i.r,0)),g:o(255,s(i.g,0)),b:o(255,s(i.b,0)),a:a}}(e);this._originalInput=e,this._r=h.r,this._g=h.g,this._b=h.b,this._a=h.a,this._roundA=a(100*this._a)/100,this._format=c.format||h.format,this._gradientType=c.gradientType,
// Don't let the range of [0,255] come back in [0,1].
// Potentially lose a little bit of precision here, but will fix issues where
// .5 gets interpreted as half of the total, instead of half of 1
// If it was supposed to be 128, this was already taken care of by `inputToRgb`
this._r<1&&(this._r=a(this._r)),this._g<1&&(this._g=a(this._g)),this._b<1&&(this._b=a(this._b)),this._ok=h.ok,this._tc_id=i++}function h(e,t,n){e=C(e,255),t=C(t,255),n=C(n,255);var r,i,a=s(e,t,n),c=o(e,t,n),l=(a+c)/2;if(a==c)r=i=0;// achromatic
else{var h=a-c;switch(i=l>.5?h/(2-a-c):h/(a+c),a){case e:r=(t-n)/h+(t<n?6:0);break;case t:r=(n-e)/h+2;break;case n:r=(e-t)/h+4}r/=6}return{h:r,s:i,l:l}}function u(e,t,n){e=C(e,255),t=C(t,255),n=C(n,255);var r,i,a=s(e,t,n),c=o(e,t,n),l=a,h=a-c;if(i=0===a?0:h/a,a==c)r=0;// achromatic
else{switch(a){case e:r=(t-n)/h+(t<n?6:0);break;case t:r=(n-e)/h+2;break;case n:r=(e-t)/h+4}r/=6}return{h:r,s:i,v:l}}function d(e,t,n,r){var i=[N(a(e).toString(16)),N(a(t).toString(16)),N(a(n).toString(16))];
// Return a 3 character hex if possible
return r&&i[0].charAt(0)==i[0].charAt(1)&&i[1].charAt(0)==i[1].charAt(1)&&i[2].charAt(0)==i[2].charAt(1)?i[0].charAt(0)+i[1].charAt(0)+i[2].charAt(0):i.join("")}
// `rgbaToHex`
// Converts an RGBA color plus alpha transparency to hex
// Assumes r, g, b are contained in the set [0, 255] and
// a in [0, 1]. Returns a 4 or 8 character rgba hex
// `rgbaToArgbHex`
// Converts an RGBA color to an ARGB Hex8 string
// Rarely used, but required for "toFilter()"
function f(e,t,n,r){return[N(D(r)),N(a(e).toString(16)),N(a(t).toString(16)),N(a(n).toString(16))].join("")}
// `equals`
// Can be called with any tinycolor input
// Modification Functions
// ----------------------
// Thanks to less.js for some of the basics here
// <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>
function p(e,t){t=0===t?0:t||10;var n=l(e).toHsl();return n.s-=t/100,n.s=R(n.s),l(n)}function m(e,t){t=0===t?0:t||10;var n=l(e).toHsl();return n.s+=t/100,n.s=R(n.s),l(n)}function g(e){return l(e).desaturate(100)}function v(e,t){t=0===t?0:t||10;var n=l(e).toHsl();return n.l+=t/100,n.l=R(n.l),l(n)}function y(e,t){t=0===t?0:t||10;var n=l(e).toRgb();return n.r=s(0,o(255,n.r-a(-t/100*255))),n.g=s(0,o(255,n.g-a(-t/100*255))),n.b=s(0,o(255,n.b-a(-t/100*255))),l(n)}function b(e,t){t=0===t?0:t||10;var n=l(e).toHsl();return n.l-=t/100,n.l=R(n.l),l(n)}
// Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.
// Values outside of this range will be wrapped into this range.
function x(e,t){var n=l(e).toHsl(),r=(n.h+t)%360;return n.h=r<0?360+r:r,l(n)}
// Combination Functions
// ---------------------
// Thanks to jQuery xColor for some of the ideas behind these
// <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>
function w(e){var t=l(e).toHsl();return t.h=(t.h+180)%360,l(t)}function _(e){var t=l(e).toHsl(),n=t.h;return[l(e),l({h:(n+120)%360,s:t.s,l:t.l}),l({h:(n+240)%360,s:t.s,l:t.l})]}function M(e){var t=l(e).toHsl(),n=t.h;return[l(e),l({h:(n+90)%360,s:t.s,l:t.l}),l({h:(n+180)%360,s:t.s,l:t.l}),l({h:(n+270)%360,s:t.s,l:t.l})]}function E(e){var t=l(e).toHsl(),n=t.h;return[l(e),l({h:(n+72)%360,s:t.s,l:t.l}),l({h:(n+216)%360,s:t.s,l:t.l})]}function S(e,t,n){t=t||6,n=n||30;var r=l(e).toHsl(),i=360/n,a=[l(e)];for(r.h=(r.h-(i*t>>1)+720)%360;--t;)r.h=(r.h+i)%360,a.push(l(r));return a}function T(e,t){t=t||6;for(var n=l(e).toHsv(),r=n.h,i=n.s,a=n.v,o=[],s=1/t;t--;)o.push(l({h:r,s:i,v:a})),a=(a+s)%1;return o}
// Utility Functions
// ---------------------
l.prototype={isDark:function(){return this.getBrightness()<128},isLight:function(){return!this.isDark()},isValid:function(){return this._ok},getOriginalInput:function(){return this._originalInput},getFormat:function(){return this._format},getAlpha:function(){return this._a},getBrightness:function(){
//http://www.w3.org/TR/AERT#color-contrast
var e=this.toRgb();return(299*e.r+587*e.g+114*e.b)/1e3},getLuminance:function(){
//http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef
var e,n,r,i=this.toRgb();return e=i.r/255,n=i.g/255,r=i.b/255,.2126*(e<=.03928?e/12.92:t.pow((e+.055)/1.055,2.4))+.7152*(n<=.03928?n/12.92:t.pow((n+.055)/1.055,2.4))+.0722*(r<=.03928?r/12.92:t.pow((r+.055)/1.055,2.4))},setAlpha:function(e){return this._a=P(e),this._roundA=a(100*this._a)/100,this},toHsv:function(){var e=u(this._r,this._g,this._b);return{h:360*e.h,s:e.s,v:e.v,a:this._a}},toHsvString:function(){var e=u(this._r,this._g,this._b),t=a(360*e.h),n=a(100*e.s),r=a(100*e.v);return 1==this._a?"hsv("+t+", "+n+"%, "+r+"%)":"hsva("+t+", "+n+"%, "+r+"%, "+this._roundA+")"},toHsl:function(){var e=h(this._r,this._g,this._b);return{h:360*e.h,s:e.s,l:e.l,a:this._a}},toHslString:function(){var e=h(this._r,this._g,this._b),t=a(360*e.h),n=a(100*e.s),r=a(100*e.l);return 1==this._a?"hsl("+t+", "+n+"%, "+r+"%)":"hsla("+t+", "+n+"%, "+r+"%, "+this._roundA+")"},toHex:function(e){return d(this._r,this._g,this._b,e)},toHexString:function(e){return"#"+this.toHex(e)},toHex8:function(e){return function(e,t,n,r,i){var o=[N(a(e).toString(16)),N(a(t).toString(16)),N(a(n).toString(16)),N(D(r))];
// Return a 4 character hex if possible
if(i&&o[0].charAt(0)==o[0].charAt(1)&&o[1].charAt(0)==o[1].charAt(1)&&o[2].charAt(0)==o[2].charAt(1)&&o[3].charAt(0)==o[3].charAt(1))return o[0].charAt(0)+o[1].charAt(0)+o[2].charAt(0)+o[3].charAt(0);return o.join("")}(this._r,this._g,this._b,this._a,e)},toHex8String:function(e){return"#"+this.toHex8(e)},toRgb:function(){return{r:a(this._r),g:a(this._g),b:a(this._b),a:this._a}},toRgbString:function(){return 1==this._a?"rgb("+a(this._r)+", "+a(this._g)+", "+a(this._b)+")":"rgba("+a(this._r)+", "+a(this._g)+", "+a(this._b)+", "+this._roundA+")"},toPercentageRgb:function(){return{r:a(100*C(this._r,255))+"%",g:a(100*C(this._g,255))+"%",b:a(100*C(this._b,255))+"%",a:this._a}},toPercentageRgbString:function(){return 1==this._a?"rgb("+a(100*C(this._r,255))+"%, "+a(100*C(this._g,255))+"%, "+a(100*C(this._b,255))+"%)":"rgba("+a(100*C(this._r,255))+"%, "+a(100*C(this._g,255))+"%, "+a(100*C(this._b,255))+"%, "+this._roundA+")"},toName:function(){return 0===this._a?"transparent":!(this._a<1)&&(L[d(this._r,this._g,this._b,!0)]||!1)},toFilter:function(e){var t="#"+f(this._r,this._g,this._b,this._a),n=t,r=this._gradientType?"GradientType = 1, ":"";if(e){var i=l(e);n="#"+f(i._r,i._g,i._b,i._a)}return"progid:DXImageTransform.Microsoft.gradient("+r+"startColorstr="+t+",endColorstr="+n+")"},toString:function(e){var t=!!e;e=e||this._format;var n=!1,r=this._a<1&&this._a>=0;return t||!r||"hex"!==e&&"hex6"!==e&&"hex3"!==e&&"hex4"!==e&&"hex8"!==e&&"name"!==e?("rgb"===e&&(n=this.toRgbString()),"prgb"===e&&(n=this.toPercentageRgbString()),"hex"!==e&&"hex6"!==e||(n=this.toHexString()),"hex3"===e&&(n=this.toHexString(!0)),"hex4"===e&&(n=this.toHex8String(!0)),"hex8"===e&&(n=this.toHex8String()),"name"===e&&(n=this.toName()),"hsl"===e&&(n=this.toHslString()),"hsv"===e&&(n=this.toHsvString()),n||this.toHexString()):
// Special case for "transparent", all other non-alpha formats
// will return rgba when there is transparency.
"name"===e&&0===this._a?this.toName():this.toRgbString()},clone:function(){return l(this.toString())},_applyModification:function(e,t){var n=e.apply(null,[this].concat([].slice.call(t)));return this._r=n._r,this._g=n._g,this._b=n._b,this.setAlpha(n._a),this},lighten:function(){return this._applyModification(v,arguments)},brighten:function(){return this._applyModification(y,arguments)},darken:function(){return this._applyModification(b,arguments)},desaturate:function(){return this._applyModification(p,arguments)},saturate:function(){return this._applyModification(m,arguments)},greyscale:function(){return this._applyModification(g,arguments)},spin:function(){return this._applyModification(x,arguments)},_applyCombination:function(e,t){return e.apply(null,[this].concat([].slice.call(t)))},analogous:function(){return this._applyCombination(S,arguments)},complement:function(){return this._applyCombination(w,arguments)},monochromatic:function(){return this._applyCombination(T,arguments)},splitcomplement:function(){return this._applyCombination(E,arguments)},triad:function(){return this._applyCombination(_,arguments)},tetrad:function(){return this._applyCombination(M,arguments)}},
// If input is an object, force 1 into "1.0" to handle ratios properly
// String input requires "1.0" as input, so 1 will be treated as 1
l.fromRatio=function(e,t){if("object"==typeof e){var n={};for(var r in e)e.hasOwnProperty(r)&&(n[r]="a"===r?e[r]:I(e[r]));e=n}return l(e,t)},l.equals=function(e,t){return!(!e||!t)&&l(e).toRgbString()==l(t).toRgbString()},l.random=function(){return l.fromRatio({r:c(),g:c(),b:c()})},l.mix=function(e,t,n){n=0===n?0:n||50;var r=l(e).toRgb(),i=l(t).toRgb(),a=n/100;return l({r:(i.r-r.r)*a+r.r,g:(i.g-r.g)*a+r.g,b:(i.b-r.b)*a+r.b,a:(i.a-r.a)*a+r.a})},
// Readability Functions
// ---------------------
// <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)
// `contrast`
// Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)
l.readability=function(e,n){var r=l(e),i=l(n);return(t.max(r.getLuminance(),i.getLuminance())+.05)/(t.min(r.getLuminance(),i.getLuminance())+.05)},
// `isReadable`
// Ensure that foreground and background color combinations meet WCAG2 guidelines.
// The third argument is an optional Object.
//      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';
//      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.
// If the entire object is absent, isReadable defaults to {level:"AA",size:"small"}.
// *Example*
//    tinycolor.isReadable("#000", "#111") => false
//    tinycolor.isReadable("#000", "#111",{level:"AA",size:"large"}) => false
l.isReadable=function(e,t,n){var r,i,a=l.readability(e,t);switch(i=!1,(r=function(e){
// return valid WCAG2 parms for isReadable.
// If input parms are invalid, return {"level":"AA", "size":"small"}
var t,n;t=((e=e||{level:"AA",size:"small"}).level||"AA").toUpperCase(),n=(e.size||"small").toLowerCase(),"AA"!==t&&"AAA"!==t&&(t="AA");"small"!==n&&"large"!==n&&(n="small");return{level:t,size:n}}
// Node: Export function
(n)).level+r.size){case"AAsmall":case"AAAlarge":i=a>=4.5;break;case"AAlarge":i=a>=3;break;case"AAAsmall":i=a>=7}return i},
// `mostReadable`
// Given a base color and a list of possible foreground or background
// colors for that base, returns the most readable color.
// Optionally returns Black or White if the most readable color is unreadable.
// *Example*
//    tinycolor.mostReadable(tinycolor.mostReadable("#123", ["#124", "#125"],{includeFallbackColors:false}).toHexString(); // "#112255"
//    tinycolor.mostReadable(tinycolor.mostReadable("#123", ["#124", "#125"],{includeFallbackColors:true}).toHexString();  // "#ffffff"
//    tinycolor.mostReadable("#a8015a", ["#faf3f3"],{includeFallbackColors:true,level:"AAA",size:"large"}).toHexString(); // "#faf3f3"
//    tinycolor.mostReadable("#a8015a", ["#faf3f3"],{includeFallbackColors:true,level:"AAA",size:"small"}).toHexString(); // "#ffffff"
l.mostReadable=function(e,t,n){var r,i,a,o,s=null,c=0;i=(n=n||{}).includeFallbackColors,a=n.level,o=n.size;for(var h=0;h<t.length;h++)(r=l.readability(e,t[h]))>c&&(c=r,s=l(t[h]));return l.isReadable(e,s,{level:a,size:o})||!i?s:(n.includeFallbackColors=!1,l.mostReadable(e,["#fff","#000"],n))};
// Big List of Colors
// ------------------
// <http://www.w3.org/TR/css3-color/#svg-color>
var A=l.names={aliceblue:"f0f8ff",antiquewhite:"faebd7",aqua:"0ff",aquamarine:"7fffd4",azure:"f0ffff",beige:"f5f5dc",bisque:"ffe4c4",black:"000",blanchedalmond:"ffebcd",blue:"00f",blueviolet:"8a2be2",brown:"a52a2a",burlywood:"deb887",burntsienna:"ea7e5d",cadetblue:"5f9ea0",chartreuse:"7fff00",chocolate:"d2691e",coral:"ff7f50",cornflowerblue:"6495ed",cornsilk:"fff8dc",crimson:"dc143c",cyan:"0ff",darkblue:"00008b",darkcyan:"008b8b",darkgoldenrod:"b8860b",darkgray:"a9a9a9",darkgreen:"006400",darkgrey:"a9a9a9",darkkhaki:"bdb76b",darkmagenta:"8b008b",darkolivegreen:"556b2f",darkorange:"ff8c00",darkorchid:"9932cc",darkred:"8b0000",darksalmon:"e9967a",darkseagreen:"8fbc8f",darkslateblue:"483d8b",darkslategray:"2f4f4f",darkslategrey:"2f4f4f",darkturquoise:"00ced1",darkviolet:"9400d3",deeppink:"ff1493",deepskyblue:"00bfff",dimgray:"696969",dimgrey:"696969",dodgerblue:"1e90ff",firebrick:"b22222",floralwhite:"fffaf0",forestgreen:"228b22",fuchsia:"f0f",gainsboro:"dcdcdc",ghostwhite:"f8f8ff",gold:"ffd700",goldenrod:"daa520",gray:"808080",green:"008000",greenyellow:"adff2f",grey:"808080",honeydew:"f0fff0",hotpink:"ff69b4",indianred:"cd5c5c",indigo:"4b0082",ivory:"fffff0",khaki:"f0e68c",lavender:"e6e6fa",lavenderblush:"fff0f5",lawngreen:"7cfc00",lemonchiffon:"fffacd",lightblue:"add8e6",lightcoral:"f08080",lightcyan:"e0ffff",lightgoldenrodyellow:"fafad2",lightgray:"d3d3d3",lightgreen:"90ee90",lightgrey:"d3d3d3",lightpink:"ffb6c1",lightsalmon:"ffa07a",lightseagreen:"20b2aa",lightskyblue:"87cefa",lightslategray:"789",lightslategrey:"789",lightsteelblue:"b0c4de",lightyellow:"ffffe0",lime:"0f0",limegreen:"32cd32",linen:"faf0e6",magenta:"f0f",maroon:"800000",mediumaquamarine:"66cdaa",mediumblue:"0000cd",mediumorchid:"ba55d3",mediumpurple:"9370db",mediumseagreen:"3cb371",mediumslateblue:"7b68ee",mediumspringgreen:"00fa9a",mediumturquoise:"48d1cc",mediumvioletred:"c71585",midnightblue:"191970",mintcream:"f5fffa",mistyrose:"ffe4e1",moccasin:"ffe4b5",navajowhite:"ffdead",navy:"000080",oldlace:"fdf5e6",olive:"808000",olivedrab:"6b8e23",orange:"ffa500",orangered:"ff4500",orchid:"da70d6",palegoldenrod:"eee8aa",palegreen:"98fb98",paleturquoise:"afeeee",palevioletred:"db7093",papayawhip:"ffefd5",peachpuff:"ffdab9",peru:"cd853f",pink:"ffc0cb",plum:"dda0dd",powderblue:"b0e0e6",purple:"800080",rebeccapurple:"663399",red:"f00",rosybrown:"bc8f8f",royalblue:"4169e1",saddlebrown:"8b4513",salmon:"fa8072",sandybrown:"f4a460",seagreen:"2e8b57",seashell:"fff5ee",sienna:"a0522d",silver:"c0c0c0",skyblue:"87ceeb",slateblue:"6a5acd",slategray:"708090",slategrey:"708090",snow:"fffafa",springgreen:"00ff7f",steelblue:"4682b4",tan:"d2b48c",teal:"008080",thistle:"d8bfd8",tomato:"ff6347",turquoise:"40e0d0",violet:"ee82ee",wheat:"f5deb3",white:"fff",whitesmoke:"f5f5f5",yellow:"ff0",yellowgreen:"9acd32"},L=l.hexNames=
// Utilities
// ---------
// `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`
function(e){var t={};for(var n in e)e.hasOwnProperty(n)&&(t[e[n]]=n);return t}
// Return a valid alpha value [0,1] with all invalid values being set to 1
(A);
// Make it easy to access colors via `hexNames[hex]`
function P(e){return e=parseFloat(e),(isNaN(e)||e<0||e>1)&&(e=1),e}
// Take input from [0, n] and return it as [0, 1]
function C(e,n){(
// Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1
// <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>
function(e){return"string"==typeof e&&-1!=e.indexOf(".")&&1===parseFloat(e)}
// Check to see if string passed in is a percentage
)(e)&&(e="100%");var r=function(e){return"string"==typeof e&&-1!=e.indexOf("%")}
// Force a hex value to have 2 characters
(e);
// Handle floating point rounding errors
return e=o(n,s(0,parseFloat(e))),
// Automatically convert percentage into number
r&&(e=parseInt(e*n,10)/100),t.abs(e-n)<1e-6?1:e%n/parseFloat(n);
// Convert into [0, 1] range if it isn't already
}
// Force a number between 0 and 1
function R(e){return o(1,s(0,e))}
// Parse a base-16 hex value into a base-10 integer
function O(e){return parseInt(e,16)}function N(e){return 1==e.length?"0"+e:""+e}
// Replace a decimal with it's percentage value
function I(e){return e<=1&&(e=100*e+"%"),e}
// Converts a decimal to a hex value
function D(e){return t.round(255*parseFloat(e)).toString(16)}
// Converts a hex value to a decimal
function z(e){return O(e)/255}var k,B,U,F=(B="[\\s|\\(]+("+(k="(?:[-\\+]?\\d*\\.\\d+%?)|(?:[-\\+]?\\d+%?)")+")[,|\\s]+("+k+")[,|\\s]+("+k+")\\s*\\)?",U="[\\s|\\(]+("+k+")[,|\\s]+("+k+")[,|\\s]+("+k+")[,|\\s]+("+k+")\\s*\\)?",{CSS_UNIT:new RegExp(k),rgb:new RegExp("rgb"+B),rgba:new RegExp("rgba"+U),hsl:new RegExp("hsl"+B),hsla:new RegExp("hsla"+U),hsv:new RegExp("hsv"+B),hsva:new RegExp("hsva"+U),hex3:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex6:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,hex4:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex8:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/});
// `isValidCSSUnit`
// Take in a single string / number and check to see if it looks like a CSS unit
// (see `matchers` above for definition).
function G(e){return!!F.CSS_UNIT.exec(e)}e.exports?e.exports=l:window.tinycolor=l}(Math)});function Lf(e){return(Lf="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Pf(e){return(Pf=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Cf(e,t){return(Cf=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function Rf(e,t,n){return(Rf=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(e){return!1}}()?Reflect.construct:function(e,t,n){var r=[null];r.push.apply(r,t);var i=new(Function.bind.apply(e,r));return n&&Cf(i,n.prototype),i}).apply(null,arguments)}function Of(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function Nf(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var If=function(e){return isNaN(e)?parseInt(Af(e).toHex(),16):e},Df=function(e){return isNaN(e)?Af(e).getAlpha():1};// Autoset attribute colorField by colorByAccessor property
// If an object has already a color, don't set it
// Objects can be nodes or links
function zf(e,t,n){if(t&&"string"==typeof n){var r=bd,i=e.filter(function(e){return!e[n]}),a={};// Paired color set from color brewer
i.forEach(function(e){a[t(e)]=null}),Object.keys(a).forEach(function(e,t){a[e]=t}),i.forEach(function(e){e[n]=r[a[t(e)]%r.length]})}}var kf=window.THREE?window.THREE:{Mesh:fr,MeshLambertMaterial:Qo,BufferGeometry:jn,BufferAttribute:Pn,Matrix4:tn,Vector3:Ct,SphereGeometry:Ao,CylinderGeometry:ko,ConeGeometry:Uo,Line:wa,LineBasicMaterial:xa,QuadraticBezierCurve3:Vs,CubicBezierCurve3:Fs},Bf={graph:Jh,forcelayout:Lu,forcelayout3d:ld};var Uf,Ff=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Object,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=
/* */
function(r){function i(){var t,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,i);for(var a=arguments.length,o=new Array(a),s=0;s<a;s++)o[s]=arguments[s];return(r=function(e,t){return!t||"object"!=typeof t&&"function"!=typeof t?Of(e):t}(this,(t=Pf(i)).call.apply(t,[this].concat(o)))).__kapsuleInstance=e().apply(void 0,[].concat(Nf(n?[Of(r)]:[]),o)),r}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Cf(e,t)}(i,t),i}();// attach kapsule props/methods to class prototype
return Object.keys(e()).forEach(function(e){return r.prototype[e]=function(){var t,n=(t=this.__kapsuleInstance)[e].apply(t,arguments);return n===this.__kapsuleInstance?this:n}}),r}(md({props:{jsonUrl:{onChange:function(e,t){var n=this;e&&!t.fetchingJson&&(
// Load data asynchronously
t.fetchingJson=!0,t.onLoading(),fetch(e).then(function(e){return e.json()}).then(function(e){t.fetchingJson=!1,n.graphData(e)}))},triggerUpdate:!1},graphData:{default:{nodes:[],links:[]},onChange:function(e,t){(e.nodes.length||e.links.length)&&console.info("force-graph loading",e.nodes.length+" nodes",e.links.length+" links"),t.engineRunning=!1,// Pause simulation immediately
t.sceneNeedsRepopulating=!0,t.simulationNeedsReheating=!0}},numDimensions:{default:3,onChange:function(e,t){t.simulationNeedsReheating=!0;var n=t.d3ForceLayout.force("charge");// Increase repulsion on 3D mode for improved spatial separation
function r(e,t){e.forEach(function(e){delete e[t],// position
delete e["v".concat(t)]})}n&&n.strength(e>2?-60:-30),e<3&&r(t.graphData.nodes,"z"),e<2&&r(t.graphData.nodes,"y")}},dagMode:{onChange:function(e,t){
// td, bu, lr, rl, zin, zout, radialin, radialout
!e&&"d3"===t.forceEngine&&(t.graphData.nodes||[]).forEach(function(e){return e.fx=e.fy=e.fz=void 0}),// unfix nodes when disabling dag mode
t.simulationNeedsReheating=!0}},dagLevelDistance:{onChange:function(e,t){t.simulationNeedsReheating=!0}},nodeRelSize:{default:4,onChange:function(e,t){t.sceneNeedsRepopulating=!0}},
// volume per val unit
nodeId:{default:"id",onChange:function(e,t){t.simulationNeedsReheating=!0}},nodeVal:{default:"val",onChange:function(e,t){t.sceneNeedsRepopulating=!0}},nodeResolution:{default:8,onChange:function(e,t){t.sceneNeedsRepopulating=!0}},
// how many slice segments in the sphere's circumference
nodeColor:{default:"color",onChange:function(e,t){t.sceneNeedsRepopulating=!0}},nodeAutoColorBy:{onChange:function(e,t){t.sceneNeedsRepopulating=!0}},nodeOpacity:{default:.75,onChange:function(e,t){t.sceneNeedsRepopulating=!0}},nodeThreeObject:{onChange:function(e,t){t.sceneNeedsRepopulating=!0}},nodeThreeObjectExtend:{default:!1,onChange:function(e,t){t.sceneNeedsRepopulating=!0}},linkSource:{default:"source",onChange:function(e,t){t.simulationNeedsReheating=!0}},linkTarget:{default:"target",onChange:function(e,t){t.simulationNeedsReheating=!0}},linkVisibility:{default:!0,onChange:function(e,t){t.sceneNeedsRepopulating=!0}},linkColor:{default:"color",onChange:function(e,t){t.sceneNeedsRepopulating=!0}},linkAutoColorBy:{onChange:function(e,t){t.sceneNeedsRepopulating=!0}},linkOpacity:{default:.2,onChange:function(e,t){t.sceneNeedsRepopulating=!0}},linkWidth:{onChange:function(e,t){t.sceneNeedsRepopulating=!0}},
// Rounded to nearest decimal. For falsy values use dimensionless line with 1px regardless of distance.
linkResolution:{default:6,onChange:function(e,t){t.sceneNeedsRepopulating=!0}},
// how many radial segments in each line tube's geometry
linkCurvature:{default:0,triggerUpdate:!1},
// line curvature radius (0: straight, 1: semi-circle)
linkCurveRotation:{default:0,triggerUpdate:!1},
// line curve rotation along the line axis (0: interection with XY plane, PI: upside down)
linkMaterial:{onChange:function(e,t){t.sceneNeedsRepopulating=!0}},linkThreeObject:{onChange:function(e,t){t.sceneNeedsRepopulating=!0}},linkThreeObjectExtend:{default:!1,onChange:function(e,t){t.sceneNeedsRepopulating=!0}},linkPositionUpdate:{triggerUpdate:!1},
// custom function to call for updating the link's position. Signature: (threeObj, { start: { x, y, z},  end: { x, y, z }}, link). If the function returns a truthy value, the regular link position update will not run.
linkDirectionalArrowLength:{default:0,onChange:function(e,t){t.sceneNeedsRepopulating=!0}},linkDirectionalArrowColor:{onChange:function(e,t){t.sceneNeedsRepopulating=!0}},linkDirectionalArrowRelPos:{default:.5,triggerUpdate:!1},
// value between 0<>1 indicating the relative pos along the (exposed) line
linkDirectionalArrowResolution:{default:8,onChange:function(e,t){t.sceneNeedsRepopulating=!0}},
// how many slice segments in the arrow's conic circumference
linkDirectionalParticles:{default:0,onChange:function(e,t){t.sceneNeedsRepopulating=!0}},
// animate photons travelling in the link direction
linkDirectionalParticleSpeed:{default:.01,triggerUpdate:!1},
// in link length ratio per frame
linkDirectionalParticleWidth:{default:.5,onChange:function(e,t){t.sceneNeedsRepopulating=!0}},linkDirectionalParticleColor:{onChange:function(e,t){t.sceneNeedsRepopulating=!0}},linkDirectionalParticleResolution:{default:4,onChange:function(e,t){t.sceneNeedsRepopulating=!0}},
// how many slice segments in the particle sphere's circumference
forceEngine:{default:"d3",onChange:function(e,t){t.simulationNeedsReheating=!0}},
// d3 or ngraph
d3AlphaDecay:{default:.0228,triggerUpdate:!1,onChange:function(e,t){t.d3ForceLayout.alphaDecay(e)}},d3AlphaTarget:{default:0,triggerUpdate:!1,onChange:function(e,t){t.d3ForceLayout.alphaTarget(e)}},d3VelocityDecay:{default:.4,triggerUpdate:!1,onChange:function(e,t){t.d3ForceLayout.velocityDecay(e)}},warmupTicks:{default:0,triggerUpdate:!1},
// how many times to tick the force engine at init before starting to render
cooldownTicks:{default:1/0,triggerUpdate:!1},cooldownTime:{default:15e3,triggerUpdate:!1},
// ms
onLoading:{default:function(){},triggerUpdate:!1},onFinishLoading:{default:function(){},triggerUpdate:!1},onEngineTick:{default:function(){},triggerUpdate:!1},onEngineStop:{default:function(){},triggerUpdate:!1}},methods:{refresh:function(e){return e.sceneNeedsRepopulating=!0,e.simulationNeedsReheating=!0,e._rerender(),this},
// Expose d3 forces for external manipulation
d3Force:function(e,t,n){return void 0===n?e.d3ForceLayout.force(t):(e.d3ForceLayout.force(t,n),this)},_updateScene:function(e){},
// reset cooldown state
resetCountdown:function(e){return e.cntTicks=0,e.startTickTime=new Date,e.engineRunning=!0,this},tickFrame:function(e){var t,n,r,i,a="ngraph"!==e.forceEngine;return e.engineRunning&&//
function(){++e.cntTicks>e.cooldownTicks||new Date-e.startTickTime>e.cooldownTime?(e.engineRunning=!1,// Stop ticking graph
e.onEngineStop()):(e.layout[a?"tick":"step"](),// Tick it
e.onEngineTick());// Update nodes position
e.graphData.nodes.forEach(function(t){var n=t.__threeObj;if(n){var r=a?t:e.layout.getNodePosition(t[e.nodeId]);n.position.x=r.x,n.position.y=r.y||0,n.position.z=r.z||0}});// Update links position
var t=vd(e.linkCurvature),n=vd(e.linkCurveRotation),r=vd(e.linkThreeObjectExtend);e.graphData.links.forEach(function(i){var o=i.__lineObj;if(o){var s=a?i:e.layout.getLinkPosition(e.layout.graph.getLink(i.source,i.target).id),c=s[a?"source":"from"],l=s[a?"target":"to"];if(c.hasOwnProperty("x")&&l.hasOwnProperty("x")){// skip invalid link
var h=r(i);if(!e.linkPositionUpdate||!e.linkPositionUpdate(h?o.children[0]:o,// pass child custom object if extending the default
{start:{x:c.x,y:c.y,z:c.z},end:{x:l.x,y:l.y,z:l.z}},i)||h)// Wipe curve ref from object
if(i.__curve=null,"Line"===o.type){
// Update line geometry
var u=t(i);// # line segments
if(u){
// bezier curve line
var d,f=new kf.Vector3(c.x,c.y||0,c.z||0),p=new kf.Vector3(l.x,l.y||0,l.z||0),m=f.distanceTo(p),g=n(i);if(m>0){var v=l.x-c.x,y=l.y-c.y||0,b=(new kf.Vector3).subVectors(p,f),x=b.clone().multiplyScalar(u).cross(0!==v||0!==y?new kf.Vector3(0,0,1):new kf.Vector3(0,1,0)).applyAxisAngle(b.normalize(),g).add((new kf.Vector3).addVectors(f,p).divideScalar(2));d=new kf.QuadraticBezierCurve3(f,x,p)}else{
// Same point, draw a loop
var w=70*u,_=-g,M=_+Math.PI/2;d=new kf.CubicBezierCurve3(f,new kf.Vector3(w*Math.cos(M),w*Math.sin(M),0).add(f),new kf.Vector3(w*Math.cos(_),w*Math.sin(_),0).add(f),p)}o.geometry.setFromPoints(d.getPoints(30)),i.__curve=d}else{var E=o.geometry.getAttribute("position");E&&E.array&&6===E.array.length||o.geometry.addAttribute("position",E=new kf.BufferAttribute(new Float32Array(6),3)),E.array[0]=c.x,E.array[1]=c.y||0,E.array[2]=c.z||0,E.array[3]=l.x,E.array[4]=l.y||0,E.array[5]=l.z||0,E.needsUpdate=!0}o.geometry.computeBoundingSphere()}else if("Mesh"===o.type){
// Update cylinder geometry
// links with width ignore linkCurvature because TubeGeometries can't be updated
var S=new kf.Vector3(c.x,c.y||0,c.z||0),T=new kf.Vector3(l.x,l.y||0,l.z||0),A=S.distanceTo(T);o.position.x=S.x,o.position.y=S.y,o.position.z=S.z,o.scale.z=A,o.parent.localToWorld(T),// lookAt requires world coords
o.lookAt(T)}}}})}(),t=vd(e.linkDirectionalArrowRelPos),n=vd(e.linkDirectionalArrowLength),r=vd(e.nodeVal),e.graphData.links.forEach(function(i){var o=i.__arrowObj;if(o){var s=a?i:e.layout.getLinkPosition(e.layout.graph.getLink(i.source,i.target).id),c=s[a?"source":"from"],l=s[a?"target":"to"];if(c.hasOwnProperty("x")&&l.hasOwnProperty("x")){// skip invalid link
var h=Math.sqrt(Math.max(0,r(c)||1))*e.nodeRelSize,u=Math.sqrt(Math.max(0,r(l)||1))*e.nodeRelSize,d=n(i),f=t(i),p=i.__curve?function(e){return i.__curve.getPoint(e)}// interpolate along bezier curve
:function(e){
// straight line: interpolate linearly
var t=function(e,t,n,r){return t[e]+(n[e]-t[e])*r||0};return{x:t("x",c,l,e),y:t("y",c,l,e),z:t("z",c,l,e)}},m=i.__curve?i.__curve.getLength():Math.sqrt(["x","y","z"].map(function(e){return Math.pow((l[e]||0)-(c[e]||0),2)}).reduce(function(e,t){return e+t},0)),g=h+d+(m-h-u-d)*f,v=p(g/m),y=p((g-d)/m);["x","y","z"].forEach(function(e){return o.position[e]=y[e]});var b=Rf(kf.Vector3,Nf(["x","y","z"].map(function(e){return v[e]})));o.parent.localToWorld(b),// lookAt requires world coords
o.lookAt(b)}}}),i=vd(e.linkDirectionalParticleSpeed),e.graphData.links.forEach(function(t){var n=t.__photonObjs;if(n&&n.length){var r=a?t:e.layout.getLinkPosition(e.layout.graph.getLink(t.source,t.target).id),o=r[a?"source":"from"],s=r[a?"target":"to"];if(o.hasOwnProperty("x")&&s.hasOwnProperty("x")){// skip invalid link
var c=i(t),l=t.__curve?function(e){return t.__curve.getPoint(e)}// interpolate along bezier curve
:function(e){
// straight line: interpolate linearly
var t=function(e,t,n,r){return t[e]+(n[e]-t[e])*r||0};return{x:t("x",o,s,e),y:t("y",o,s,e),z:t("z",o,s,e)}};n.forEach(function(e,t){var r=e.__progressRatio=((e.__progressRatio||t/n.length)+c)%1,i=l(r);["x","y","z"].forEach(function(t){return e.position[t]=i[t]})})}}}),this}},stateInit:function(){return{d3ForceLayout:Xh().force("link",gh()).force("charge",Yh()).force("center",Gl()).force("dagRadial",null).stop(),engineRunning:!1,sceneNeedsRepopulating:!0,simulationNeedsReheating:!0}},init:function(e,t){
// Main three object to manipulate
t.graphScene=e},update:function(e){// pause simulation
if(e.engineRunning=!1,e.sceneNeedsRepopulating){e.sceneNeedsRepopulating=!1,null!==e.nodeAutoColorBy&&
// Auto add color to uncolored nodes
zf(e.graphData.nodes,vd(e.nodeAutoColorBy),e.nodeColor),null!==e.linkAutoColorBy&&
// Auto add color to uncolored links
zf(e.graphData.links,vd(e.linkAutoColorBy),e.linkColor);for(// Clear the scene
var t=function e(t){t.geometry&&t.geometry.dispose(),t.material&&function e(t){t instanceof Array?t.forEach(e):(t.map&&t.map.dispose(),t.dispose())}(t.material),t.texture&&t.texture.dispose(),t.children&&t.children.forEach(e)};e.graphScene.children.length;){var n=e.graphScene.children[0];e.graphScene.remove(n),t(n)}// Add WebGL objects
var r=vd(e.nodeThreeObject),i=vd(e.nodeThreeObjectExtend),a=vd(e.nodeVal),o=vd(e.nodeColor),s={},c={};// indexed by color
e.graphData.nodes.forEach(function(t){var n,l=r(t),h=i(t);if(l&&e.nodeThreeObject===l&&(
// clone object if it's a shared object among all nodes
l=l.clone()),l&&!h)n=l;else{
// Add default object (sphere mesh)
var u=a(t)||1;s.hasOwnProperty(u)||(s[u]=new kf.SphereGeometry(Math.cbrt(u)*e.nodeRelSize,e.nodeResolution,e.nodeResolution));var d=o(t);c.hasOwnProperty(d)||(c[d]=new kf.MeshLambertMaterial({color:If(d||"#ffffaa"),transparent:!0,opacity:e.nodeOpacity*Df(d)})),n=new kf.Mesh(s[u],c[d]),l&&h&&n.add(l)}n.__graphObjType="node",// Add object type
n.__data=t,// Attach node data
e.graphScene.add(t.__threeObj=n)});var l=vd(e.linkThreeObject),h=vd(e.linkThreeObjectExtend),u=vd(e.linkMaterial),d=vd(e.linkVisibility),f=vd(e.linkColor),p=vd(e.linkWidth),m=vd(e.linkDirectionalArrowLength),g=vd(e.linkDirectionalArrowColor),v=vd(e.linkDirectionalParticles),y=vd(e.linkDirectionalParticleWidth),b=vd(e.linkDirectionalParticleColor),x={},w={},_={},M={};// indexed by particle width
e.graphData.links.forEach(function(t){if(d(t)){var n,r=f(t),i=l(t),a=h(t);if(i&&e.linkThreeObject===i&&(
// clone object if it's a shared object among all links
i=i.clone()),i&&!a)n=i;else{
// Add default line object
var o,s=Math.ceil(10*p(t))/10,c=!!s;if(c){if(!w.hasOwnProperty(s)){var E=s/2;(o=new kf.CylinderGeometry(E,E,1,e.linkResolution,1,!1)).applyMatrix((new kf.Matrix4).makeTranslation(0,.5,0)),o.applyMatrix((new kf.Matrix4).makeRotationX(Math.PI/2)),w[s]=o}o=w[s]}else
// Use plain line (constant width)
(o=new kf.BufferGeometry).addAttribute("position",new kf.BufferAttribute(new Float32Array(6),3));var S=u(t);if(!S){if(!x.hasOwnProperty(r)){var T=e.linkOpacity*Df(r);x[r]=new kf.MeshLambertMaterial({color:If(r||"#f0f0f0"),transparent:T<1,opacity:T,depthWrite:T>=1})}S=x[r]}n=new kf[c?"Mesh":"Line"](o,S),i&&a&&n.add(i)}n.renderOrder=10,// Prevent visual glitches of dark lines on top of nodes by rendering them last
n.__graphObjType="link",// Add object type
n.__data=t,// Attach link data
e.graphScene.add(t.__lineObj=n);// Add arrow
var A=m(t);if(A&&A>0){var L=g(t)||r||"#f0f0f0",P=new kf.ConeGeometry(.25*A,A,e.linkDirectionalArrowResolution);// Correct orientation
P.translate(0,A/2,0),P.rotateX(Math.PI/2);var C=new kf.Mesh(P,new kf.MeshLambertMaterial({color:If(L),transparent:!0,opacity:3*e.linkOpacity}));e.graphScene.add(t.__arrowObj=C)}// Add photon particles
var R=Math.round(Math.abs(v(t))),O=Math.ceil(10*y(t))/10/2,N=b(t)||r||"#f0f0f0";M.hasOwnProperty(O)||(M[O]=new kf.SphereGeometry(O,e.linkDirectionalParticleResolution,e.linkDirectionalParticleResolution));var I=M[O];_.hasOwnProperty(N)||(_[N]=new kf.MeshLambertMaterial({color:If(N),transparent:!0,opacity:3*e.linkOpacity}));var D=_[N],z=Nf(Array(R)).map(function(){return new kf.Mesh(I,D)});z.forEach(function(t){return e.graphScene.add(t)}),t.__photonObjs=z}else
// Exclude non-visible links
t.__lineObj=t.__arrowObj=t.__photonObjs=null})}if(e.simulationNeedsReheating){e.simulationNeedsReheating=!1,e.engineRunning=!1,// Pause simulation
// parse links
e.graphData.links.forEach(function(t){t.source=t[e.linkSource],t.target=t[e.linkTarget]});// Feed data to force-directed layout
var E,S="ngraph"!==e.forceEngine;if(S){
// D3-force
(E=e.d3ForceLayout).stop().alpha(1).numDimensions(e.numDimensions).nodes(e.graphData.nodes);// add links (if link force is still active)
var T=e.d3ForceLayout.force("link");T&&T.id(function(t){return t[e.nodeId]}).links(e.graphData.links);// setup dag force constraints
var A=e.dagMode&&(z=e.graphData,k=function(t){return t[e.nodeId]},B=z.nodes,U=z.links,F={},B.forEach(function(e){return F[k(e)]={data:e,out:[],depth:-1}}),U.forEach(function(e){var t=e.source,n=e.target,r=s(t),i=s(n);if(!F.hasOwnProperty(r))throw"Missing source node with id: ".concat(r);if(!F.hasOwnProperty(i))throw"Missing target node with id: ".concat(i);var a=F[r],o=F[i];function s(e){return"object"===Lf(e)?k(e):e}a.out.push(o)}),function e(t){for(var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],r=n.length,i=0,a=t.length;i<a;i++){var o=t[i];if(-1!==n.indexOf(o)){var s=[].concat(Nf(n.slice(n.indexOf(o))),[o]).map(function(e){return k(e.data)});throw"Invalid DAG structure! Found cycle in node path: ".concat(s.join(" -> "),".")}r>o.depth&&(
// Don't unnecessarily revisit chunks of the graph
o.depth=r,e(o.out,[].concat(Nf(n),[o])))}}(Object.values(F)),// cleanup
Object.keys(F).forEach(function(e){return F[e]=F[e].depth}),F),L=Math.max.apply(Math,Nf(Object.values(A||[]))),P=e.dagLevelDistance||e.graphData.nodes.length/(L||1)*2*(-1!==["radialin","radialout"].indexOf(e.dagMode)?.7:1);// Fix nodes to x,y,z for dag mode
if(e.dagMode){var C=function(t,n){return function(r){return t?(A[r[e.nodeId]]-L/2)*P*(n?-1:1):void 0}},R=C(-1!==["lr","rl"].indexOf(e.dagMode),"rl"===e.dagMode),O=C(-1!==["td","bu"].indexOf(e.dagMode),"td"===e.dagMode),N=C(-1!==["zin","zout"].indexOf(e.dagMode),"zout"===e.dagMode);e.graphData.nodes.forEach(function(e){e.fx=R(e),e.fy=O(e),e.fz=N(e)})}e.d3ForceLayout.force("dagRadial",-1!==["radialin","radialout"].indexOf(e.dagMode)?function(e,t,n,r){var i,a,o,s,c=dh(.1);function l(e){for(var c=0,l=i.length;c<l;++c){var h=i[c],u=h.x-t||1e-6,d=(h.y||0)-n||1e-6,f=(h.z||0)-r||1e-6,p=Math.sqrt(u*u+d*d+f*f),m=(s[c]-p)*o[c]*e/p;h.vx+=u*m,a>1&&(h.vy+=d*m),a>2&&(h.vz+=f*m)}}function h(){if(i){var t,n=i.length;for(o=new Array(n),s=new Array(n),t=0;t<n;++t)s[t]=+e(i[t],t,i),o[t]=isNaN(s[t])?0:+c(i[t],t,i)}}return"function"!=typeof e&&(e=dh(+e)),null==t&&(t=0),null==n&&(n=0),null==r&&(r=0),l.initialize=function(e,t){i=e,a=t,h()},l.strength=function(e){return arguments.length?(c="function"==typeof e?e:dh(+e),h(),l):c},l.radius=function(t){return arguments.length?(e="function"==typeof t?t:dh(+t),h(),l):e},l.x=function(e){return arguments.length?(t=+e,l):t},l.y=function(e){return arguments.length?(n=+e,l):n},l.z=function(e){return arguments.length?(r=+e,l):r},l}(function(t){var n=A[t[e.nodeId]];return("radialin"===e.dagMode?L-n:n)*P}).strength(1):null)}else{
// ngraph
var I=Bf.graph();e.graphData.nodes.forEach(function(t){I.addNode(t[e.nodeId])}),e.graphData.links.forEach(function(e){I.addLink(e.source,e.target)}),(E=Bf["forcelayout"+(2===e.numDimensions?"":"3d")](I)).graph=I}for(var D=0;D<e.warmupTicks;D++)E[S?"tick":"step"]();// Initial ticks before starting to render
e.layout=E,this.resetCountdown(),e.onFinishLoading()}var z,k,B,U,F;e.engineRunning=!0}}),(window.THREE?window.THREE:{Group:Xi}).Group,!0),Gf=window.THREE||Ul,jf=Uf=function(e,t){var n=this,r={NONE:-1,ROTATE:0,ZOOM:1,PAN:2,TOUCH_ROTATE:3,TOUCH_ZOOM_PAN:4};this.object=e,this.domElement=void 0!==t?t:document,
// API
this.enabled=!0,this.screen={left:0,top:0,width:0,height:0},this.rotateSpeed=1,this.zoomSpeed=1.2,this.panSpeed=.3,this.noRotate=!1,this.noZoom=!1,this.noPan=!1,this.staticMoving=!1,this.dynamicDampingFactor=.2,this.minDistance=0,this.maxDistance=1/0,
/**
  	 * `KeyboardEvent.keyCode` values which should trigger the different 
  	 * interaction states. Each element can be a single code or an array
  	 * of codes. All elements are required.
  	 */
this.keys=[65/*A*/,83/*S*/,68/*D*/],
// internals
this.target=new Gf.Vector3;var i=new Gf.Vector3,a=r.NONE,o=r.NONE,s=new Gf.Vector3,c=new Gf.Vector2,l=new Gf.Vector2,h=new Gf.Vector3,u=0,d=new Gf.Vector2,f=new Gf.Vector2,p=0,m=0,g=new Gf.Vector2,v=new Gf.Vector2;
// for reset
this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.up0=this.object.up.clone();
// events
var y={type:"change"},b={type:"start"},x={type:"end"};
// methods
this.handleResize=function(){if(this.domElement===document)this.screen.left=0,this.screen.top=0,this.screen.width=window.innerWidth,this.screen.height=window.innerHeight;else{var e=this.domElement.getBoundingClientRect(),t=this.domElement.ownerDocument.documentElement;
// adjustments come from similar code in the jquery offset() function
this.screen.left=e.left+window.pageXOffset-t.clientLeft,this.screen.top=e.top+window.pageYOffset-t.clientTop,this.screen.width=e.width,this.screen.height=e.height}},this.handleEvent=function(e){"function"==typeof this[e.type]&&this[e.type](e)};var w,_,M,E=function(){var e=new Gf.Vector2;return function(t,r){return e.set((t-n.screen.left)/n.screen.width,(r-n.screen.top)/n.screen.height),e}}(),S=function(){var e=new Gf.Vector2;return function(t,r){return e.set((t-.5*n.screen.width-n.screen.left)/(.5*n.screen.width),(n.screen.height+2*(n.screen.top-r))/n.screen.width),e}}();
// helpers
/**
  	 * Checks if the pressed key is any of the configured modifier keys for
  	 * a specified behavior.
  	 * 
  	 * @param {number | number[]} keys 
  	 * @param {number} key 
  	 * 
  	 * @returns {boolean} `true` if `keys` contains or equals `key`
  	 */
function T(e,t){return Array.isArray(e)?-1!==e.indexOf(t):e===t}
// listeners
function A(e){!1!==n.enabled&&(window.removeEventListener("keydown",A),o=a,a===r.NONE&&(T(n.keys[r.ROTATE],e.keyCode)&&!n.noRotate?a=r.ROTATE:T(n.keys[r.ZOOM],e.keyCode)&&!n.noZoom?a=r.ZOOM:T(n.keys[r.PAN],e.keyCode)&&!n.noPan&&(a=r.PAN)))}function L(e){!1!==n.enabled&&(a=o,window.addEventListener("keydown",A,!1))}function P(e){!1!==n.enabled&&(e.preventDefault(),e.stopPropagation(),a===r.NONE&&(a=e.button),a!==r.ROTATE||n.noRotate?a!==r.ZOOM||n.noZoom?a!==r.PAN||n.noPan||(g.copy(E(e.pageX,e.pageY)),v.copy(g)):(d.copy(E(e.pageX,e.pageY)),f.copy(d)):(l.copy(S(e.pageX,e.pageY)),c.copy(l)),document.addEventListener("mousemove",C,!1),document.addEventListener("mouseup",R,!1),n.dispatchEvent(b))}function C(e){!1!==n.enabled&&(e.preventDefault(),e.stopPropagation(),a!==r.ROTATE||n.noRotate?a!==r.ZOOM||n.noZoom?a!==r.PAN||n.noPan||v.copy(E(e.pageX,e.pageY)):f.copy(E(e.pageX,e.pageY)):(c.copy(l),l.copy(S(e.pageX,e.pageY))))}function R(e){!1!==n.enabled&&(e.preventDefault(),e.stopPropagation(),a=r.NONE,document.removeEventListener("mousemove",C),document.removeEventListener("mouseup",R),n.dispatchEvent(x))}function O(e){if(!1!==n.enabled){switch(e.preventDefault(),e.stopPropagation(),e.deltaMode){case 2:
// Zoom in pages
d.y-=.025*e.deltaY;break;case 1:
// Zoom in lines
d.y-=.01*e.deltaY;break;default:
// undefined, 0, assume pixels
d.y-=25e-5*e.deltaY}n.dispatchEvent(b),n.dispatchEvent(x)}}function N(e){if(!1!==n.enabled){switch(e.touches.length){case 1:a=r.TOUCH_ROTATE,l.copy(S(e.touches[0].pageX,e.touches[0].pageY)),c.copy(l);break;default:// 2 or more
a=r.TOUCH_ZOOM_PAN;var t=e.touches[0].pageX-e.touches[1].pageX,i=e.touches[0].pageY-e.touches[1].pageY;m=p=Math.sqrt(t*t+i*i);var o=(e.touches[0].pageX+e.touches[1].pageX)/2,s=(e.touches[0].pageY+e.touches[1].pageY)/2;g.copy(E(o,s)),v.copy(g)}n.dispatchEvent(b)}}function I(e){if(!1!==n.enabled)switch(e.preventDefault(),e.stopPropagation(),e.touches.length){case 1:c.copy(l),l.copy(S(e.touches[0].pageX,e.touches[0].pageY));break;default:// 2 or more
var t=e.touches[0].pageX-e.touches[1].pageX,r=e.touches[0].pageY-e.touches[1].pageY;m=Math.sqrt(t*t+r*r);var i=(e.touches[0].pageX+e.touches[1].pageX)/2,a=(e.touches[0].pageY+e.touches[1].pageY)/2;v.copy(E(i,a))}}function D(e){if(!1!==n.enabled){switch(e.touches.length){case 0:a=r.NONE;break;case 1:a=r.TOUCH_ROTATE,l.copy(S(e.touches[0].pageX,e.touches[0].pageY)),c.copy(l)}n.dispatchEvent(x)}}function z(e){!1!==n.enabled&&e.preventDefault()}this.rotateCamera=function(){var e,t=new Gf.Vector3,r=new Gf.Quaternion,i=new Gf.Vector3,a=new Gf.Vector3,o=new Gf.Vector3,d=new Gf.Vector3;return function(){d.set(l.x-c.x,l.y-c.y,0),(e=d.length())?(s.copy(n.object.position).sub(n.target),i.copy(s).normalize(),a.copy(n.object.up).normalize(),o.crossVectors(a,i).normalize(),a.setLength(l.y-c.y),o.setLength(l.x-c.x),d.copy(a.add(o)),t.crossVectors(d,s).normalize(),e*=n.rotateSpeed,r.setFromAxisAngle(t,e),s.applyQuaternion(r),n.object.up.applyQuaternion(r),h.copy(t),u=e):!n.staticMoving&&u&&(u*=Math.sqrt(1-n.dynamicDampingFactor),s.copy(n.object.position).sub(n.target),r.setFromAxisAngle(h,u),s.applyQuaternion(r),n.object.up.applyQuaternion(r)),c.copy(l)}}(),this.zoomCamera=function(){var e;a===r.TOUCH_ZOOM_PAN?(e=p/m,p=m,s.multiplyScalar(e)):(1!==(e=1+(f.y-d.y)*n.zoomSpeed)&&e>0&&s.multiplyScalar(e),n.staticMoving?d.copy(f):d.y+=(f.y-d.y)*this.dynamicDampingFactor)},this.panCamera=(w=new Gf.Vector2,_=new Gf.Vector3,M=new Gf.Vector3,function(){w.copy(v).sub(g),w.lengthSq()&&(w.multiplyScalar(s.length()*n.panSpeed),M.copy(s).cross(n.object.up).setLength(w.x),M.add(_.copy(n.object.up).setLength(w.y)),n.object.position.add(M),n.target.add(M),n.staticMoving?g.copy(v):g.add(w.subVectors(v,g).multiplyScalar(n.dynamicDampingFactor)))}),this.checkDistances=function(){n.noZoom&&n.noPan||(s.lengthSq()>n.maxDistance*n.maxDistance&&(n.object.position.addVectors(n.target,s.setLength(n.maxDistance)),d.copy(f)),s.lengthSq()<n.minDistance*n.minDistance&&(n.object.position.addVectors(n.target,s.setLength(n.minDistance)),d.copy(f)))},this.update=function(){s.subVectors(n.object.position,n.target),n.noRotate||n.rotateCamera(),n.noZoom||n.zoomCamera(),n.noPan||n.panCamera(),n.object.position.addVectors(n.target,s),n.checkDistances(),n.object.lookAt(n.target),i.distanceToSquared(n.object.position)>1e-6&&(n.dispatchEvent(y),i.copy(n.object.position))},this.reset=function(){a=r.NONE,o=r.NONE,n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.up.copy(n.up0),s.subVectors(n.object.position,n.target),n.object.lookAt(n.target),n.dispatchEvent(y),i.copy(n.object.position)},this.dispose=function(){this.domElement.removeEventListener("contextmenu",z,!1),this.domElement.removeEventListener("mousedown",P,!1),this.domElement.removeEventListener("wheel",O,!1),this.domElement.removeEventListener("touchstart",N,!1),this.domElement.removeEventListener("touchend",D,!1),this.domElement.removeEventListener("touchmove",I,!1),document.removeEventListener("mousemove",C,!1),document.removeEventListener("mouseup",R,!1),window.removeEventListener("keydown",A,!1),window.removeEventListener("keyup",L,!1)},this.domElement.addEventListener("contextmenu",z,!1),this.domElement.addEventListener("mousedown",P,!1),this.domElement.addEventListener("wheel",O,!1),this.domElement.addEventListener("touchstart",N,!1),this.domElement.addEventListener("touchend",D,!1),this.domElement.addEventListener("touchmove",I,!1),window.addEventListener("keydown",A,!1),window.addEventListener("keyup",L,!1),this.handleResize(),
// force an update at start
this.update()};// Prefer consumption from global THREE, if exists
Uf.prototype=Object.create(Gf.EventDispatcher.prototype);function Hf(){return(Hf=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function Vf(e){return(Vf=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Wf(e,t){return(Wf=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function qf(e,t,n){return(qf=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(e){return!1}}()?Reflect.construct:function(e,t,n){var r=[null];r.push.apply(r,t);var i=new(Function.bind.apply(e,r));return n&&Wf(i,n.prototype),i}).apply(null,arguments)}function Xf(e){var t="function"==typeof Map?new Map:void 0;return(Xf=function(e){if(null===e||(n=e,-1===Function.toString.call(n).indexOf("[native code]")))return e;var n;if("function"!=typeof e)throw new TypeError("Super expression must either be null or a function");if(void 0!==t){if(t.has(e))return t.get(e);t.set(e,r)}function r(){return qf(e,arguments,Vf(this).constructor)}return r.prototype=Object.create(e.prototype,{constructor:{value:r,enumerable:!1,writable:!0,configurable:!0}}),Wf(r,e)})(e)}
// based on https://github.com/styled-components/styled-components/blob/fcf6f3804c57a14dd7984dfab7bc06ee2edca044/src/utils/error.js
/**
   * Parse errors.md and turn it into a simple hash of code: message
   * @private
   */var Yf={1:"Passed invalid arguments to hsl, please pass multiple numbers e.g. hsl(360, 0.75, 0.4) or an object e.g. rgb({ hue: 255, saturation: 0.4, lightness: 0.75 }).\n\n",2:"Passed invalid arguments to hsla, please pass multiple numbers e.g. hsla(360, 0.75, 0.4, 0.7) or an object e.g. rgb({ hue: 255, saturation: 0.4, lightness: 0.75, alpha: 0.7 }).\n\n",3:"Passed an incorrect argument to a color function, please pass a string representation of a color.\n\n",4:"Couldn't generate valid rgb string from %s, it returned %s.\n\n",5:"Couldn't parse the color string. Please provide the color as a string in hex, rgb, rgba, hsl or hsla notation.\n\n",6:"Passed invalid arguments to rgb, please pass multiple numbers e.g. rgb(255, 205, 100) or an object e.g. rgb({ red: 255, green: 205, blue: 100 }).\n\n",7:"Passed invalid arguments to rgba, please pass multiple numbers e.g. rgb(255, 205, 100, 0.75) or an object e.g. rgb({ red: 255, green: 205, blue: 100, alpha: 0.75 }).\n\n",8:"Passed invalid argument to toColorString, please pass a RgbColor, RgbaColor, HslColor or HslaColor object.\n\n",9:"Please provide a number of steps to the modularScale helper.\n\n",10:"Please pass a number or one of the predefined scales to the modularScale helper as the ratio.\n\n",11:'Invalid value passed as base to modularScale, expected number or em string but got "%s"\n\n',12:'Expected a string ending in "px" or a number passed as the first argument to %s(), got "%s" instead.\n\n',13:'Expected a string ending in "px" or a number passed as the second argument to %s(), got "%s" instead.\n\n',14:'Passed invalid pixel value ("%s") to %s(), please pass a value like "12px" or 12.\n\n',15:'Passed invalid base value ("%s") to %s(), please pass a value like "12px" or 12.\n\n',16:"You must provide a template to this method.\n\n",17:"You passed an unsupported selector state to this method.\n\n",18:"minScreen and maxScreen must be provided as stringified numbers with the same units.\n\n",19:"fromSize and toSize must be provided as stringified numbers with the same units.\n\n",20:"expects either an array of objects or a single object with the properties prop, fromSize, and toSize.\n\n",21:"expects the objects in the first argument array to have the properties `prop`, `fromSize`, and `toSize`.\n\n",22:"expects the first argument object to have the properties `prop`, `fromSize`, and `toSize`.\n\n",23:"fontFace expects a name of a font-family.\n\n",24:"fontFace expects either the path to the font file(s) or a name of a local copy.\n\n",25:"fontFace expects localFonts to be an array.\n\n",26:"fontFace expects fileFormats to be an array.\n\n",27:"radialGradient requries at least 2 color-stops to properly render.\n\n",28:"Please supply a filename to retinaImage() as the first argument.\n\n",29:"Passed invalid argument to triangle, please pass correct pointingDirection e.g. 'right'.\n\n",30:"Passed an invalid value to `height` or `width`. Please provide a pixel based unit.\n\n",31:"The animation shorthand only takes 8 arguments. See the specification for more information: http://mdn.io/animation\n\n",32:"To pass multiple animations please supply them in arrays, e.g. animation(['rotate', '2s'], ['move', '1s'])\nTo pass a single animation please supply them in simple values, e.g. animation('rotate', '2s')\n\n",33:"The animation shorthand arrays can only have 8 elements. See the specification for more information: http://mdn.io/animation\n\n",34:"borderRadius expects a radius value as a string or number as the second argument.\n\n",35:'borderRadius expects one of "top", "bottom", "left" or "right" as the first argument.\n\n',36:"Property must be a string value.\n\n",37:"Syntax Error at %s.\n\n",38:"Formula contains a function that needs parentheses at %s.\n\n",39:"Formula is missing closing parenthesis at %s.\n\n",40:"Formula has too many closing parentheses at %s.\n\n",41:"All values in a formula must have the same unit or be unitless.\n\n",42:"Please provide a number of steps to the modularScale helper.\n\n",43:"Please pass a number or one of the predefined scales to the modularScale helper as the ratio.\n\n",44:"Invalid value passed as base to modularScale, expected number or em/rem string but got %s.\n\n",45:"Passed invalid argument to hslToColorString, please pass a HslColor or HslaColor object.\n\n",46:"Passed invalid argument to rgbToColorString, please pass a RgbColor or RgbaColor object.\n\n",47:"minScreen and maxScreen must be provided as stringified numbers with the same units.\n\n",48:"fromSize and toSize must be provided as stringified numbers with the same units.\n\n",49:"Expects either an array of objects or a single object with the properties prop, fromSize, and toSize.\n\n",50:"Expects the objects in the first argument array to have the properties prop, fromSize, and toSize.\n\n",51:"Expects the first argument object to have the properties prop, fromSize, and toSize.\n\n",52:"fontFace expects either the path to the font file(s) or a name of a local copy.\n\n",53:"fontFace expects localFonts to be an array.\n\n",54:"fontFace expects fileFormats to be an array.\n\n",55:"fontFace expects a name of a font-family.\n\n",56:"linearGradient requries at least 2 color-stops to properly render.\n\n",57:"radialGradient requries at least 2 color-stops to properly render.\n\n",58:"Please supply a filename to retinaImage() as the first argument.\n\n",59:"Passed invalid argument to triangle, please pass correct pointingDirection e.g. 'right'.\n\n",60:"Passed an invalid value to `height` or `width`. Please provide a pixel based unit.\n\n",61:"Property must be a string value.\n\n",62:"borderRadius expects a radius value as a string or number as the second argument.\n\n",63:'borderRadius expects one of "top", "bottom", "left" or "right" as the first argument.\n\n',64:"The animation shorthand only takes 8 arguments. See the specification for more information: http://mdn.io/animation.\n\n",65:"To pass multiple animations please supply them in arrays, e.g. animation(['rotate', '2s'], ['move', '1s'])\\nTo pass a single animation please supply them in simple values, e.g. animation('rotate', '2s').\n\n",66:"The animation shorthand arrays can only have 8 elements. See the specification for more information: http://mdn.io/animation.\n\n",67:"You must provide a template to this method.\n\n",68:"You passed an unsupported selector state to this method.\n\n",69:'Expected a string ending in "px" or a number passed as the first argument to %s(), got %s instead.\n\n',70:'Expected a string ending in "px" or a number passed as the second argument to %s(), got %s instead.\n\n',71:'Passed invalid pixel value %s to %s(), please pass a value like "12px" or 12.\n\n',72:'Passed invalid base value %s to %s(), please pass a value like "12px" or 12.\n'};
/**
   * super basic version of sprintf
   * @private
   */
/**
   * Create an error file out of errors.md for development and a simple web link to the full errors
   * in production mode.
   * @private
   */
var Zf=
/* */
function(e){var t,n;function r(t){var n;if("production"===process.env.NODE_ENV)n=e.call(this,"An error occurred. See https://github.com/styled-components/polished/blob/master/src/error/errors.md#"+t+" for more information.")||this;else{for(var r=arguments.length,i=new Array(r>1?r-1:0),a=1;a<r;a++)i[a-1]=arguments[a];n=e.call(this,function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];var r,i=t[0],a=[];for(r=1;r<t.length;r+=1)a.push(t[r]);return a.forEach(function(e){i=i.replace(/%[a-z]/,e)}),i}.apply(void 0,[Yf[t]].concat(i)))||this}return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(n)}return n=e,(t=r).prototype=Object.create(n.prototype),t.prototype.constructor=t,t.__proto__=n,r}(
/* */
Xf(Error));function Jf(e){return Math.round(255*e)}function Qf(e,t,n){return Jf(e)+","+Jf(t)+","+Jf(n)}function Kf(e,t,n,r){if(void 0===r&&(r=Qf),0===t)
// achromatic
return r(n,n,n);// formular from https://en.wikipedia.org/wiki/HSL_and_HSV
var i=e%360/60,a=(1-Math.abs(2*n-1))*t,o=a*(1-Math.abs(i%2-1)),s=0,c=0,l=0;i>=0&&i<1?(s=a,c=o):i>=1&&i<2?(s=o,c=a):i>=2&&i<3?(c=a,l=o):i>=3&&i<4?(c=o,l=a):i>=4&&i<5?(s=o,l=a):i>=5&&i<6&&(s=a,l=o);var h=n-a/2;return r(s+h,c+h,l+h)}var $f={aliceblue:"f0f8ff",antiquewhite:"faebd7",aqua:"00ffff",aquamarine:"7fffd4",azure:"f0ffff",beige:"f5f5dc",bisque:"ffe4c4",black:"000",blanchedalmond:"ffebcd",blue:"0000ff",blueviolet:"8a2be2",brown:"a52a2a",burlywood:"deb887",cadetblue:"5f9ea0",chartreuse:"7fff00",chocolate:"d2691e",coral:"ff7f50",cornflowerblue:"6495ed",cornsilk:"fff8dc",crimson:"dc143c",cyan:"00ffff",darkblue:"00008b",darkcyan:"008b8b",darkgoldenrod:"b8860b",darkgray:"a9a9a9",darkgreen:"006400",darkgrey:"a9a9a9",darkkhaki:"bdb76b",darkmagenta:"8b008b",darkolivegreen:"556b2f",darkorange:"ff8c00",darkorchid:"9932cc",darkred:"8b0000",darksalmon:"e9967a",darkseagreen:"8fbc8f",darkslateblue:"483d8b",darkslategray:"2f4f4f",darkslategrey:"2f4f4f",darkturquoise:"00ced1",darkviolet:"9400d3",deeppink:"ff1493",deepskyblue:"00bfff",dimgray:"696969",dimgrey:"696969",dodgerblue:"1e90ff",firebrick:"b22222",floralwhite:"fffaf0",forestgreen:"228b22",fuchsia:"ff00ff",gainsboro:"dcdcdc",ghostwhite:"f8f8ff",gold:"ffd700",goldenrod:"daa520",gray:"808080",green:"008000",greenyellow:"adff2f",grey:"808080",honeydew:"f0fff0",hotpink:"ff69b4",indianred:"cd5c5c",indigo:"4b0082",ivory:"fffff0",khaki:"f0e68c",lavender:"e6e6fa",lavenderblush:"fff0f5",lawngreen:"7cfc00",lemonchiffon:"fffacd",lightblue:"add8e6",lightcoral:"f08080",lightcyan:"e0ffff",lightgoldenrodyellow:"fafad2",lightgray:"d3d3d3",lightgreen:"90ee90",lightgrey:"d3d3d3",lightpink:"ffb6c1",lightsalmon:"ffa07a",lightseagreen:"20b2aa",lightskyblue:"87cefa",lightslategray:"789",lightslategrey:"789",lightsteelblue:"b0c4de",lightyellow:"ffffe0",lime:"0f0",limegreen:"32cd32",linen:"faf0e6",magenta:"f0f",maroon:"800000",mediumaquamarine:"66cdaa",mediumblue:"0000cd",mediumorchid:"ba55d3",mediumpurple:"9370db",mediumseagreen:"3cb371",mediumslateblue:"7b68ee",mediumspringgreen:"00fa9a",mediumturquoise:"48d1cc",mediumvioletred:"c71585",midnightblue:"191970",mintcream:"f5fffa",mistyrose:"ffe4e1",moccasin:"ffe4b5",navajowhite:"ffdead",navy:"000080",oldlace:"fdf5e6",olive:"808000",olivedrab:"6b8e23",orange:"ffa500",orangered:"ff4500",orchid:"da70d6",palegoldenrod:"eee8aa",palegreen:"98fb98",paleturquoise:"afeeee",palevioletred:"db7093",papayawhip:"ffefd5",peachpuff:"ffdab9",peru:"cd853f",pink:"ffc0cb",plum:"dda0dd",powderblue:"b0e0e6",purple:"800080",rebeccapurple:"639",red:"f00",rosybrown:"bc8f8f",royalblue:"4169e1",saddlebrown:"8b4513",salmon:"fa8072",sandybrown:"f4a460",seagreen:"2e8b57",seashell:"fff5ee",sienna:"a0522d",silver:"c0c0c0",skyblue:"87ceeb",slateblue:"6a5acd",slategray:"708090",slategrey:"708090",snow:"fffafa",springgreen:"00ff7f",steelblue:"4682b4",tan:"d2b48c",teal:"008080",thistle:"d8bfd8",tomato:"ff6347",turquoise:"40e0d0",violet:"ee82ee",wheat:"f5deb3",white:"fff",whitesmoke:"f5f5f5",yellow:"ff0",yellowgreen:"9acd32"
/**
     * Checks if a string is a CSS named color and returns its equivalent hex value, otherwise returns the original color.
     * @private
     */};var ep=/^#[a-fA-F0-9]{6}$/,tp=/^#[a-fA-F0-9]{8}$/,np=/^#[a-fA-F0-9]{3}$/,rp=/^#[a-fA-F0-9]{4}$/,ip=/^rgb\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*\)$/,ap=/^rgba\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*([-+]?[0-9]*[.]?[0-9]+)\s*\)$/,op=/^hsl\(\s*(\d{0,3}[.]?[0-9]+)\s*,\s*(\d{1,3})%\s*,\s*(\d{1,3})%\s*\)$/,sp=/^hsla\(\s*(\d{0,3}[.]?[0-9]+)\s*,\s*(\d{1,3})%\s*,\s*(\d{1,3})%\s*,\s*([-+]?[0-9]*[.]?[0-9]+)\s*\)$/;
/**
   * Returns an RgbColor or RgbaColor object. This utility function is only useful
   * if want to extract a color component. With the color util `toColorString` you
   * can convert a RgbColor or RgbaColor object back to a string.
   *
   * @example
   * // Assigns `{ red: 255, green: 0, blue: 0 }` to color1
   * const color1 = parseToRgb('rgb(255, 0, 0)');
   * // Assigns `{ red: 92, green: 102, blue: 112, alpha: 0.75 }` to color2
   * const color2 = parseToRgb('hsla(210, 10%, 40%, 0.75)');
   */
function cp(e){if("string"!=typeof e)throw new Zf(3);var t=function(e){if("string"!=typeof e)return e;var t=e.toLowerCase();return $f[t]?"#"+$f[t]:e}(e);if(t.match(ep))return{red:parseInt(""+t[1]+t[2],16),green:parseInt(""+t[3]+t[4],16),blue:parseInt(""+t[5]+t[6],16)};if(t.match(tp)){var n=parseFloat((parseInt(""+t[7]+t[8],16)/255).toFixed(2));return{red:parseInt(""+t[1]+t[2],16),green:parseInt(""+t[3]+t[4],16),blue:parseInt(""+t[5]+t[6],16),alpha:n}}if(t.match(np))return{red:parseInt(""+t[1]+t[1],16),green:parseInt(""+t[2]+t[2],16),blue:parseInt(""+t[3]+t[3],16)};if(t.match(rp)){var r=parseFloat((parseInt(""+t[4]+t[4],16)/255).toFixed(2));return{red:parseInt(""+t[1]+t[1],16),green:parseInt(""+t[2]+t[2],16),blue:parseInt(""+t[3]+t[3],16),alpha:r}}var i=ip.exec(t);if(i)return{red:parseInt(""+i[1],10),green:parseInt(""+i[2],10),blue:parseInt(""+i[3],10)};var a=ap.exec(t);if(a)return{red:parseInt(""+a[1],10),green:parseInt(""+a[2],10),blue:parseInt(""+a[3],10),alpha:parseFloat(""+a[4])};var o=op.exec(t);if(o){var s="rgb("+Kf(parseInt(""+o[1],10),parseInt(""+o[2],10)/100,parseInt(""+o[3],10)/100)+")",c=ip.exec(s);if(!c)throw new Zf(4,t,s);return{red:parseInt(""+c[1],10),green:parseInt(""+c[2],10),blue:parseInt(""+c[3],10)}}var l=sp.exec(t);if(l){var h="rgb("+Kf(parseInt(""+l[1],10),parseInt(""+l[2],10)/100,parseInt(""+l[3],10)/100)+")",u=ip.exec(h);if(!u)throw new Zf(4,t,h);return{red:parseInt(""+u[1],10),green:parseInt(""+u[2],10),blue:parseInt(""+u[3],10),alpha:parseFloat(""+l[4])}}throw new Zf(5)}
/**
   * Reduces hex values if possible e.g. #ff8866 to #f86
   * @private
   */var lp=function(e){return 7===e.length&&e[1]===e[2]&&e[3]===e[4]&&e[5]===e[6]?"#"+e[1]+e[3]+e[5]:e};function hp(e){var t=e.toString(16);return 1===t.length?"0"+t:t}
/**
   * Returns a string value for the color. The returned result is the smallest possible hex notation.
   *
   * @example
   * // Styles as object usage
   * const styles = {
   *   background: rgb(255, 205, 100),
   *   background: rgb({ red: 255, green: 205, blue: 100 }),
   * }
   *
   * // styled-components usage
   * const div = styled.div`
   *   background: ${rgb(255, 205, 100)};
   *   background: ${rgb({ red: 255, green: 205, blue: 100 })};
   * `
   *
   * // CSS in JS Output
   *
   * element {
   *   background: "#ffcd64";
   *   background: "#ffcd64";
   * }
   */function up(e,t,n){if("number"==typeof e&&"number"==typeof t&&"number"==typeof n)return lp("#"+hp(e)+hp(t)+hp(n));if("object"==typeof e&&void 0===t&&void 0===n)return lp("#"+hp(e.red)+hp(e.green)+hp(e.blue));throw new Zf(6)}
/**
   * Returns a string value for the color. The returned result is the smallest possible rgba or hex notation.
   *
   * Can also be used to fade a color by passing a hex value or named CSS color along with an alpha value.
   *
   * @example
   * // Styles as object usage
   * const styles = {
   *   background: rgba(255, 205, 100, 0.7),
   *   background: rgba({ red: 255, green: 205, blue: 100, alpha: 0.7 }),
   *   background: rgba(255, 205, 100, 1),
   *   background: rgba('#ffffff', 0.4),
   *   background: rgba('black', 0.7),
   * }
   *
   * // styled-components usage
   * const div = styled.div`
   *   background: ${rgba(255, 205, 100, 0.7)};
   *   background: ${rgba({ red: 255, green: 205, blue: 100, alpha: 0.7 })};
   *   background: ${rgba(255, 205, 100, 1)};
   *   background: ${rgba('#ffffff', 0.4)};
   *   background: ${rgba('black', 0.7)};
   * `
   *
   * // CSS in JS Output
   *
   * element {
   *   background: "rgba(255,205,100,0.7)";
   *   background: "rgba(255,205,100,0.7)";
   *   background: "#ffcd64";
   *   background: "rgba(255,255,255,0.4)";
   *   background: "rgba(0,0,0,0.7)";
   * }
   */ // eslint-disable-next-line no-redeclare
function dp(e){
// eslint-disable-line no-redeclare
// Type definitions taken from https://github.com/gcanti/flow-static-land/blob/master/src/Fun.js
// eslint-disable-next-line no-unused-vars
// eslint-disable-next-line no-unused-vars
// eslint-disable-next-line no-redeclare
return function e(t,n,r){return function(){
// eslint-disable-next-line prefer-rest-params
var i=r.concat(Array.prototype.slice.call(arguments));return i.length>=n?t.apply(this,i):e(t,n,i)}}(e,e.length,[])}
/**
   * Increases the opacity of a color. Its range for the amount is between 0 to 1.
   *
   *
   * @example
   * // Styles as object usage
   * const styles = {
   *   background: opacify(0.1, 'rgba(255, 255, 255, 0.9)');
   *   background: opacify(0.2, 'hsla(0, 0%, 100%, 0.5)'),
   *   background: opacify('0.5', 'rgba(255, 0, 0, 0.2)'),
   * }
   *
   * // styled-components usage
   * const div = styled.div`
   *   background: ${opacify(0.1, 'rgba(255, 255, 255, 0.9)')};
   *   background: ${opacify(0.2, 'hsla(0, 0%, 100%, 0.5)')},
   *   background: ${opacify('0.5', 'rgba(255, 0, 0, 0.2)')},
   * `
   *
   * // CSS in JS Output
   *
   * element {
   *   background: "#fff";
   *   background: "rgba(255,255,255,0.7)";
   *   background: "rgba(255,0,0,0.7)";
   * }
   */
function fp(e,t){if("transparent"===t)return t;var n,r,i,a=cp(t),o="number"==typeof a.alpha?a.alpha:1;return function(e,t,n,r){if("string"==typeof e&&"number"==typeof t){var i=cp(e);return"rgba("+i.red+","+i.green+","+i.blue+","+t+")"}if("number"==typeof e&&"number"==typeof t&&"number"==typeof n&&"number"==typeof r)return r>=1?up(e,t,n):"rgba("+e+","+t+","+n+","+r+")";if("object"==typeof e&&void 0===t&&void 0===n&&void 0===r)return e.alpha>=1?up(e.red,e.green,e.blue):"rgba("+e.red+","+e.green+","+e.blue+","+e.alpha+")";throw new Zf(7)}(Hf({},a,{alpha:(n=0,r=1,i=(100*o+100*parseFloat(e))/100,Math.max(n,Math.min(r,i)))}))}// prettier-ignore
var pp=
/* */
dp
/* ::<number | string, string, string> */(fp),mp=fd(function(e,t){
/**
   * Tween.js - Licensed under the MIT license
   * https://github.com/tweenjs/tween.js
   * ----------------------------------------------
   *
   * See https://github.com/tweenjs/tween.js/graphs/contributors for the full list of contributors.
   * Thank you all, you're awesome!
   */
var n=function(){this._tweens={},this._tweensAddedDuringUpdate={}};n.prototype={getAll:function(){return Object.keys(this._tweens).map(function(e){return this._tweens[e]}.bind(this))},removeAll:function(){this._tweens={}},add:function(e){this._tweens[e.getId()]=e,this._tweensAddedDuringUpdate[e.getId()]=e},remove:function(e){delete this._tweens[e.getId()],delete this._tweensAddedDuringUpdate[e.getId()]},update:function(e,t){var n=Object.keys(this._tweens);if(0===n.length)return!1;
// Tweens are updated in "batches". If you add a new tween during an update, then the
// new tween will be updated in the next batch.
// If you remove a tween during an update, it may or may not be updated. However,
// if the removed tween was added during the current batch, then it will not be updated.
for(e=void 0!==e?e:i.now();n.length>0;){this._tweensAddedDuringUpdate={};for(var r=0;r<n.length;r++){var a=this._tweens[n[r]];a&&!1===a.update(e)&&(a._isPlaying=!1,t||delete this._tweens[n[r]])}n=Object.keys(this._tweensAddedDuringUpdate)}return!0}};var r,i=new n;i.Group=n,i._nextId=0,i.nextId=function(){return i._nextId++},
// Include a performance.now polyfill.
// In node.js, use process.hrtime.
"undefined"==typeof window&&"undefined"!=typeof process&&process.hrtime?i.now=function(){var e=process.hrtime();
// Convert [seconds, nanoseconds] to milliseconds.
return 1e3*e[0]+e[1]/1e6}:"undefined"!=typeof window&&void 0!==window.performance&&void 0!==window.performance.now?
// This must be bound, because directly assigning this function
// leads to an invocation exception in Chrome.
i.now=window.performance.now.bind(window.performance):void 0!==Date.now?i.now=Date.now:i.now=function(){return(new Date).getTime()},i.Tween=function(e,t){this._object=e,this._valuesStart={},this._valuesEnd={},this._valuesStartRepeat={},this._duration=1e3,this._repeat=0,this._repeatDelayTime=void 0,this._yoyo=!1,this._isPlaying=!1,this._reversed=!1,this._delayTime=0,this._startTime=null,this._easingFunction=i.Easing.Linear.None,this._interpolationFunction=i.Interpolation.Linear,this._chainedTweens=[],this._onStartCallback=null,this._onStartCallbackFired=!1,this._onUpdateCallback=null,this._onCompleteCallback=null,this._onStopCallback=null,this._group=t||i,this._id=i.nextId()},i.Tween.prototype={getId:function(){return this._id},isPlaying:function(){return this._isPlaying},to:function(e,t){return this._valuesEnd=e,void 0!==t&&(this._duration=t),this},start:function(e){for(var t in this._group.add(this),this._isPlaying=!0,this._onStartCallbackFired=!1,this._startTime=void 0!==e?"string"==typeof e?i.now()+parseFloat(e):e:i.now(),this._startTime+=this._delayTime,this._valuesEnd){
// Check if an Array was provided as property value
if(this._valuesEnd[t]instanceof Array){if(0===this._valuesEnd[t].length)continue;
// Create a local copy of the Array with the start value at the front
this._valuesEnd[t]=[this._object[t]].concat(this._valuesEnd[t])}
// If `to()` specifies a property that doesn't exist in the source object,
// we should not set that property in the object
void 0!==this._object[t]&&(
// Save the starting value.
this._valuesStart[t]=this._object[t],this._valuesStart[t]instanceof Array==!1&&(this._valuesStart[t]*=1),this._valuesStartRepeat[t]=this._valuesStart[t]||0)}return this},stop:function(){return this._isPlaying?(this._group.remove(this),this._isPlaying=!1,null!==this._onStopCallback&&this._onStopCallback(this._object),this.stopChainedTweens(),this):this},end:function(){return this.update(this._startTime+this._duration),this},stopChainedTweens:function(){for(var e=0,t=this._chainedTweens.length;e<t;e++)this._chainedTweens[e].stop()},group:function(e){return this._group=e,this},delay:function(e){return this._delayTime=e,this},repeat:function(e){return this._repeat=e,this},repeatDelay:function(e){return this._repeatDelayTime=e,this},yoyo:function(e){return this._yoyo=e,this},easing:function(e){return this._easingFunction=e,this},interpolation:function(e){return this._interpolationFunction=e,this},chain:function(){return this._chainedTweens=arguments,this},onStart:function(e){return this._onStartCallback=e,this},onUpdate:function(e){return this._onUpdateCallback=e,this},onComplete:function(e){return this._onCompleteCallback=e,this},onStop:function(e){return this._onStopCallback=e,this},update:function(e){var t,n,r;if(e<this._startTime)return!0;for(t in!1===this._onStartCallbackFired&&(null!==this._onStartCallback&&this._onStartCallback(this._object),this._onStartCallbackFired=!0),n=(e-this._startTime)/this._duration,n=0===this._duration||n>1?1:n,r=this._easingFunction(n),this._valuesEnd)
// Don't update properties that do not exist in the source object
if(void 0!==this._valuesStart[t]){var i=this._valuesStart[t]||0,a=this._valuesEnd[t];a instanceof Array?this._object[t]=this._interpolationFunction(a,r):(
// Parses relative end values with start as base (e.g.: +10, -3)
"string"==typeof a&&(a="+"===a.charAt(0)||"-"===a.charAt(0)?i+parseFloat(a):parseFloat(a)),
// Protect against non numeric properties.
"number"==typeof a&&(this._object[t]=i+(a-i)*r))}if(null!==this._onUpdateCallback&&this._onUpdateCallback(this._object),1===n){if(this._repeat>0){
// Reassign starting values, restart by making startTime = now
for(t in isFinite(this._repeat)&&this._repeat--,this._valuesStartRepeat){if("string"==typeof this._valuesEnd[t]&&(this._valuesStartRepeat[t]=this._valuesStartRepeat[t]+parseFloat(this._valuesEnd[t])),this._yoyo){var o=this._valuesStartRepeat[t];this._valuesStartRepeat[t]=this._valuesEnd[t],this._valuesEnd[t]=o}this._valuesStart[t]=this._valuesStartRepeat[t]}return this._yoyo&&(this._reversed=!this._reversed),void 0!==this._repeatDelayTime?this._startTime=e+this._repeatDelayTime:this._startTime=e+this._delayTime,!0}null!==this._onCompleteCallback&&this._onCompleteCallback(this._object);for(var s=0,c=this._chainedTweens.length;s<c;s++)
// Make the chained tweens start exactly at the time they should,
// even if the `update()` method was called way past the duration of the tween
this._chainedTweens[s].start(this._startTime+this._duration);return!1}return!0}},i.Easing={Linear:{None:function(e){return e}},Quadratic:{In:function(e){return e*e},Out:function(e){return e*(2-e)},InOut:function(e){return(e*=2)<1?.5*e*e:-.5*(--e*(e-2)-1)}},Cubic:{In:function(e){return e*e*e},Out:function(e){return--e*e*e+1},InOut:function(e){return(e*=2)<1?.5*e*e*e:.5*((e-=2)*e*e+2)}},Quartic:{In:function(e){return e*e*e*e},Out:function(e){return 1- --e*e*e*e},InOut:function(e){return(e*=2)<1?.5*e*e*e*e:-.5*((e-=2)*e*e*e-2)}},Quintic:{In:function(e){return e*e*e*e*e},Out:function(e){return--e*e*e*e*e+1},InOut:function(e){return(e*=2)<1?.5*e*e*e*e*e:.5*((e-=2)*e*e*e*e+2)}},Sinusoidal:{In:function(e){return 1-Math.cos(e*Math.PI/2)},Out:function(e){return Math.sin(e*Math.PI/2)},InOut:function(e){return.5*(1-Math.cos(Math.PI*e))}},Exponential:{In:function(e){return 0===e?0:Math.pow(1024,e-1)},Out:function(e){return 1===e?1:1-Math.pow(2,-10*e)},InOut:function(e){return 0===e?0:1===e?1:(e*=2)<1?.5*Math.pow(1024,e-1):.5*(2-Math.pow(2,-10*(e-1)))}},Circular:{In:function(e){return 1-Math.sqrt(1-e*e)},Out:function(e){return Math.sqrt(1- --e*e)},InOut:function(e){return(e*=2)<1?-.5*(Math.sqrt(1-e*e)-1):.5*(Math.sqrt(1-(e-=2)*e)+1)}},Elastic:{In:function(e){return 0===e?0:1===e?1:-Math.pow(2,10*(e-1))*Math.sin(5*(e-1.1)*Math.PI)},Out:function(e){return 0===e?0:1===e?1:Math.pow(2,-10*e)*Math.sin(5*(e-.1)*Math.PI)+1},InOut:function(e){return 0===e?0:1===e?1:(e*=2)<1?-.5*Math.pow(2,10*(e-1))*Math.sin(5*(e-1.1)*Math.PI):.5*Math.pow(2,-10*(e-1))*Math.sin(5*(e-1.1)*Math.PI)+1}},Back:{In:function(e){var t=1.70158;return e*e*((t+1)*e-t)},Out:function(e){var t=1.70158;return--e*e*((t+1)*e+t)+1},InOut:function(e){var t=2.5949095;return(e*=2)<1?e*e*((t+1)*e-t)*.5:.5*((e-=2)*e*((t+1)*e+t)+2)}},Bounce:{In:function(e){return 1-i.Easing.Bounce.Out(1-e)},Out:function(e){return e<1/2.75?7.5625*e*e:e<2/2.75?7.5625*(e-=1.5/2.75)*e+.75:e<2.5/2.75?7.5625*(e-=2.25/2.75)*e+.9375:7.5625*(e-=2.625/2.75)*e+.984375},InOut:function(e){return e<.5?.5*i.Easing.Bounce.In(2*e):.5*i.Easing.Bounce.Out(2*e-1)+.5}}},i.Interpolation={Linear:function(e,t){var n=e.length-1,r=n*t,a=Math.floor(r),o=i.Interpolation.Utils.Linear;return t<0?o(e[0],e[1],r):t>1?o(e[n],e[n-1],n-r):o(e[a],e[a+1>n?n:a+1],r-a)},Bezier:function(e,t){for(var n=0,r=e.length-1,a=Math.pow,o=i.Interpolation.Utils.Bernstein,s=0;s<=r;s++)n+=a(1-t,r-s)*a(t,s)*e[s]*o(r,s);return n},CatmullRom:function(e,t){var n=e.length-1,r=n*t,a=Math.floor(r),o=i.Interpolation.Utils.CatmullRom;return e[0]===e[n]?(t<0&&(a=Math.floor(r=n*(1+t))),o(e[(a-1+n)%n],e[a],e[(a+1)%n],e[(a+2)%n],r-a)):t<0?e[0]-(o(e[0],e[0],e[1],e[1],-r)-e[0]):t>1?e[n]-(o(e[n],e[n],e[n-1],e[n-1],r-n)-e[n]):o(e[a?a-1:0],e[a],e[n<a+1?n:a+1],e[n<a+2?n:a+2],r-a)},Utils:{Linear:function(e,t,n){return(t-e)*n+e},Bernstein:function(e,t){var n=i.Interpolation.Utils.Factorial;return n(e)/n(t)/n(e-t)},Factorial:(r=[1],function(e){var t=1;if(r[e])return r[e];for(var n=e;n>1;n--)t*=n;return r[e]=t,t}),CatmullRom:function(e,t,n,r,i){var a=.5*(n-e),o=.5*(r-t),s=i*i;return(2*t-2*n+a+o)*(i*s)+(-3*t+3*n-2*a-o)*s+a*i+t}}},
// Node.js
e.exports=i});!function(e,t){void 0===t&&(t={});var n=t.insertAt;if(e&&"undefined"!=typeof document){var r=document.head||document.getElementsByTagName("head")[0],i=document.createElement("style");i.type="text/css","top"===n&&r.firstChild?r.insertBefore(i,r.firstChild):r.appendChild(i),i.styleSheet?i.styleSheet.cssText=e:i.appendChild(document.createTextNode(e))}}(".scene-nav-info {\n  bottom: 5px;\n  width: 100%;\n  text-align: center;\n  color: slategrey;\n  opacity: 0.7;\n  font-size: 10px;\n  pointer-events: none;\n}\n\n.scene-tooltip {\n  color: lavender;\n  font-size: 18px;\n  transform: translate(-50%, 25px);\n}\n\n.scene-nav-info, .scene-tooltip {\n  position: absolute;\n  font-family: Sans-serif;\n}");var gp=window.THREE?window.THREE:{WebGLRenderer:ca,Scene:ua,PerspectiveCamera:Zi,Raycaster:cl,Vector2:Lt,Vector3:Ct,Color:hn,EventDispatcher:r,MOUSE:c,Quaternion:Pt,Spherical:ul},vp=function(e){
/**
  	 * @author qiao / https://github.com/qiao
  	 * @author mrdoob / http://mrdoob.com
  	 * @author alteredq / http://alteredqualia.com/
  	 * @author WestLangley / http://github.com/WestLangley
  	 * @author erich666 / http://erichaines.com
  	 */
// This set of controls performs orbiting, dollying (zooming), and panning.
// Unlike TrackballControls, it maintains the "up" direction object.up (+Y by default).
//
//    Orbit - left mouse / touch: one finger move
//    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish
//    Pan - right mouse, or arrow keys / touch: three finter swipe
function t(t,n){this.object=t,this.domElement=void 0!==n?n:document,
// Set to false to disable this control
this.enabled=!0,
// "target" sets the location of focus, where the object orbits around
this.target=new e.Vector3,
// How far you can dolly in and out ( PerspectiveCamera only )
this.minDistance=0,this.maxDistance=1/0,
// How far you can zoom in and out ( OrthographicCamera only )
this.minZoom=0,this.maxZoom=1/0,
// How far you can orbit vertically, upper and lower limits.
// Range is 0 to Math.PI radians.
this.minPolarAngle=0,// radians
this.maxPolarAngle=Math.PI,// radians
// How far you can orbit horizontally, upper and lower limits.
// If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].
this.minAzimuthAngle=-1/0,// radians
this.maxAzimuthAngle=1/0,// radians
// Set to true to enable damping (inertia)
// If damping is enabled, you must call controls.update() in your animation loop
this.enableDamping=!1,this.dampingFactor=.25,
// This option actually enables dollying in and out; left as "zoom" for backwards compatibility.
// Set to false to disable zooming
this.enableZoom=!0,this.zoomSpeed=1,
// Set to false to disable rotating
this.enableRotate=!0,this.rotateSpeed=1,
// Set to false to disable panning
this.enablePan=!0,this.keyPanSpeed=7,// pixels moved per arrow key push
// Set to true to automatically rotate around the target
// If auto-rotate is enabled, you must call controls.update() in your animation loop
this.autoRotate=!1,this.autoRotateSpeed=2,// 30 seconds per round when fps is 60
// Set to false to disable use of the keys
this.enableKeys=!0,
// The four arrow keys
this.keys={LEFT:37,UP:38,RIGHT:39,BOTTOM:40},
// Mouse buttons
this.mouseButtons={ORBIT:e.MOUSE.LEFT,ZOOM:e.MOUSE.MIDDLE,PAN:e.MOUSE.RIGHT},
// for reset
this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,
//
// public methods
//
this.getPolarAngle=function(){return h.phi},this.getAzimuthalAngle=function(){return h.theta},this.reset=function(){r.target.copy(r.target0),r.object.position.copy(r.position0),r.object.zoom=r.zoom0,r.object.updateProjectionMatrix(),r.dispatchEvent(i),r.update(),c=s.NONE},
// this method is exposed, but perhaps it would be better if we can make it private...
this.update=function(){var n=new e.Vector3,a=(new e.Quaternion).setFromUnitVectors(t.up,new e.Vector3(0,1,0)),o=a.clone().inverse(),m=new e.Vector3,g=new e.Quaternion;
// so camera.up is the orbit axis
return function(){var e=r.object.position;
// update condition is:
// min(camera displacement, camera rotation in radians)^2 > EPS
// using small-angle approximation cos(x/2) = 1 - x^2 / 8
return n.copy(e).sub(r.target),
// rotate offset to "y-axis-is-up" space
n.applyQuaternion(a),
// angle from z-axis around y-axis
h.setFromVector3(n),r.autoRotate&&c===s.NONE&&S(2*Math.PI/60/60*r.autoRotateSpeed),h.theta+=u.theta,h.phi+=u.phi,
// restrict theta to be between desired limits
h.theta=Math.max(r.minAzimuthAngle,Math.min(r.maxAzimuthAngle,h.theta)),
// restrict phi to be between desired limits
h.phi=Math.max(r.minPolarAngle,Math.min(r.maxPolarAngle,h.phi)),h.makeSafe(),h.radius*=d,
// restrict radius to be between desired limits
h.radius=Math.max(r.minDistance,Math.min(r.maxDistance,h.radius)),
// move target to panned location
r.target.add(f),n.setFromSpherical(h),
// rotate offset back to "camera-up-vector-is-up" space
n.applyQuaternion(o),e.copy(r.target).add(n),r.object.lookAt(r.target),!0===r.enableDamping?(u.theta*=1-r.dampingFactor,u.phi*=1-r.dampingFactor):u.set(0,0,0),d=1,f.set(0,0,0),!!(p||m.distanceToSquared(r.object.position)>l||8*(1-g.dot(r.object.quaternion))>l)&&(r.dispatchEvent(i),m.copy(r.object.position),g.copy(r.object.quaternion),p=!1,!0)}}(),this.dispose=function(){r.domElement.removeEventListener("contextmenu",F,!1),r.domElement.removeEventListener("mousedown",O,!1),r.domElement.removeEventListener("wheel",D,!1),r.domElement.removeEventListener("touchstart",k,!1),r.domElement.removeEventListener("touchend",U,!1),r.domElement.removeEventListener("touchmove",B,!1),document.removeEventListener("mousemove",N,!1),document.removeEventListener("mouseup",I,!1),window.removeEventListener("keydown",z,!1)};
//
// internals
//
var r=this,i={type:"change"},a={type:"start"},o={type:"end"},s={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_DOLLY:4,TOUCH_PAN:5},c=s.NONE,l=1e-6,h=new e.Spherical,u=new e.Spherical,d=1,f=new e.Vector3,p=!1,m=new e.Vector2,g=new e.Vector2,v=new e.Vector2,y=new e.Vector2,b=new e.Vector2,x=new e.Vector2,w=new e.Vector2,_=new e.Vector2,M=new e.Vector2;function E(){return Math.pow(.95,r.zoomSpeed)}function S(e){u.theta-=e}function T(e){u.phi-=e}var A=function(){var t=new e.Vector3;return function(e,n){t.setFromMatrixColumn(n,0),// get X column of objectMatrix
t.multiplyScalar(-e),f.add(t)}}(),L=function(){var t=new e.Vector3;return function(e,n){t.setFromMatrixColumn(n,1),// get Y column of objectMatrix
t.multiplyScalar(e),f.add(t)}}(),P=function(){var t=new e.Vector3;return function(n,i){var a=r.domElement===document?r.domElement.body:r.domElement;if(r.object instanceof e.PerspectiveCamera){
// perspective
var o=r.object.position;t.copy(o).sub(r.target);var s=t.length();
// half of the fov is center to top of screen
s*=Math.tan(r.object.fov/2*Math.PI/180),
// we actually don't use screenWidth, since perspective camera is fixed to screen height
A(2*n*s/a.clientHeight,r.object.matrix),L(2*i*s/a.clientHeight,r.object.matrix)}else r.object instanceof e.OrthographicCamera?(
// orthographic
A(n*(r.object.right-r.object.left)/r.object.zoom/a.clientWidth,r.object.matrix),L(i*(r.object.top-r.object.bottom)/r.object.zoom/a.clientHeight,r.object.matrix)):(
// camera neither orthographic nor perspective
console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),r.enablePan=!1)}}();function C(t){r.object instanceof e.PerspectiveCamera?d/=t:r.object instanceof e.OrthographicCamera?(r.object.zoom=Math.max(r.minZoom,Math.min(r.maxZoom,r.object.zoom*t)),r.object.updateProjectionMatrix(),p=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),r.enableZoom=!1)}function R(t){r.object instanceof e.PerspectiveCamera?d*=t:r.object instanceof e.OrthographicCamera?(r.object.zoom=Math.max(r.minZoom,Math.min(r.maxZoom,r.object.zoom/t)),r.object.updateProjectionMatrix(),p=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),r.enableZoom=!1)}
//
// event callbacks - update the object state
//
//
// event handlers - FSM: listen for events and reset state
//
function O(e){if(!1!==r.enabled){if(e.preventDefault(),e.button===r.mouseButtons.ORBIT){if(!1===r.enableRotate)return;!function(e){
//console.log( 'handleMouseDownRotate' );
m.set(e.clientX,e.clientY)}(e),c=s.ROTATE}else if(e.button===r.mouseButtons.ZOOM){if(!1===r.enableZoom)return;!function(e){
//console.log( 'handleMouseDownDolly' );
w.set(e.clientX,e.clientY)}(e),c=s.DOLLY}else if(e.button===r.mouseButtons.PAN){if(!1===r.enablePan)return;!function(e){
//console.log( 'handleMouseDownPan' );
y.set(e.clientX,e.clientY)}(e),c=s.PAN}c!==s.NONE&&(document.addEventListener("mousemove",N,!1),document.addEventListener("mouseup",I,!1),r.dispatchEvent(a))}}function N(e){if(!1!==r.enabled)if(e.preventDefault(),c===s.ROTATE){if(!1===r.enableRotate)return;!function(e){
//console.log( 'handleMouseMoveRotate' );
g.set(e.clientX,e.clientY),v.subVectors(g,m);var t=r.domElement===document?r.domElement.body:r.domElement;
// rotating across whole screen goes 360 degrees around
S(2*Math.PI*v.x/t.clientWidth*r.rotateSpeed),
// rotating up and down along whole screen attempts to go 360, but limited to 180
T(2*Math.PI*v.y/t.clientHeight*r.rotateSpeed),m.copy(g),r.update()}(e)}else if(c===s.DOLLY){if(!1===r.enableZoom)return;!function(e){
//console.log( 'handleMouseMoveDolly' );
_.set(e.clientX,e.clientY),M.subVectors(_,w),M.y>0?C(E()):M.y<0&&R(E()),w.copy(_),r.update()}(e)}else if(c===s.PAN){if(!1===r.enablePan)return;!function(e){
//console.log( 'handleMouseMovePan' );
b.set(e.clientX,e.clientY),x.subVectors(b,y),P(x.x,x.y),y.copy(b),r.update()}(e)}}function I(e){!1!==r.enabled&&(document.removeEventListener("mousemove",N,!1),document.removeEventListener("mouseup",I,!1),r.dispatchEvent(o),c=s.NONE)}function D(e){!1===r.enabled||!1===r.enableZoom||c!==s.NONE&&c!==s.ROTATE||(e.preventDefault(),e.stopPropagation(),function(e){
//console.log( 'handleMouseWheel' );
e.deltaY<0?R(E()):e.deltaY>0&&C(E()),r.update()}(e),r.dispatchEvent(a),// not sure why these are here...
r.dispatchEvent(o))}function z(e){!1!==r.enabled&&!1!==r.enableKeys&&!1!==r.enablePan&&function(e){
//console.log( 'handleKeyDown' );
switch(e.keyCode){case r.keys.UP:P(0,r.keyPanSpeed),r.update();break;case r.keys.BOTTOM:P(0,-r.keyPanSpeed),r.update();break;case r.keys.LEFT:P(r.keyPanSpeed,0),r.update();break;case r.keys.RIGHT:P(-r.keyPanSpeed,0),r.update()}}(e)}function k(e){if(!1!==r.enabled){switch(e.touches.length){case 1:// one-fingered touch: rotate
if(!1===r.enableRotate)return;!function(e){
//console.log( 'handleTouchStartRotate' );
m.set(e.touches[0].pageX,e.touches[0].pageY)}(e),c=s.TOUCH_ROTATE;break;case 2:// two-fingered touch: dolly
if(!1===r.enableZoom)return;!function(e){
//console.log( 'handleTouchStartDolly' );
var t=e.touches[0].pageX-e.touches[1].pageX,n=e.touches[0].pageY-e.touches[1].pageY,r=Math.sqrt(t*t+n*n);w.set(0,r)}(e),c=s.TOUCH_DOLLY;break;case 3:// three-fingered touch: pan
if(!1===r.enablePan)return;!function(e){
//console.log( 'handleTouchStartPan' );
y.set(e.touches[0].pageX,e.touches[0].pageY)}(e),c=s.TOUCH_PAN;break;default:c=s.NONE}c!==s.NONE&&r.dispatchEvent(a)}}function B(e){if(!1!==r.enabled)switch(e.preventDefault(),e.stopPropagation(),e.touches.length){case 1:// one-fingered touch: rotate
if(!1===r.enableRotate)return;if(c!==s.TOUCH_ROTATE)return;// is this needed?...
!function(e){
//console.log( 'handleTouchMoveRotate' );
g.set(e.touches[0].pageX,e.touches[0].pageY),v.subVectors(g,m);var t=r.domElement===document?r.domElement.body:r.domElement;
// rotating across whole screen goes 360 degrees around
S(2*Math.PI*v.x/t.clientWidth*r.rotateSpeed),
// rotating up and down along whole screen attempts to go 360, but limited to 180
T(2*Math.PI*v.y/t.clientHeight*r.rotateSpeed),m.copy(g),r.update()}(e);break;case 2:// two-fingered touch: dolly
if(!1===r.enableZoom)return;if(c!==s.TOUCH_DOLLY)return;// is this needed?...
!function(e){
//console.log( 'handleTouchMoveDolly' );
var t=e.touches[0].pageX-e.touches[1].pageX,n=e.touches[0].pageY-e.touches[1].pageY,i=Math.sqrt(t*t+n*n);_.set(0,i),M.subVectors(_,w),M.y>0?R(E()):M.y<0&&C(E()),w.copy(_),r.update()}(e);break;case 3:// three-fingered touch: pan
if(!1===r.enablePan)return;if(c!==s.TOUCH_PAN)return;// is this needed?...
!function(e){
//console.log( 'handleTouchMovePan' );
b.set(e.touches[0].pageX,e.touches[0].pageY),x.subVectors(b,y),P(x.x,x.y),y.copy(b),r.update()}(e);break;default:c=s.NONE}}function U(e){!1!==r.enabled&&(r.dispatchEvent(o),c=s.NONE)}function F(e){e.preventDefault()}
//
r.domElement.addEventListener("contextmenu",F,!1),r.domElement.addEventListener("mousedown",O,!1),r.domElement.addEventListener("wheel",D,!1),r.domElement.addEventListener("touchstart",k,!1),r.domElement.addEventListener("touchend",U,!1),r.domElement.addEventListener("touchmove",B,!1),window.addEventListener("keydown",z,!1),
// force an update at start
this.update()}return t.prototype=Object.create(e.EventDispatcher.prototype),t.prototype.constructor=t,Object.defineProperties(t.prototype,{center:{get:function(){return console.warn("THREE.OrbitControls: .center has been renamed to .target"),this.target}},
// backward compatibility
noZoom:{get:function(){return console.warn("THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead."),!this.enableZoom},set:function(e){console.warn("THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead."),this.enableZoom=!e}},noRotate:{get:function(){return console.warn("THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead."),!this.enableRotate},set:function(e){console.warn("THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead."),this.enableRotate=!e}},noPan:{get:function(){return console.warn("THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead."),!this.enablePan},set:function(e){console.warn("THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead."),this.enablePan=!e}},noKeys:{get:function(){return console.warn("THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead."),!this.enableKeys},set:function(e){console.warn("THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead."),this.enableKeys=!e}},staticMoving:{get:function(){return console.warn("THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead."),!this.enableDamping},set:function(e){console.warn("THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead."),this.enableDamping=!e}},dynamicDampingFactor:{get:function(){return console.warn("THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead."),this.dampingFactor},set:function(e){console.warn("THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead."),this.dampingFactor=e}}}),t}(gp),yp=(function(e){e.FlyControls=function(t,n,r){this.object=t,r=r||{},this.domElement=void 0!==n?n:document,n&&this.domElement.setAttribute("tabindex",-1),
// API
this.movementSpeed=void 0===r.movementSpeed?1:r.movementSpeed,this.rollSpeed=void 0===r.rollSpeed?.005:r.rollSpeed,this.dragToLook=!0,this.autoForward=!1,
// disable default target object behavior
// internals
this.tmpQuaternion=new e.Quaternion,this.mouseStatus=0,this.moveState={up:0,down:0,left:0,right:0,forward:0,back:0,pitchUp:0,pitchDown:0,yawLeft:0,yawRight:0,rollLeft:0,rollRight:0},this.moveVector=new e.Vector3(0,0,0),this.rotationVector=new e.Vector3(0,0,0);var i=Date.now();function a(e,t){return function(){t.apply(e,arguments)}}this.handleEvent=function(e){"function"==typeof this[e.type]&&this[e.type](e)},this.keydown=function(e){if(!e.altKey){switch(e.keyCode){case 16:/* shift */this.movementSpeedMultiplier=.1;break;case 87:/*W*/this.moveState.forward=1;break;case 83:/*S*/this.moveState.back=1;break;case 65:/*A*/this.moveState.left=1;break;case 68:/*D*/this.moveState.right=1;break;case 82:/*R*/this.moveState.up=1;break;case 70:/*F*/this.moveState.down=1;break;case 38:/*up*/this.moveState.pitchUp=1;break;case 40:/*down*/this.moveState.pitchDown=1;break;case 37:/*left*/this.moveState.yawLeft=1;break;case 39:/*right*/this.moveState.yawRight=1;break;case 81:/*Q*/this.moveState.rollLeft=1;break;case 69:/*E*/this.moveState.rollRight=1}[38,40,37,39].indexOf(e.keyCode)>-1&&e.preventDefault(),this.updateMovementVector(),this.updateRotationVector()}},this.keyup=function(e){switch(e.keyCode){case 16:/* shift */this.movementSpeedMultiplier=1;break;case 87:/*W*/this.moveState.forward=0;break;case 83:/*S*/this.moveState.back=0;break;case 65:/*A*/this.moveState.left=0;break;case 68:/*D*/this.moveState.right=0;break;case 82:/*R*/this.moveState.up=0;break;case 70:/*F*/this.moveState.down=0;break;case 38:/*up*/this.moveState.pitchUp=0;break;case 40:/*down*/this.moveState.pitchDown=0;break;case 37:/*left*/this.moveState.yawLeft=0;break;case 39:/*right*/this.moveState.yawRight=0;break;case 81:/*Q*/this.moveState.rollLeft=0;break;case 69:/*E*/this.moveState.rollRight=0}this.updateMovementVector(),this.updateRotationVector()},this.mousedown=function(e){if(this.domElement!==document&&this.domElement.focus(),e.preventDefault(),e.stopPropagation(),this.dragToLook)this.mouseStatus++;else{switch(e.button){case 0:this.moveState.forward=1;break;case 2:this.moveState.back=1}this.updateMovementVector()}},this.mousemove=function(e){if(!this.dragToLook||this.mouseStatus>0){var t=this.getContainerDimensions(),n=t.size[0]/2,r=t.size[1]/2;this.moveState.yawLeft=-(e.pageX-t.offset[0]-n)/n,this.moveState.pitchDown=(e.pageY-t.offset[1]-r)/r,this.updateRotationVector()}},this.mouseout=function(e){e.preventDefault(),e.stopPropagation(),this.moveState={up:0,down:0,left:0,right:0,forward:0,back:0,pitchUp:0,pitchDown:0,yawLeft:0,yawRight:0,rollLeft:0,rollRight:0},this.updateRotationVector(),this.updateMovementVector()},this.mouseup=function(e){if(e.preventDefault(),e.stopPropagation(),this.dragToLook)this.mouseStatus--,this.moveState.yawLeft=this.moveState.pitchDown=0;else{switch(e.button){case 0:this.moveState.forward=0;break;case 2:this.moveState.back=0}this.updateMovementVector()}this.updateRotationVector()},this.update=function(e){var t=Date.now(),n=(e=(t-i)/10)*this.movementSpeed,r=e*this.rollSpeed;this.object.translateX(this.moveVector.x*n),this.object.translateY(this.moveVector.y*n),this.object.translateZ(this.moveVector.z*n),this.tmpQuaternion.set(this.rotationVector.x*r,this.rotationVector.y*r,this.rotationVector.z*r,1).normalize(),this.object.quaternion.multiply(this.tmpQuaternion),
// expose the rotation vector for convenience
this.object.rotation.setFromQuaternion(this.object.quaternion,this.object.rotation.order),i=t},this.updateMovementVector=function(){var e=this.moveState.forward||this.autoForward&&!this.moveState.back?1:0;this.moveVector.x=-this.moveState.left+this.moveState.right,this.moveVector.y=-this.moveState.down+this.moveState.up,this.moveVector.z=-e+this.moveState.back},this.updateRotationVector=function(){this.rotationVector.x=-this.moveState.pitchDown+this.moveState.pitchUp,this.rotationVector.y=-this.moveState.yawRight+this.moveState.yawLeft,this.rotationVector.z=-this.moveState.rollRight+this.moveState.rollLeft},this.getContainerDimensions=function(){return this.domElement!=document?{size:[this.domElement.offsetWidth,this.domElement.offsetHeight],offset:[this.domElement.offsetLeft,this.domElement.offsetTop]}:{size:[window.innerWidth,window.innerHeight],offset:[0,0]}},this.domElement.addEventListener("contextmenu",function(e){e.preventDefault()},!1),this.domElement.addEventListener("mousemove",a(this,this.mousemove),!1),this.domElement.addEventListener("mousedown",a(this,this.mousedown),!1),this.domElement.addEventListener("mouseup",a(this,this.mouseup),!1),this.domElement.addEventListener("mouseout",a(this,this.mouseout),!1),this.domElement.addEventListener("keydown",a(this,this.keydown),!1),this.domElement.addEventListener("keyup",a(this,this.keyup),!1),this.updateMovementVector(),this.updateRotationVector()}}(gp),gp.FlyControls),bp=md({props:{width:{default:window.innerWidth,onChange:function(e,t,n){isNaN(e)&&(t.width=n)}},height:{default:window.innerHeight,onChange:function(e,t,n){isNaN(e)&&(t.height=n)}},backgroundColor:{default:"#000011",onChange:function(e,t){if(t.renderer){var n=cp(e).alpha;void 0===n&&(n=1),t.renderer.setClearColor(new gp.Color(pp(1,e)),n)}},triggerUpdate:!1},showNavInfo:{default:!0},objects:{default:[],onChange:function(e,t){(t.prevObjs||[]).forEach(function(e){return t.scene.remove(e)}),// Clear the place
t.prevObjs=e,e.forEach(function(e){return t.scene.add(e)})},triggerUpdate:!1},enablePointerInteraction:{default:!0,onChange:function(e,t){
// Reset hover state
t.hoverObj=null,t.toolTipElem&&(t.toolTipElem.innerHTML="")},triggerUpdate:!1},lineHoverPrecision:{default:1,triggerUpdate:!1},hoverOrderComparator:{default:function(){return-1},triggerUpdate:!1},
// keep existing order by default
tooltipContent:{triggerUpdate:!1},onHover:{default:function(){},triggerUpdate:!1},onClick:{default:function(){},triggerUpdate:!1},onRightClick:{triggerUpdate:!1}},methods:{tick:function(e){if(e.initialised){if(e.controls.update&&e.controls.update(),e.renderer.render(e.scene,e.camera),e.enablePointerInteraction){
// Update tooltip and trigger onHover events
var t=null;if(!e.controlsDragging){var n=new gp.Raycaster;n.linePrecision=e.lineHoverPrecision,n.setFromCamera(e.mousePos,e.camera);var r=n.intersectObjects(e.objects,!0).map(function(e){return e.object}).sort(e.hoverOrderComparator);t=!e.controlsDragging&&r.length?r[0]:null}t!==e.hoverObj&&(e.onHover(t,e.hoverObj),e.toolTipElem.innerHTML=t&&vd(e.tooltipContent)(t)||"",e.hoverObj=t)}mp.update()}return this},cameraPosition:function(e,t,n,r){var i=e.camera;// Setter
if(t&&e.initialised){var a=t,o=n||{x:0,y:0,z:0};if(r){var s=Object.assign({},i.position),c=u();new mp.Tween(s).to(a,r).easing(mp.Easing.Quadratic.Out).onUpdate(l).start(),// Face direction in 1/3rd of time
new mp.Tween(c).to(o,r/3).easing(mp.Easing.Quadratic.Out).onUpdate(h).start()}else
// no animation
l(a),h(o);return this}// Getter
return Object.assign({},i.position,{lookAt:u()});//
function l(e){var t=e.x,n=e.y,r=e.z;void 0!==t&&(i.position.x=t),void 0!==n&&(i.position.y=n),void 0!==r&&(i.position.z=r)}function h(t){e.controls.target=new gp.Vector3(t.x,t.y,t.z)}function u(){return Object.assign(new gp.Vector3(0,0,-1e3).applyQuaternion(i.quaternion).add(i.position))}},renderer:function(e){return e.renderer},scene:function(e){return e.scene},camera:function(e){return e.camera},controls:function(e){return e.controls},tbControls:function(e){return e.controls}// to be deprecated
},stateInit:function(){return{scene:new gp.Scene,camera:new gp.PerspectiveCamera}},init:function(e,t,n){var r=n.controlType,i=void 0===r?"trackball":r,a=n.rendererConfig,o=void 0===a?{}:a;
// Wipe DOM
e.innerHTML="",// Add relative container
e.appendChild(t.container=document.createElement("div")),t.container.style.position="relative",// Add nav info section
t.container.appendChild(t.navInfo=document.createElement("div")),t.navInfo.className="scene-nav-info",t.navInfo.textContent={orbit:"Left-click: rotate, Mouse-wheel/middle-click: zoom, Right-click: pan",trackball:"Left-click: rotate, Mouse-wheel/middle-click: zoom, Right-click: pan",fly:"WASD: move, R|F: up | down, Q|E: roll, up|down: pitch, left|right: yaw"}[i]||"",t.navInfo.style.display=t.showNavInfo?null:"none",// Setup tooltip
t.toolTipElem=document.createElement("div"),t.toolTipElem.classList.add("scene-tooltip"),t.container.appendChild(t.toolTipElem),// Capture mouse coords on move
t.mousePos=new gp.Vector2,t.mousePos.x=-2,// Initialize off canvas
t.mousePos.y=-2,t.container.addEventListener("mousemove",function(e){if(t.enablePointerInteraction){
// update the mouse pos
var n=(i=t.container,a=i.getBoundingClientRect(),o=window.pageXOffset||document.documentElement.scrollLeft,s=window.pageYOffset||document.documentElement.scrollTop,{top:a.top+s,left:a.left+o}),r={x:e.pageX-n.left,y:e.pageY-n.top};t.mousePos.x=r.x/t.width*2-1,t.mousePos.y=-r.y/t.height*2+1,// Move tooltip
t.toolTipElem.style.top="".concat(r.y,"px"),t.toolTipElem.style.left="".concat(r.x,"px")}var i,a,o,s},!1),// Handle click events on objs
t.container.addEventListener("click",function(e){t.ignoreOneClick?t.ignoreOneClick=!1:t.hoverObj&&t.onClick(t.hoverObj)},!1),// Handle right-click events
t.container.addEventListener("contextmenu",function(e){return!t.onRightClick||(// default contextmenu behavior
e.preventDefault(),t.hoverObj&&t.onRightClick(t.hoverObj),!1)},!1),// Setup renderer, camera and controls
t.renderer=new gp.WebGLRenderer(Object.assign({antialias:!0,alpha:!0},o)),t.renderer.setPixelRatio(window.devicePixelRatio);var s=cp(t.backgroundColor).alpha;void 0===s&&(s=1),t.renderer.setClearColor(new gp.Color(pp(1,t.backgroundColor)),s),t.container.appendChild(t.renderer.domElement),// configure controls
t.controls=new{trackball:jf,orbit:vp,fly:yp}[i](t.camera,t.renderer.domElement),"fly"===i&&(t.controls.movementSpeed=2.5),"trackball"!==i&&"orbit"!==i||(t.controls.minDistance=.1,t.controls.maxDistance=5e4,t.controls.addEventListener("start",function(){return t.controlsEngaged=!0}),t.controls.addEventListener("change",function(){t.controlsEngaged&&(t.controlsDragging=!0,t.ignoreOneClick=!0)}),t.controls.addEventListener("end",function(){t.controlsEngaged=!1,t.controlsDragging=!1})),t.renderer.setSize(t.width,t.height),t.camera.aspect=t.width/t.height,t.camera.updateProjectionMatrix(),t.camera.position.z=1e3,t.camera.far=5e4,window.scene=t.scene},update:function(e){
// resize canvas
e.width&&e.height&&(e.container.style.width=e.width,e.container.style.height=e.height,e.renderer.setSize(e.width,e.height),e.camera.aspect=e.width/e.height,e.camera.updateProjectionMatrix()),e.navInfo.style.display=e.showNavInfo?null:"none"}});function xp(e,t){var n=new t;// To extract defaults
return{linkProp:function(t){
// link property config
return{default:n[t](),onChange:function(n,r){r[e][t](n)},triggerUpdate:!1}},linkMethod:function(t){
// link method pass-through
return function(n){for(var r=n[e],i=arguments.length,a=new Array(i>1?i-1:0),o=1;o<i;o++)a[o-1]=arguments[o];var s=r[t].apply(r,a);return s===r?this:s}}}}var wp=window.THREE?window.THREE:{AmbientLight:ac,DirectionalLight:ic},_p=xp("forceGraph",Ff),Mp=Object.assign.apply(Object,n(["jsonUrl","graphData","numDimensions","dagMode","dagLevelDistance","nodeRelSize","nodeId","nodeVal","nodeResolution","nodeColor","nodeAutoColorBy","nodeOpacity","nodeThreeObject","nodeThreeObjectExtend","linkSource","linkTarget","linkVisibility","linkColor","linkAutoColorBy","linkOpacity","linkWidth","linkResolution","linkCurvature","linkCurveRotation","linkMaterial","linkThreeObject","linkThreeObjectExtend","linkPositionUpdate","linkDirectionalArrowLength","linkDirectionalArrowColor","linkDirectionalArrowRelPos","linkDirectionalArrowResolution","linkDirectionalParticles","linkDirectionalParticleSpeed","linkDirectionalParticleWidth","linkDirectionalParticleColor","linkDirectionalParticleResolution","forceEngine","d3AlphaDecay","d3VelocityDecay","warmupTicks","cooldownTicks","cooldownTime","onEngineTick","onEngineStop"].map(function(t){return e({},t,_p.linkProp(t))}))),Ep=Object.assign.apply(Object,n(["refresh","d3Force"].map(function(t){return e({},t,_p.linkMethod(t))}))),Sp=xp("renderObjs",bp),Tp=Object.assign.apply(Object,n(["width","height","backgroundColor","showNavInfo","enablePointerInteraction"].map(function(t){return e({},t,Sp.linkProp(t))}))),Ap=Object.assign.apply(Object,n(["cameraPosition"].map(function(t){return e({},t,Sp.linkMethod(t))})));return md({props:t({nodeLabel:{default:"name",triggerUpdate:!1},linkLabel:{default:"name",triggerUpdate:!1},linkHoverPrecision:{default:1,onChange:function(e,t){return t.renderObjs.lineHoverPrecision(e)},triggerUpdate:!1},enableNavigationControls:{default:!0,onChange:function(e,t){var n=t.renderObjs.controls();n&&(n.enabled=e)},triggerUpdate:!1},enableNodeDrag:{default:!0,triggerUpdate:!1},onNodeDrag:{default:function(){},triggerUpdate:!1},onNodeDragEnd:{default:function(){},triggerUpdate:!1},onNodeClick:{default:function(){},triggerUpdate:!1},onNodeRightClick:{default:function(){},triggerUpdate:!1},onNodeHover:{default:function(){},triggerUpdate:!1},onLinkClick:{default:function(){},triggerUpdate:!1},onLinkRightClick:{default:function(){},triggerUpdate:!1},onLinkHover:{default:function(){},triggerUpdate:!1}},Mp,Tp),methods:t({pauseAnimation:function(e){return null!==e.animationFrameRequestId&&(cancelAnimationFrame(e.animationFrameRequestId),e.animationFrameRequestId=null),this},resumeAnimation:function(e){return null===e.animationFrameRequestId&&this._animationCycle(),this},_animationCycle:function(e){e.enablePointerInteraction&&(
// reset canvas cursor (override dragControls cursor)
this.renderer().domElement.style.cursor=null),// Frame cycle
e.forceGraph.tickFrame(),e.renderObjs.tick(),e.animationFrameRequestId=requestAnimationFrame(this._animationCycle)},scene:function(e){return e.renderObjs.scene()},
// Expose scene
camera:function(e){return e.renderObjs.camera()},
// Expose camera
renderer:function(e){return e.renderObjs.renderer()},
// Expose renderer
controls:function(e){return e.renderObjs.controls()},
// Expose controls
tbControls:function(e){return e.renderObjs.tbControls()},
// To be deprecated
_destructor:function(){this.pauseAnimation(),this.graphData({nodes:[],links:[]})}},Ep,Ap),stateInit:function(e){var t=e.controlType,n=e.rendererConfig;return{forceGraph:new Ff,renderObjs:bp({controlType:t,rendererConfig:n})}},init:function(e,t){
// Wipe DOM
e.innerHTML="",// Add relative container
e.appendChild(t.container=document.createElement("div")),t.container.style.position="relative";// Add renderObjs
var n=document.createElement("div");t.container.appendChild(n),t.renderObjs(n);var r,i=t.renderObjs.camera(),a=t.renderObjs.renderer(),o=t.renderObjs.controls();o.enabled=!!t.enableNavigationControls,t.lastSetCameraZ=i.position.z,t.container.appendChild(r=document.createElement("div")),r.className="graph-info-msg",r.textContent="",// config forcegraph
t.forceGraph.onLoading(function(){r.textContent="Loading..."}),t.forceGraph.onFinishLoading(function(){// Setup node drag interaction
if(r.textContent="",// sync graph data structures
t.graphData=t.forceGraph.graphData(),// re-aim camera, if still in default position (not user modified)
0===i.position.x&&0===i.position.y&&i.position.z===t.lastSetCameraZ&&(i.lookAt(t.forceGraph.position),t.lastSetCameraZ=i.position.z=150*Math.cbrt(t.graphData.nodes.length)),t.enableNodeDrag&&t.enablePointerInteraction&&"d3"===t.forceEngine){
// Can't access node positions programatically in ngraph
var e=new Fl(t.graphData.nodes.map(function(e){return e.__threeObj}),i,a.domElement);e.addEventListener("dragstart",function(e){o.enabled=!1;// Disable controls while dragging
var n=e.object.__data;n.__initialFixedPos={fx:n.fx,fy:n.fy,fz:n.fz},// lock node
["x","y","z"].forEach(function(e){return n["f".concat(e)]=n[e]}),// keep engine running at low intensity throughout drag
t.forceGraph.d3AlphaTarget(.3),// drag cursor
a.domElement.classList.add("grabbable")}),e.addEventListener("drag",function(e){t.ignoreOneClick=!0;// Don't click the node if it's being dragged
var n=e.object.__data;// Move fx/fy/fz (and x/y/z) of nodes based on object new position
["x","y","z"].forEach(function(t){return n["f".concat(t)]=n[t]=e.object.position[t]}),// prevent freeze while dragging
t.forceGraph.resetCountdown(),t.onNodeDrag(n)}),e.addEventListener("dragend",function(e){var n=e.object.__data,r=n.__initialFixedPos;r&&(["x","y","z"].forEach(function(e){var t="f".concat(e);void 0===r[t]&&(n[t]=void 0)}),delete n.__initialFixedPos,t.onNodeDragEnd(n)),t.forceGraph.d3AlphaTarget(0).resetCountdown(),// let the engine readjust after releasing fixed nodes
t.enableNavigationControls&&(o.enabled=!0),// clear cursor
a.domElement.classList.remove("grabbable")})}});// config renderObjs
var s=function(e){// recurse up object chain until finding the graph object
for(var t=e;t&&!t.hasOwnProperty("__graphObjType");)t=t.parent;return t};t.renderObjs.objects([// Populate scene
new wp.AmbientLight(12303291),new wp.DirectionalLight(16777215,.6),t.forceGraph]).hoverOrderComparator(function(e,t){
// Prioritize graph objects
var n=s(e);if(!n)return 1;var r=s(t);if(!r)return-1;// Prioritize nodes over links
var i=function(e){return"node"===e.__graphObjType};return i(r)-i(n)}).tooltipContent(function(e){var n=s(e);return n&&vd(t["".concat(n.__graphObjType,"Label")])(n.__data)||""}).onHover(function(e){
// Update tooltip and trigger onHover events
var n=s(e);if(n!==t.hoverObj){var r=t.hoverObj?t.hoverObj.__graphObjType:null,i=t.hoverObj?t.hoverObj.__data:null,a=n?n.__graphObjType:null,o=n?n.__data:null;r&&r!==a&&
// Hover out
t["on".concat("node"===r?"Node":"Link","Hover")](null,i),a&&
// Hover in
t["on".concat("node"===a?"Node":"Link","Hover")](o,r===a?i:null),t.hoverObj=n}}).onClick(function(e){
// Handle click events on objects
if(t.ignoreOneClick)
// f.e. because of dragend event
t.ignoreOneClick=!1;else{var n=s(e);n&&t["on".concat("node"===n.__graphObjType?"Node":"Link","Click")](n.__data)}}).onRightClick(function(e){
// Handle right-click events
var n=s(e);n&&t["on".concat("node"===n.__graphObjType?"Node":"Link","RightClick")](n.__data)}),//
// Kick-off renderer
this._animationCycle()}})});
//# sourceMappingURL=3d-force-graph.js.map